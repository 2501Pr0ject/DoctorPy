00, 01, …, 53 (7), (9) %c %c Locale’s appropriate date and time representation. (1) %x %x Locale’s appropriate date representation. (1) %X %X Locale’s appropriate time representation. (1) %% %% A literal '%' character. '%' % Several additional directives not required by the C89 standard are included for convenience. These parameters all correspond to ISO 8601 date values. Directive Meaning Example Notes %G %G ISO 8601 year with century representing the year that contains the greater part of the ISO week (%V). %V 0001, 0002, …, 2013, 2014, …, 9998, 9999 (8) %u %u ISO 8601 weekday as a decimal number where 1 is Monday. 1, 2, …, 7 %V %V ISO 8601 week as a decimal number with Monday as the first day of the week. Week 01 is the week containing Jan 4. 01, 02, …, 53 (8), (9) %:z %:z UTC offset in the form ±HH:MM[:SS[. ffffff]] (empty string if the object is naive). ±HH:MM[:SS[. ffffff]] (empty), +00:00, -04:00, +10:30, +06:34:15, -03:07:12. 345216 (6) These may not be available on all platforms when used with the strftime() method. The ISO 8601 year and ISO 8601 week directives are not interchangeable with the year and week number directives above. Calling strptime() with incomplete or ambiguous ISO 8601 directives will raise a ValueError. strftime() strptime() ValueError The full set of format codes supported varies across platforms, because Python calls the platform C library’s strftime() function, and platform variations are common. To see the full set of format codes supported on your platform, consult the strftime(3) documentation. There are also differences between platforms in handling of unsupported format specifiers. strftime() Added in version 3. 6: %G, %u and %V were added. %G %u %V Added in version 3. 12: %:z was added. %:z ### Technical Detail¶ Broadly speaking, d.