{
  "chunk_id": "python_official_python_official_library_275d02bc254e97ec_ea8f648931f7_chunk_011",
  "original_doc_id": "python_official_python_official_library_275d02bc254e97ec_ea8f648931f7",
  "content": "Changed in version 3. 3: Return type changed from a tuple to a tuple-like object with named attributes. Unset (delete) the environment variable named key. Such changes to the environment affect subprocesses started with os. system(), popen() or fork() and execv(). os. system() popen() fork() execv() Deletion of items in os. environ is automatically translated into a corresponding call to unsetenv(); however, calls to unsetenv() don’t update os. environ, so it is actually preferable to delete items of os. environ. os. environ unsetenv() unsetenv() os. environ os. environ Raises an auditing event os. unsetenv with argument key. os. unsetenv key Changed in version 3. 9: The function is now always available and is also available on Windows. Disassociate parts of the process execution context, and move them into a newly created namespace. See the unshare(2) man page for more details. The flags argument is a bit mask, combining zero or more of the CLONE_ constants, that specifies which parts of the execution context should be unshared from their existing associations and moved to a new namespace. If the flags argument is 0, no changes are made to the calling process’s execution context. 0 Availability: Linux >= 2. 6. 16. Added in version 3. 12. See also The setns() function. setns() Flags to the unshare() function, if the implementation supports them. See unshare(2) in the Linux manual for their exact effect and availability. unshare() ## File Object Creation¶ These functions create new file objects. (See also open() for opening file descriptors. ) open() Return an open file object connected to the file descriptor fd. This is an alias of the open() built-in function and accepts the same arguments. The only difference is that the first argument of fdopen() must always be an integer. open() fdopen() ## File Descriptor Operations¶ These functions operate on I/O streams referenced using file descriptors. File descriptors are small integers corresponding to a file that has been opened by the current process. For example, standard input is usually file descriptor 0, standard output is 1, and standard error is 2. Further files opened by a process will then be assigned 3, 4, 5, and so forth.",
  "title": "os — Miscellaneous operating system interfaces.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 11,
  "start_char": 24226,
  "end_char": 26442,
  "token_count": 493,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_275d02bc254e97ec.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:24.781583"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_275d02bc254e97ec_ea8f648931f7_chunk_011.txt"
}