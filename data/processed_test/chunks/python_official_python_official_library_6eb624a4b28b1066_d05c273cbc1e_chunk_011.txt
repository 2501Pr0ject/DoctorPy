date(2002, 12, 4). weekday() == 2 isoweekday() Return the day of the week as an integer, where Monday is 1 and Sunday is 7. For example, date(2002, 12, 4). isoweekday() == 3, a Wednesday. See also weekday(), isocalendar(). date(2002, 12, 4). isoweekday() == 3 weekday() isocalendar() Return a named tuple object with three components: year, week and weekday. year week weekday The ISO calendar is a widely used variant of the Gregorian calendar. [3] The ISO year consists of 52 or 53 full weeks, and where a week starts on a Monday and ends on a Sunday. The first week of an ISO year is the first (Gregorian) calendar week of a year containing a Thursday. This is called week number 1, and the ISO year of that Thursday is the same as its Gregorian year. For example, 2004 begins on a Thursday, so the first week of ISO year 2004 begins on Monday, 29 Dec 2003 and ends on Sunday, 4 Jan 2004: >>> from datetime import date >>> date(2003, 12, 29). isocalendar() datetime. IsoCalendarDate(year=2004, week=1, weekday=1) >>> date(2004, 1, 4). isocalendar() datetime. IsoCalendarDate(year=2004, week=1, weekday=7) Changed in version 3. 9: Result changed from a tuple to a named tuple. Return a string representing the date in ISO 8601 format, YYYY-MM-DD: YYYY-MM-DD >>> from datetime import date >>> date(2002, 12, 4). isoformat() '2002-12-04' For a date d, str(d) is equivalent to d. isoformat(). d str(d) d. isoformat() Return a string representing the date: >>> from datetime import date >>> date(2002, 12, 4). ctime() 'Wed Dec 4 00:00:00 2002' d. ctime() is equivalent to: d. ctime() time. ctime(time. mktime(d. timetuple())) on platforms where the native C ctime() function (which time.