{
  "chunk_id": "python_official_python_official_library_bfa9edd59fb6bc20_f9e9b8d89b43_chunk_026",
  "original_doc_id": "python_official_python_official_library_bfa9edd59fb6bc20_f9e9b8d89b43",
  "content": "## Text Sequence Type — str¶ str Textual data in Python is handled with str objects, or strings. Strings are immutable sequences of Unicode code points. String literals are written in a variety of ways: str Single quotes: 'allows embedded \"double\" quotes' Single quotes: 'allows embedded \"double\" quotes' 'allows embedded \"double\" quotes' Double quotes: \"allows embedded 'single' quotes\" Double quotes: \"allows embedded 'single' quotes\" \"allows embedded 'single' quotes\" Triple quoted: '''Three single quotes''', \"\"\"Three double quotes\"\"\" Triple quoted: '''Three single quotes''', \"\"\"Three double quotes\"\"\" '''Three single quotes''' \"\"\"Three double quotes\"\"\" Triple quoted strings may span multiple lines - all associated whitespace will be included in the string literal. String literals that are part of a single expression and have only whitespace between them will be implicitly converted to a single string literal. That is, (\"spam \" \"eggs\") == \"spam eggs\". (\"spam \" \"eggs\") == \"spam eggs\" See String and Bytes literals for more about the various forms of string literal, including supported escape sequences, and the r (“raw”) prefix that disables most escape sequence processing. r Strings may also be created from other objects using the str constructor. str Since there is no separate “character” type, indexing a string produces strings of length 1. That is, for a non-empty string s, s[0] == s[0:1]. s[0] == s[0:1] There is also no mutable string type, but str. join() or io. StringIO can be used to efficiently construct strings from multiple fragments. str. join() io. StringIO Changed in version 3. 3: For backwards compatibility with the Python 2 series, the u prefix is once again permitted on string literals. It has no effect on the meaning of string literals and cannot be combined with the r prefix. u r Return a string version of object. If object is not provided, returns the empty string. Otherwise, the behavior of str() depends on whether encoding or errors is given, as follows. str() If neither encoding nor errors is given, str(object) returns type(object). str(object), which is the “informal” or nicely printable string representation of object. For string objects, this is the string itself. If object does not have a str() method, then str() falls back to returning repr(object).",
  "title": "Built-in Types.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 26,
  "start_char": 51379,
  "end_char": 53690,
  "token_count": 500,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_bfa9edd59fb6bc20.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:56:56.203025"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_bfa9edd59fb6bc20_f9e9b8d89b43_chunk_026.txt"
}