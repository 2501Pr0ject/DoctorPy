{
  "chunk_id": "python_official_python_official_library_0a70a89a6fb229e9_972eb7e87b87_chunk_005",
  "original_doc_id": "python_official_python_official_library_0a70a89a6fb229e9_972eb7e87b87",
  "content": "\" precision][type] options ::= [[fill]align][sign][\"z\"][\"#\"][\"0\"] fill ::= <any character> align ::= \"<\" | \">\" | \"=\" | \"^\" sign ::= \"+\" | \"-\" | \" \" width ::= digit+ grouping ::= \",\" | \"_\" precision ::= digit+ type ::= \"b\" | \"c\" | \"d\" | \"e\" | \"E\" | \"f\" | \"F\" | \"g\" | \"G\" | \"n\" | \"o\" | \"s\" | \"x\" | \"X\" | \"%\" options width grouping precision type fill align sign digit digit If a valid align value is specified, it can be preceded by a fill character that can be any character and defaults to a space if omitted. It is not possible to use a literal curly brace (”{” or “}”) as the fill character in a formatted string literal or when using the str. format() method. However, it is possible to insert a curly brace with a nested replacement field. This limitation doesn’t affect the format() function. { } str. format() format() The meaning of the various alignment options is as follows: Option Meaning '<' '<' Forces the field to be left-aligned within the available space (this is the default for most objects). '>' '>' Forces the field to be right-aligned within the available space (this is the default for numbers). '=' '=' Forces the padding to be placed after the sign (if any) but before the digits. This is used for printing fields in the form ‘+000000120’. This alignment option is only valid for numeric types, excluding complex. It becomes the default for numbers when ‘0’ immediately precedes the field width. complex '^' '^' Forces the field to be centered within the available space. Note that unless a minimum field width is defined, the field width will always be the same size as the data to fill it, so that the alignment option has no meaning in this case. The sign option is only valid for number types, and can be one of the following: Option Meaning '+' '+' Indicates that a sign should be used for both positive as well as negative numbers. '-' '-' Indicates that a sign should be used only for negative numbers (this is the default behavior). space Indicates that a leading space should be used on positive numbers, and a minus sign on negative numbers.",
  "title": "string — Common string operations.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 5,
  "start_char": 11396,
  "end_char": 13471,
  "token_count": 483,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_0a70a89a6fb229e9.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:09.217187"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_0a70a89a6fb229e9_972eb7e87b87_chunk_005.txt"
}