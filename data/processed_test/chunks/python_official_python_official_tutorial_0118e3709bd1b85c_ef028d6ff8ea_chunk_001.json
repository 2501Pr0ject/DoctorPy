{
  "chunk_id": "python_official_python_official_tutorial_0118e3709bd1b85c_ef028d6ff8ea_chunk_001",
  "original_doc_id": "python_official_python_official_tutorial_0118e3709bd1b85c_ef028d6ff8ea",
  "content": "add_argument('filenames', nargs='+') parser. add_argument('-l', '--lines', type=int, default=10) args = parser. parse_args() print(args) When run at the command line with python top. py --lines=5 alpha. txt beta. txt, the script sets args. lines to 5 and args. filenames to ['alpha. txt', 'beta. txt']. python top. py --lines=5 alpha. txt beta. txt args. lines 5 args. filenames ['alpha. txt', 'beta. txt'] ## 10. 4. Error Output Redirection and Program Termination¶ The sys module also has attributes for stdin, stdout, and stderr. The latter is useful for emitting warnings and error messages to make them visible even when stdout has been redirected: sys >>> sys. stderr. write('Warning, log file not found starting a new one\\n') Warning, log file not found starting a new one The most direct way to terminate a script is to use sys. exit(). sys. exit() ## 10. 5. String Pattern Matching¶ The re module provides regular expression tools for advanced string processing. For complex matching and manipulation, regular expressions offer succinct, optimized solutions: re >>> import re >>> re. findall(r'\\bf[a-z]*', 'which foot or hand fell fastest') ['foot', 'fell', 'fastest'] >>> re. sub(r'(\\b[a-z]+) \\1', r'\\1', 'cat in the the hat') 'cat in the hat' When only simple capabilities are needed, string methods are preferred because they are easier to read and debug: >>> 'tea for too'. replace('too', 'two') 'tea for two' ## 10. 6. Mathematics¶ The math module gives access to the underlying C library functions for floating-point math: math >>> import math >>> math. cos(math. pi / 4) 0. 70710678118654757 >>> math. log(1024, 2) 10. 0 The random module provides tools for making random selections: random >>> import random >>> random. choice(['apple', 'pear', 'banana']) 'apple' >>> random. sample(range(100), 10) # sampling without replacement [30, 83, 16, 4, 8, 81, 41, 50, 18, 33] >>> random.",
  "title": "10. Brief Tour of the Standard Library.13.5",
  "section": "python_official",
  "subsection": "tutorial",
  "chunk_index": 1,
  "start_char": 2182,
  "end_char": 4079,
  "token_count": 499,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_tutorial_0118e3709bd1b85c.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:05.420481"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_tutorial_0118e3709bd1b85c_ef028d6ff8ea_chunk_001.txt"
}