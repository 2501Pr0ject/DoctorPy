{
  "chunk_id": "python_official_python_official_library_b3ab419475b0789f_74784175dd21_chunk_002",
  "original_doc_id": "python_official_python_official_library_b3ab419475b0789f_74784175dd21",
  "content": "') and leading double slashes ('//') are not, since this would change the meaning of a path for various reasons (e. g. symbolic links, UNC paths): '. ' '//' >>> PurePath('foo//bar') PurePosixPath('foo/bar') >>> PurePath('//foo/bar') PurePosixPath('//foo/bar') >>> PurePath('foo/. /bar') PurePosixPath('foo/bar') >>> PurePath('foo/. /bar') PurePosixPath('foo/. /bar') (a naïve approach would make PurePosixPath('foo/. /bar') equivalent to PurePosixPath('bar'), which is wrong if foo is a symbolic link to another directory) PurePosixPath('foo/. /bar') PurePosixPath('bar') foo Pure path objects implement the os. PathLike interface, allowing them to be used anywhere the interface is accepted. os. PathLike Changed in version 3. 6: Added support for the os. PathLike interface. os. PathLike A subclass of PurePath, this path flavour represents non-Windows filesystem paths: PurePath >>> PurePosixPath('/etc/hosts') PurePosixPath('/etc/hosts') pathsegments is specified similarly to PurePath. PurePath A subclass of PurePath, this path flavour represents Windows filesystem paths, including UNC paths: PurePath >>> PureWindowsPath('c:/', 'Users', 'Ximénez') PureWindowsPath('c:/Users/Ximénez') >>> PureWindowsPath('//server/share/file') PureWindowsPath('//server/share/file') pathsegments is specified similarly to PurePath. PurePath Regardless of the system you’re running on, you can instantiate all of these classes, since they don’t provide any operation that does system calls. ### General properties¶ Paths are immutable and hashable. Paths of a same flavour are comparable and orderable.",
  "title": "pathlib — Object-oriented filesystem paths.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 2,
  "start_char": 4116,
  "end_char": 5708,
  "token_count": 387,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_b3ab419475b0789f.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:32.486563"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_b3ab419475b0789f_74784175dd21_chunk_002.txt"
}