group() 'the the' \ & & \& [&] (. ). (. =foo) (. :foo) foo P (. :. ). >>> m = re. match("([abc])+", "abc") >>> m. groups() ('c',) >>> m = re. match("(. :[abc])+", "abc") >>> m. groups() () * (. :. ) (. P<name>. ) >>> p = re. compile(r'(. P<word>\b\w+\b)') >>> m = p. search( '(((( Lots of punctuation )))' ) >>> m. group('word') 'Lots' >>> m. group(1) 'Lots' groupdict() >>> m = re. match(r'(. P<first>\w+) (. P<last>\w+)', 'Jane Doe') >>> m. groupdict() {'first': 'Jane', 'last': 'Doe'} imaplib InternalDate = re. compile(r'INTERNALDATE "' r'(. P<day>[ 123][0-9])-(. P<mon>[A-Z][a-z][a-z])-' r'(. P<year>[0-9][0-9][0-9][0-9])' r' (. P<hour>[0-9][0-9]):(. P<min>[0-9][0-9]):(. P<sec>[0-9][0-9])' r' (. P<zonen>[-+])(. P<zoneh>[0-9][0-9])(. P<zonem>[0-9][0-9])' r'"') m. group('zonem') (. )\1 (. P=name) \b(\w+)\s+\1\b \b(. P<word>\w+)\s+(. P=word)\b >>> p = re. compile(r'\b(. P<word>\w+)\s+(. P=word)\b') >>> p. search('Paris in the the spring'). group() 'the the' (. =. ). (. ). news. rc news rc. *[. ]. *$. $ foo. bar autoexec. bat sendmail. cf printers. conf bat. *[. ][^b]. *$ bat b foo. bar. *. $ b a t foo. bar autoexec. bat sendmail. cf. *. $ sendmail. cf bat exe. *.