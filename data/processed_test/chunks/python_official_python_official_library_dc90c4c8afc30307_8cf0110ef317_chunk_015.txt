0000050000069649e-05 >>> expm1(1e-5) # result accurate to full precision 1. 0000050000166668e-05 log(x)/log(base) log(x, 2) int. bit_length() log(x, 10) pow(1. 0, x) pow(x, 0. 0) 1. 0 pow(x, y) ValueError ** math. pow() float ** pow() pow(0. 0, -inf) pow(-0. 0, -inf) inf ValueError sqrt(sum((px - qx) ** 2. 0 for px, qx in zip(p, q))) sqrt(sum(x**2 for x in coordinates)) (x, y) sqrt(x*x + y*y) 1 ValueError sum(itertools. starmap(operator. mul, zip(p, q, strict=True))) 0 pi -pi/2 pi/2 -pi/2 pi/2 atan(y / x) -pi pi (x, y) atan2() atan(1) atan2(1, 1) pi/4 atan2(-1, -1) -3*pi/4 erf() def phi(x): 'Cumulative distribution function for the standard normal distribution' return (1. 0 + erf(x / sqrt(2. 0))) / 2. 0 1. 0 - erf(x) -math. inf float('inf') float('nan') math. nan float('nan') isnan() is == >>> import math >>> math. nan == math. nan False >>> float('nan') == float('nan') False >>> math. isnan(math. nan) True >>> math. isnan(float('nan')) True math ValueError sqrt(-1. 0) log(0. 0) OverflowError exp(1000. 0) pow(float('nan'), 0. 0) hypot(float('nan'), float('inf')) cmath math numbers cmath.