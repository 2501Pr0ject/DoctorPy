{
  "chunk_id": "python_official_python_official_library_275d02bc254e97ec_ea8f648931f7_chunk_012",
  "original_doc_id": "python_official_python_official_library_275d02bc254e97ec_ea8f648931f7",
  "content": "The name “file descriptor” is slightly deceptive; on Unix platforms, sockets and pipes are also referenced by file descriptors. The fileno() method can be used to obtain the file descriptor associated with a file object when required. Note that using the file descriptor directly will bypass the file object methods, ignoring aspects such as internal buffering of data. fileno() Close file descriptor fd. Note This function is intended for low-level I/O and must be applied to a file descriptor as returned by os. open() or pipe(). To close a “file object” returned by the built-in function open() or by popen() or fdopen(), use its close() method. os. open() pipe() open() popen() fdopen() close() Close all file descriptors from fd_low (inclusive) to fd_high (exclusive), ignoring errors. Equivalent to (but much faster than): for fd in range(fd_low, fd_high): try: os. close(fd) except OSError: pass Copy count bytes from file descriptor src, starting from offset offset_src, to file descriptor dst, starting from offset offset_dst. If offset_src is None, then src is read from the current position; respectively for offset_dst. None In Linux kernel older than 5. 3, the files pointed to by src and dst must reside in the same filesystem, otherwise an OSError is raised with errno set to errno. EXDEV. OSError errno errno. EXDEV This copy is done without the additional cost of transferring data from the kernel to user space and then back into the kernel. Additionally, some filesystems could implement extra optimizations, such as the use of reflinks (i. e. , two or more inodes that share pointers to the same copy-on-write disk blocks; supported file systems include btrfs and XFS) and server-side copy (in the case of NFS). The function copies bytes between two file descriptors. Text options, like the encoding and the line ending, are ignored. The return value is the amount of bytes copied. This could be less than the amount requested. Note On Linux, os. copy_file_range() should not be used for copying a range of a pseudo file from a special filesystem like procfs and sysfs. It will always copy no bytes and return 0 as if the file was empty because of a known Linux kernel issue. os. copy_file_range() Availability: Linux >= 4. 5 with glibc >= 2. 27.",
  "title": "os — Miscellaneous operating system interfaces.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 12,
  "start_char": 26442,
  "end_char": 28708,
  "token_count": 499,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_275d02bc254e97ec.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:24.782509"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_275d02bc254e97ec_ea8f648931f7_chunk_012.txt"
}