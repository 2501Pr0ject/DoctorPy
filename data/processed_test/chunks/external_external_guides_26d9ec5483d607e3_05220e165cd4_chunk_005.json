{
  "chunk_id": "external_external_guides_26d9ec5483d607e3_05220e165cd4_chunk_005",
  "original_doc_id": "external_external_guides_26d9ec5483d607e3_05220e165cd4",
  "content": "lstrip() if stripped: indent = min(indent, len(line) - len(stripped)) # Remove indentation (first line is special): trimmed = [lines[0]. strip()] if indent < sys. maxsize: for line in lines[1:]: trimmed. append(line[indent:]. rstrip()) # Strip off trailing and leading blank lines: while trimmed and not trimmed[-1]: trimmed. pop() while trimmed and not trimmed[0]: trimmed. pop(0) # Return a single string: return '\\n'. join(trimmed) def foo(): \"\"\" This is the second line of the docstring. \"\"\" >>> print repr(foo. __doc__) '\\n This is the second line of the docstring. \\n ' >>> foo. __doc__. splitlines() ['', ' This is the second line of the docstring. ', ' '] >>> trim(foo. __doc__) 'This is the second line of the docstring. ' def foo(): \"\"\"A multi-line docstring. \"\"\" def bar(): \"\"\" A multi-line docstring. \"\"\".",
  "title": "PEP 257 â€“ Docstring Conventions | peps.python.org",
  "section": "external",
  "subsection": "guides",
  "chunk_index": 5,
  "start_char": 10972,
  "end_char": 11789,
  "token_count": 216,
  "metadata": {
    "original_file": "data/raw/documentation_test/external/external_guides_26d9ec5483d607e3.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:39.243748"
  },
  "file_path": "data/processed_test/chunks/external_external_guides_26d9ec5483d607e3_05220e165cd4_chunk_005.txt"
}