{
  "chunk_id": "python_official_python_official_library_0a70a89a6fb229e9_972eb7e87b87_chunk_016",
  "original_doc_id": "python_official_python_official_library_0a70a89a6fb229e9_972eb7e87b87",
  "content": "Note that re. VERBOSE will always be added to the flags, so custom idpatterns must follow conventions for verbose regular expressions. Added in version 3. 2. flags – The regular expression flags that will be applied when compiling the regular expression used for recognizing substitutions. The default value is re. IGNORECASE. Note that re. VERBOSE will always be added to the flags, so custom idpatterns must follow conventions for verbose regular expressions. re. IGNORECASE re. VERBOSE Added in version 3. 2. Alternatively, you can provide the entire regular expression pattern by overriding the class attribute pattern. If you do this, the value must be a regular expression object with four named capturing groups. The capturing groups correspond to the rules given above, along with the invalid placeholder rule: escaped – This group matches the escape sequence, e. g. $$, in the default pattern. escaped – This group matches the escape sequence, e. g. $$, in the default pattern. $$ named – This group matches the unbraced placeholder name; it should not include the delimiter in capturing group. named – This group matches the unbraced placeholder name; it should not include the delimiter in capturing group. braced – This group matches the brace enclosed placeholder name; it should not include either the delimiter or braces in the capturing group. braced – This group matches the brace enclosed placeholder name; it should not include either the delimiter or braces in the capturing group. invalid – This group matches any other delimiter pattern (usually a single delimiter), and it should appear last in the regular expression. invalid – This group matches any other delimiter pattern (usually a single delimiter), and it should appear last in the regular expression. The methods on this class will raise ValueError if the pattern matches the template without one of these named groups matching. ValueError ## Helper functions¶ Split the argument into words using str. split(), capitalize each word using str. capitalize(), and join the capitalized words using str. join(). If the optional second argument sep is absent or None, runs of whitespace characters are replaced by a single space and leading and trailing whitespace are removed, otherwise sep is used to split and join the words. str. split() str. capitalize() str.",
  "title": "string — Common string operations.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 16,
  "start_char": 33320,
  "end_char": 35659,
  "token_count": 449,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_0a70a89a6fb229e9.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:09.226799"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_0a70a89a6fb229e9_972eb7e87b87_chunk_016.txt"
}