replace(tzinfo=None) < dstoff: return timedelta(hours=1) else: return timedelta(0) The default implementation of dst() raises NotImplementedError. dst() NotImplementedError Changed in version 3. 7: The DST offset is not restricted to a whole number of minutes. Return the time zone name corresponding to the datetime object dt, as a string. Nothing about string names is defined by the datetime module, and there’s no requirement that it mean anything in particular. For example, "GMT", "UTC", "-500", "-5:00", "EDT", "US/Eastern", "America/New York" are all valid replies. Return None if a string name isn’t known. Note that this is a method rather than a fixed string primarily because some tzinfo subclasses will wish to return different names depending on the specific value of dt passed, especially if the tzinfo class is accounting for daylight time. datetime datetime "GMT" "UTC" "-500" "-5:00" "EDT" "US/Eastern" "America/New York" None tzinfo tzinfo The default implementation of tzname() raises NotImplementedError. tzname() NotImplementedError These methods are called by a datetime or time object, in response to their methods of the same names. A datetime object passes itself as the argument, and a time object passes None as the argument. A tzinfo subclass’s methods should therefore be prepared to accept a dt argument of None, or of class datetime. datetime time datetime time None tzinfo None datetime When None is passed, it’s up to the class designer to decide the best response. For example, returning None is appropriate if the class wishes to say that time objects don’t participate in the tzinfo protocols. It may be more useful for utcoffset(None) to return the standard UTC offset, as there is no other convention for discovering the standard offset. None None tzinfo utcoffset(None) When a datetime object is passed in response to a datetime method, dt. tzinfo is the same object as self. tzinfo methods can rely on this, unless user code calls tzinfo methods directly. The intent is that the tzinfo methods interpret dt as being in local time, and not need worry about objects in other time zones. datetime datetime dt. tzinfo tzinfo tzinfo tzinfo There is one more tzinfo method that a subclass may wish to override: tzinfo This is called from the default datetime.