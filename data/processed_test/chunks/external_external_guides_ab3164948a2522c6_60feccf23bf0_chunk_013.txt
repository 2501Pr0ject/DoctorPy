Because a Python dictionary is used to hold configuration information, and since you can populate that dictionary using different means, you have more options for configuration. For example, you can use a configuration file in JSON format, or, if you have access to YAML processing functionality, a file in YAML format, to populate the configuration dictionary. Or, of course, you can construct the dictionary in Python code, receive it in pickled form over a socket, or use whatever approach makes sense for your application. Here’s an example of the same configuration as above, in YAML format for the new dictionary-based approach: version: 1 formatters: simple: format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s' handlers: console: class: logging. StreamHandler level: DEBUG formatter: simple stream: ext://sys. stdout loggers: simpleExample: level: DEBUG handlers: [console] propagate: no root: level: DEBUG handlers: [console] For more information about logging using a dictionary, see Configuration functions. ### What happens if no configuration is provided¶ If no logging configuration is provided, it is possible to have a situation where a logging event needs to be output, but no handlers can be found to output the event. The event is output using a ‘handler of last resort’, stored in lastResort. This internal handler is not associated with any logger, and acts like a StreamHandler which writes the event description message to the current value of sys. stderr (therefore respecting any redirections which may be in effect). No formatting is done on the message - just the bare event description message is printed. The handler’s level is set to WARNING, so all events at this and greater severities will be output. lastResort StreamHandler sys. stderr WARNING Changed in version 3. 2: For versions of Python prior to 3. 2, the behaviour is as follows: If raiseExceptions is False (production mode), the event is silently dropped. If raiseExceptions is False (production mode), the event is silently dropped. raiseExceptions False If raiseExceptions is True (development mode), a message ‘No handlers could be found for logger X. Y. Z’ is printed once. If raiseExceptions is True (development mode), a message ‘No handlers could be found for logger X. Y. Z’ is printed once. raiseExceptions True To obtain the pre-3.