ffffff]] microsecond >>> from datetime import datetime, timezone >>> datetime(2019, 5, 18, 15, 17, 8, 132263). isoformat() '2019-05-18T15:17:08. 132263' >>> datetime(2019, 5, 18, 15, 17, tzinfo=timezone. utc). isoformat() '2019-05-18T15:17:00+00:00' 'T' >>> from datetime import tzinfo, timedelta, datetime >>> class TZ(tzinfo):. """A time zone with an arbitrary, constant -06:39 offset. """. def utcoffset(self, dt):. return timedelta(hours=-6, minutes=-39). >>> datetime(2002, 12, 25, tzinfo=TZ()). isoformat(' ') '2002-12-25 00:00:00-06:39' >>> datetime(2009, 11, 27, microsecond=100, tzinfo=TZ()). isoformat() '2009-11-27T00:00:00. 000100-06:39' 'auto' 'auto' 'seconds' microsecond 'microseconds' 'hours' hour HH 'minutes' hour minute HH:MM 'seconds' hour minute second HH:MM:SS 'milliseconds' HH:MM:SS. sss 'microseconds' HH:MM:SS. ffffff ValueError >>> from datetime import datetime >>> datetime. now(). isoformat(timespec='minutes') '2002-12-25T00:00' >>> dt = datetime(2015, 1, 1, 12, 30, 59, 0) >>> dt. isoformat(timespec='microseconds') '2015-01-01T12:30:59. 000000' datetime d str(d) d. isoformat(' ') >>> from datetime import datetime >>> datetime(2002, 12, 4, 20, 30, 40). ctime() 'Wed Dec 4 20:30:40 2002' d. ctime() time. ctime(time. mktime(d. timetuple())) ctime() time. ctime() datetime. ctime() datetime. isoformat() datetime. strftime() datetime str. format() datetime.