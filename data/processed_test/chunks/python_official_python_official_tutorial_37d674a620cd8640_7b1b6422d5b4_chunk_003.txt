For example, this listcomp combines the elements of two lists if they are not equal: for for if for if >>> [(x, y) for x in [1,2,3] for y in [3,1,4] if x. = y] [(1, 3), (1, 4), (2, 3), (2, 1), (2, 4), (3, 1), (3, 4)] and itâ€™s equivalent to: >>> combs = [] >>> for x in [1,2,3]:. for y in [3,1,4]:. if x. = y:. combs. append((x, y)). >>> combs [(1, 3), (1, 4), (2, 3), (2, 1), (2, 4), (3, 1), (3, 4)] Note how the order of the for and if statements is the same in both these snippets. for if If the expression is a tuple (e. g. the (x, y) in the previous example), it must be parenthesized. (x, y) >>> vec = [-4, -2, 0, 2, 4] >>> # create a new list with the values doubled >>> [x*2 for x in vec] [-8, -4, 0, 4, 8] >>> # filter the list to exclude negative numbers >>> [x for x in vec if x >= 0] [0, 2, 4] >>> # apply a function to all the elements >>> [abs(x) for x in vec] [4, 2, 0, 2, 4] >>> # call a method on each element >>> freshfruit = [' banana', ' loganberry ', 'passion fruit '] >>> [weapon.