stderr The printable characters are those which in the Unicode character database (see unicodedata) have a general category in group Letter, Mark, Number, Punctuation, or Symbol (L, M, N, P, or S); plus the ASCII space 0x20. Nonprintable characters are those in group Separator or Other (Z or C), except the ASCII space. unicodedata Return True if there are only whitespace characters in the string and there is at least one character, False otherwise. True False A character is whitespace if in the Unicode character database (see unicodedata), either its general category is Zs (“Separator, space”), or its bidirectional class is one of WS, B, or S. unicodedata Zs WS B S Return True if the string is a titlecased string and there is at least one character, for example uppercase characters may only follow uncased characters and lowercase characters only cased ones. Return False otherwise. True False Return True if all cased characters [4] in the string are uppercase and there is at least one cased character, False otherwise. True False >>> 'BANANA'. isupper() True >>> 'banana'. isupper() False >>> 'baNana'. isupper() False >>> ' '. isupper() False Return a string which is the concatenation of the strings in iterable. A TypeError will be raised if there are any non-string values in iterable, including bytes objects. The separator between elements is the string providing this method. TypeError bytes Return the string left justified in a string of length width. Padding is done using the specified fillchar (default is an ASCII space). The original string is returned if width is less than or equal to len(s). len(s) Return a copy of the string with all the cased characters [4] converted to lowercase. The lowercasing algorithm used is described in section 3. 13 ‘Default Case Folding’ of the Unicode Standard. Return a copy of the string with leading characters removed. The chars argument is a string specifying the set of characters to be removed. If omitted or None, the chars argument defaults to removing whitespace. The chars argument is not a prefix; rather, all combinations of its values are stripped: None >>> ' spacious '. lstrip() 'spacious ' >>> 'www. example. com'. lstrip('cmowz. ') 'example. com' See str.