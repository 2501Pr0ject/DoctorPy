{
  "chunk_id": "python_official_python_official_library_bfa9edd59fb6bc20_f9e9b8d89b43_chunk_039",
  "original_doc_id": "python_official_python_official_library_bfa9edd59fb6bc20_f9e9b8d89b43",
  "content": "' To include a literal { or }, use a double bracket: { } >>> x = 42 >>> f'{{x}} is {x}' '{x} is 42' Functions can also be used, and format specifiers: >>> from math import sqrt >>> f'√2 \\N{ALMOST EQUAL TO} {sqrt(2):. 5f}' '√2 ≈ 1. 41421' Any non-string expression is converted using str(), by default: str() >>> from fractions import Fraction >>> f'{Fraction(1, 3)}' '1/3' To use an explicit conversion, use the. (exclamation mark) operator, followed by any of the valid formats, which are:. Conversion Meaning. a. a ascii() ascii(). r. r repr() repr(). s. s str() str() For example: >>> from fractions import Fraction >>> f'{Fraction(1, 3). s}' '1/3' >>> f'{Fraction(1, 3). r}' 'Fraction(1, 3)' >>> question = '¿Dónde está el Presidente. ' >>> print(f'{question. a}') '\\xbfD\\xf3nde est\\xe1 el Presidente. ' While debugging it may be helpful to see both the expression and its value, by using the equals sign (=) after the expression. This preserves spaces within the brackets, and can be used with a converter. By default, the debugging operator uses the repr() (. r) conversion. For example: = repr(). r >>> from fractions import Fraction >>> calculation = Fraction(1, 3) >>> f'{calculation=}' 'calculation=Fraction(1, 3)' >>> f'{calculation = }' 'calculation = Fraction(1, 3)' >>> f'{calculation =. s}' 'calculation = 1/3' Once the output has been evaluated, it can be formatted using a format specifier following a colon (':'). After the expression has been evaluated, and possibly converted to a string, the format() method of the result is called with the format specifier, or the empty string if no format specifier is given. The formatted result is then used as the final value for the replacement field. For example: ':' __format__() >>> from fractions import Fraction >>> f'{Fraction(1, 7):. 6f}' '0.",
  "title": "Built-in Types.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 39,
  "start_char": 78669,
  "end_char": 80479,
  "token_count": 495,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_bfa9edd59fb6bc20.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:56:56.214832"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_bfa9edd59fb6bc20_f9e9b8d89b43_chunk_039.txt"
}