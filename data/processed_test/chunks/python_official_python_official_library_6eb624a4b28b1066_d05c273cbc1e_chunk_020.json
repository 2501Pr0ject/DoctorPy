{
  "chunk_id": "python_official_python_official_library_6eb624a4b28b1066_d05c273cbc1e_chunk_020",
  "original_doc_id": "python_official_python_official_library_6eb624a4b28b1066_d05c273cbc1e",
  "content": "As for addition, the result has the same tzinfo attribute as the input datetime, and no time zone adjustments are done even if the input is aware. datetime2 datetime2 + timedelta == datetime1 tzinfo Subtraction of a datetime from a datetime is defined only if both operands are naive, or if both are aware. If one is aware and the other is naive, TypeError is raised. If both are naive, or both are aware and have the same tzinfo attribute, the tzinfo attributes are ignored, and the result is a timedelta object t such that datetime2 + t == datetime1. No time zone adjustments are done in this case. If both are aware and have different tzinfo attributes, a-b acts as if a and b were first converted to naive UTC datetimes. The result is (a. replace(tzinfo=None) - a. utcoffset()) - (b. replace(tzinfo=None) - b. utcoffset()) except that the implementation never overflows. Subtraction of a datetime from a datetime is defined only if both operands are naive, or if both are aware. If one is aware and the other is naive, TypeError is raised. datetime datetime TypeError If both are naive, or both are aware and have the same tzinfo attribute, the tzinfo attributes are ignored, and the result is a timedelta object t such that datetime2 + t == datetime1. No time zone adjustments are done in this case. tzinfo tzinfo timedelta t datetime2 + t == datetime1 If both are aware and have different tzinfo attributes, a-b acts as if a and b were first converted to naive UTC datetimes. The result is (a. replace(tzinfo=None) - a. utcoffset()) - (b. replace(tzinfo=None) - b. utcoffset()) except that the implementation never overflows. tzinfo a-b a b (a. replace(tzinfo=None) - a. utcoffset()) - (b. replace(tzinfo=None) - b. utcoffset()) datetime objects are equal if they represent the same date and time, taking into account the time zone. Naive and aware datetime objects are never equal. If both comparands are aware, and have the same tzinfo attribute, the tzinfo and fold attributes are ignored and the base datetimes are compared.",
  "title": "datetime â€” Basic date and time types.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 20,
  "start_char": 39962,
  "end_char": 41996,
  "token_count": 480,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_6eb624a4b28b1066.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:01.398250"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_6eb624a4b28b1066_d05c273cbc1e_chunk_020.txt"
}