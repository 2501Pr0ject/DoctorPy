strptime() %U %W %Y Similar to %U and %W, %V is only used in calculations when the day of the week and the ISO year (%G) are specified in a strptime() format string. Also note that %G and %Y are not interchangeable. Similar to %U and %W, %V is only used in calculations when the day of the week and the ISO year (%G) are specified in a strptime() format string. Also note that %G and %Y are not interchangeable. %U %W %V %G strptime() %G %Y When used with the strptime() method, the leading zero is optional for formats %d, %m, %H, %I, %M, %S, %j, %U, %W, and %V. Format %y does require a leading zero. When used with the strptime() method, the leading zero is optional for formats %d, %m, %H, %I, %M, %S, %j, %U, %W, and %V. Format %y does require a leading zero. strptime() %d %m %H %I %M %S %j %U %W %V %y When parsing a month and day using strptime(), always include a year in the format. If the value you need to parse lacks a year, append an explicit dummy leap year. Otherwise your code will raise an exception when it encounters leap day because the default year used by the parser is not a leap year. Users run into this bug every four yearsâ€¦ >>> month_day = "02/29" >>> datetime. strptime(f"{month_day};1984", "%m/%d;%Y") # No leap year bug. datetime. datetime(1984, 2, 29, 0, 0) Deprecated since version 3. 13, will be removed in version 3. 15: strptime() calls using a format string containing a day of month without a year now emit a DeprecationWarning. In 3. 15 or later we may change this into an error or change the default year to a leap year. See gh-70647. When parsing a month and day using strptime(), always include a year in the format. If the value you need to parse lacks a year, append an explicit dummy leap year.