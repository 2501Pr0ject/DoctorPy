{
  "chunk_id": "python_official_python_official_library_ccf716b46391ca56_40d31454785a_chunk_027",
  "original_doc_id": "python_official_python_official_library_ccf716b46391ca56_40d31454785a",
  "content": "groupdict() {'first_name': 'Malcolm', 'last_name': 'Reynolds'} Return the indices of the start and end of the substring matched by group; group defaults to zero (meaning the whole matched substring). Return -1 if group exists but did not contribute to the match. For a match object m, and a group g that did contribute to the match, the substring matched by group g (equivalent to m. group(g)) is -1 m. group(g) m. string[m. start(g):m. end(g)] Note that m. start(group) will equal m. end(group) if group matched a null string. For example, after m = re. search('b(c. )', 'cba'), m. start(0) is 1, m. end(0) is 2, m. start(1) and m. end(1) are both 2, and m. start(2) raises an IndexError exception. m. start(group) m. end(group) m = re. search('b(c. )', 'cba') m. start(0) m. end(0) m. start(1) m. end(1) m. start(2) IndexError An example that will remove remove_this from email addresses: >>> email = \"tony@tiremove_thisger. net\" >>> m = re. search(\"remove_this\", email) >>> email[:m. start()] + email[m. end():] 'tony@tiger. net' For a match m, return the 2-tuple (m. start(group), m. end(group)). Note that if group did not contribute to the match, this is (-1, -1). group defaults to zero, the entire match. (m. start(group), m. end(group)) (-1, -1) The value of pos which was passed to the search() or match() method of a regex object. This is the index into the string at which the RE engine started looking for a match. search() match() The value of endpos which was passed to the search() or match() method of a regex object. This is the index into the string beyond which the RE engine will not go. search() match() The integer index of the last matched capturing group, or None if no group was matched at all.",
  "title": "re â€” Regular expression operations.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 27,
  "start_char": 53031,
  "end_char": 54751,
  "token_count": 488,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_ccf716b46391ca56.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:36.825246"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_ccf716b46391ca56_40d31454785a_chunk_027.txt"
}