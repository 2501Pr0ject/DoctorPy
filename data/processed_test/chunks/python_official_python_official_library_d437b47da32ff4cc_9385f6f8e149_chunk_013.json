{
  "chunk_id": "python_official_python_official_library_d437b47da32ff4cc_9385f6f8e149_chunk_013",
  "original_doc_id": "python_official_python_official_library_d437b47da32ff4cc_9385f6f8e149",
  "content": "Consequently, do not rely on the returned value to be accurate, other than a value of 0 or 1. Changed in version 3. 12: Immortal objects have very large refcounts that do not match the actual number of references to the object. Return the current value of the recursion limit, the maximum depth of the Python interpreter stack. This limit prevents infinite recursion from causing an overflow of the C stack and crashing Python. It can be set by setrecursionlimit(). setrecursionlimit() Return the size of an object in bytes. The object can be any type of object. All built-in objects will return correct results, but this does not have to hold true for third-party extensions as it is implementation specific. Only the memory consumption directly attributed to the object is accounted for, not the memory consumption of objects it refers to. If given, default will be returned if the object does not provide means to retrieve the size. Otherwise a TypeError will be raised. TypeError getsizeof() calls the object’s sizeof method and adds an additional garbage collector overhead if the object is managed by the garbage collector. getsizeof() __sizeof__ See recursive sizeof recipe for an example of using getsizeof() recursively to find the size of containers and all their contents. getsizeof() Return the interpreter’s “thread switch interval” in seconds; see setswitchinterval(). setswitchinterval() Added in version 3. 2. Return a frame object from the call stack. If optional integer depth is given, return the frame object that many calls below the top of the stack. If that is deeper than the call stack, ValueError is raised. The default for depth is zero, returning the frame at the top of the call stack. ValueError Raises an auditing event sys. _getframe with argument frame. sys. _getframe frame CPython implementation detail: This function should be used for internal and specialized purposes only. It is not guaranteed to exist in all implementations of Python. Return the name of a module from the call stack. If optional integer depth is given, return the module that many calls below the top of the stack. If that is deeper than the call stack, or if the module is unidentifiable, None is returned. The default for depth is zero, returning the module at the top of the call stack. None Raises an auditing event sys. _getframemodulename with argument depth. sys.",
  "title": "sys — System-specific parameters and functions.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 13,
  "start_char": 28816,
  "end_char": 31194,
  "token_count": 490,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_d437b47da32ff4cc.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:04.430361"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_d437b47da32ff4cc_9385f6f8e149_chunk_013.txt"
}