pop() 5 >>> stack [3, 4] collections. deque >>> from collections import deque >>> queue = deque(["Eric", "John", "Michael"]) >>> queue. append("Terry") # Terry arrives >>> queue. append("Graham") # Graham arrives >>> queue. popleft() # The first to arrive now leaves 'Eric' >>> queue. popleft() # The second to arrive now leaves 'John' >>> queue # Remaining queue in order of arrival deque(['Michael', 'Terry', 'Graham']) >>> squares = [] >>> for x in range(10):. squares. append(x**2). >>> squares [0, 1, 4, 9, 16, 25, 36, 49, 64, 81] x squares = list(map(lambda x: x**2, range(10))) squares = [x**2 for x in range(10)] for for if for if >>> [(x, y) for x in [1,2,3] for y in [3,1,4] if x. = y] [(1, 3), (1, 4), (2, 3), (2, 1), (2, 4), (3, 1), (3, 4)] >>> combs = [] >>> for x in [1,2,3]:. for y in [3,1,4]:. if x. = y:. combs. append((x, y)).