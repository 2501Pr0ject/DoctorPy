{
  "chunk_id": "python_official_python_official_tutorial_df4c6c63651fc819_f6bb78911be7_chunk_010",
  "original_doc_id": "python_official_python_official_tutorial_df4c6c63651fc819_f6bb78911be7",
  "content": "insort(scores, (300, 'ruby')) >>> scores [(100, 'perl'), (200, 'tcl'), (300, 'ruby'), (400, 'lua'), (500, 'python')] heapq >>> from heapq import heapify, heappop, heappush >>> data = [1, 3, 5, 7, 9, 2, 4, 6, 8, 0] >>> heapify(data) # rearrange the list into heap order >>> heappush(data, -5) # add a new entry >>> [heappop(data) for i in range(3)] # fetch the three smallest entries [-5, 0, 1] decimal Decimal float >>> from decimal import * >>> round(Decimal('0. 70') * Decimal('1. 05'), 2) Decimal('0. 74') >>> round(. 70 * 1. 05, 2) 0. 73 Decimal Decimal >>> Decimal('1. 00') % Decimal('. 10') Decimal('0. 00') >>> 1. 00 % 0. 10 0. 09999999999999995 >>> sum([Decimal('0. 1')]*10) == Decimal('1. 0') True >>> 0. 1 + 0. 1 + 0. 1 + 0. 1 + 0. 1 + 0. 1 + 0. 1 + 0. 1 + 0. 1 + 0. 1 == 1. 0 False decimal >>> getcontext(). prec = 36 >>> Decimal(1) / Decimal(7) Decimal('0. 142857142857142857142857142857142857').",
  "title": "11. Brief Tour of the Standard Library â€” Part II.13.5",
  "section": "python_official",
  "subsection": "tutorial",
  "chunk_index": 10,
  "start_char": 19769,
  "end_char": 20677,
  "token_count": 374,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_tutorial_df4c6c63651fc819.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:27.717442"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_tutorial_df4c6c63651fc819_f6bb78911be7_chunk_010.txt"
}