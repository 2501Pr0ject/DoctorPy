{
  "chunk_id": "python_official_python_official_library_96003c24587351a2_74918d6d2a40_chunk_039",
  "original_doc_id": "python_official_python_official_library_96003c24587351a2_74918d6d2a40",
  "content": "import builtins builtins. __import__ import __import__() importlib. import_module() The function imports the module name, potentially using the given globals and locals to determine how to interpret the name in a package context. The fromlist gives the names of objects or submodules that should be imported from the module given by name. The standard implementation does not use its locals argument at all and uses its globals only to determine the package context of the import statement. import level specifies whether to use absolute or relative imports. 0 (the default) means only perform absolute imports. Positive values for level indicate the number of parent directories to search relative to the directory of the module calling import() (see PEP 328 for the details). 0 __import__() When the name variable is of the form package. module, normally, the top-level package (the name up till the first dot) is returned, not the module named by name. However, when a non-empty fromlist argument is given, the module named by name is returned. package. module For example, the statement import spam results in bytecode resembling the following code: import spam spam = __import__('spam', globals(), locals(), [], 0) The statement import spam. ham results in this call: import spam. ham spam = __import__('spam. ham', globals(), locals(), [], 0) Note how import() returns the toplevel module here because this is the object that is bound to a name by the import statement. __import__() import On the other hand, the statement from spam. ham import eggs, sausage as saus results in from spam. ham import eggs, sausage as saus _temp = __import__('spam. ham', globals(), locals(), ['eggs', 'sausage'], 0) eggs = _temp. eggs saus = _temp. sausage Here, the spam. ham module is returned from import(). From this object, the names to import are retrieved and assigned to their respective names. spam. ham __import__() If you simply want to import a module (potentially within a package) by name, use importlib. import_module(). importlib. import_module() Changed in version 3. 3: Negative values for level are no longer supported (which also changes the default value to 0). Changed in version 3.",
  "title": "Built-in Functions.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 39,
  "start_char": 83378,
  "end_char": 85571,
  "token_count": 476,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_96003c24587351a2.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:31.028670"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_96003c24587351a2_74918d6d2a40_chunk_039.txt"
}