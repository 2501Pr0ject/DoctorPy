{
  "chunk_id": "python_official_python_official_library_96003c24587351a2_74918d6d2a40_chunk_033",
  "original_doc_id": "python_official_python_official_library_96003c24587351a2_74918d6d2a40",
  "content": "__module__ __name__ __qualname__ __doc__ __annotations__ __wrapped__ Return a str version of object. See str() for details. str str() str is the built-in string class. For general information about strings, see Text Sequence Type — str. str Sums start and the items of an iterable from left to right and returns the total. The iterable’s items are normally numbers, and the start value is not allowed to be a string. For some use cases, there are good alternatives to sum(). The preferred, fast way to concatenate a sequence of strings is by calling ''. join(sequence). To add floating-point values with extended precision, see math. fsum(). To concatenate a series of iterables, consider using itertools. chain(). sum() ''. join(sequence) math. fsum() itertools. chain() Changed in version 3. 8: The start parameter can be specified as a keyword argument. Changed in version 3. 12: Summation of floats switched to an algorithm that gives higher accuracy and better commutativity on most builds. Return a proxy object that delegates method calls to a parent or sibling class of type. This is useful for accessing inherited methods that have been overridden in a class. The object_or_type determines the method resolution order to be searched. The search starts from the class right after the type. For example, if mro of object_or_type is D -> B -> C -> A -> object and the value of type is B, then super() searches C -> A -> object. __mro__ D -> B -> C -> A -> object B super() C -> A -> object The mro attribute of the class corresponding to object_or_type lists the method resolution search order used by both getattr() and super(). The attribute is dynamic and can change whenever the inheritance hierarchy is updated. __mro__ getattr() super() If the second argument is omitted, the super object returned is unbound. If the second argument is an object, isinstance(obj, type) must be true. If the second argument is a type, issubclass(type2, type) must be true (this is useful for classmethods). isinstance(obj, type) issubclass(type2, type) When called directly within an ordinary method of a class, both arguments may be omitted (“zero-argument super()”).",
  "title": "Built-in Functions.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 33,
  "start_char": 70796,
  "end_char": 72958,
  "token_count": 476,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_96003c24587351a2.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:31.023770"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_96003c24587351a2_74918d6d2a40_chunk_033.txt"
}