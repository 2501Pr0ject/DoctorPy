{
  "chunk_id": "python_official_python_official_tutorial_b08b74d25282ad3e_276820cda60c_chunk_014",
  "original_doc_id": "python_official_python_official_tutorial_b08b74d25282ad3e_276820cda60c",
  "content": "read() Traceback (most recent call last): File \"<stdin>\", line 1, in <module> ValueError: I/O operation on closed file. f f. read(size) f. read() '' >>> f. read() 'This is the entire file. \\n' >>> f. read() '' f. readline() \\n f. readline() '\\n' >>> f. readline() 'This is the first line of the file. \\n' >>> f. readline() 'Second line of the file\\n' >>> f. readline() '' >>> for line in f:. print(line, end=''). This is the first line of the file. Second line of the file list(f) f. readlines() f. write(string) >>> f. write('This is a test\\n') 15 >>> value = ('the answer', 42) >>> s = str(value) # convert the tuple to string >>> f. write(s) 18 f. tell() f. seek(offset, whence) >>> f = open('workfile', 'rb+') >>> f. write(b'0123456789abcdef') 16 >>> f. seek(5) # Go to the 6th byte in the file 5 >>> f. read(1) b'5' >>> f. seek(-3, 2) # Go to the 3rd byte before the end 13 >>> f. read(1) b'd' b seek(0, 2) f. tell() isatty() truncate() json read() int() '123' json x >>> import json >>> x = [1, 'simple', 'list'] >>> json. dumps(x) '[1, \"simple\", \"list\"]' dumps() dump() f json. dump(x, f) f x = json. load(f) encoding=\"utf-8\" json pickle json.",
  "title": "7. Input and Output.13.5",
  "section": "python_official",
  "subsection": "tutorial",
  "chunk_index": 14,
  "start_char": 25501,
  "end_char": 26651,
  "token_count": 383,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_tutorial_b08b74d25282ad3e.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:37.894083"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_tutorial_b08b74d25282ad3e_276820cda60c_chunk_014.txt"
}