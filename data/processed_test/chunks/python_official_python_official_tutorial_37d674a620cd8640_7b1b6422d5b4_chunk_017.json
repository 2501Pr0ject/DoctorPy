{
  "chunk_id": "python_official_python_official_tutorial_37d674a620cd8640_7b1b6422d5b4_chunk_017",
  "original_doc_id": "python_official_python_official_tutorial_37d674a620cd8640_7b1b6422d5b4",
  "content": "[5, 6, 7, 8],. [9, 10, 11, 12],. ] >>> [[row[i] for row in matrix] for i in range(4)] [[1, 5, 9], [2, 6, 10], [3, 7, 11], [4, 8, 12]] for >>> transposed = [] >>> for i in range(4):. transposed. append([row[i] for row in matrix]). >>> transposed [[1, 5, 9], [2, 6, 10], [3, 7, 11], [4, 8, 12]] >>> transposed = [] >>> for i in range(4):. # the following 3 lines implement the nested listcomp. transposed_row = []. for row in matrix:. transposed_row. append(row[i]). transposed. append(transposed_row). >>> transposed [[1, 5, 9], [2, 6, 10], [3, 7, 11], [4, 8, 12]] zip() >>> list(zip(*matrix)) [(1, 5, 9), (2, 6, 10), (3, 7, 11), (4, 8, 12)] del del pop() del >>> a = [-1, 1, 66. 25, 333, 333, 1234. 5] >>> del a[0] >>> a [1, 66. 25, 333, 333, 1234. 5] >>> del a[2:4] >>> a [1, 66. 25, 1234. 5] >>> del a[:] >>> a [] del >>> del a a del >>> t = 12345, 54321, 'hello. ' >>> t[0] 12345 >>> t (12345, 54321, 'hello. ') >>> # Tuples may be nested: >>> u = t, (1, 2, 3, 4, 5) >>> u ((12345, 54321, 'hello.",
  "title": "5. Data Structures.13.5",
  "section": "python_official",
  "subsection": "tutorial",
  "chunk_index": 17,
  "start_char": 26032,
  "end_char": 27031,
  "token_count": 462,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_tutorial_37d674a620cd8640.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:05.631065"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_tutorial_37d674a620cd8640_7b1b6422d5b4_chunk_017.txt"
}