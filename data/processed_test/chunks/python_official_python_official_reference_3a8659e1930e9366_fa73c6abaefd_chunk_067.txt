width)" __eq__() __hash__() __eq__() __hash__() __eq__() __hash__() __eq__() __hash__() object x. __hash__() x == y x is y hash(x) == hash(y) __eq__() __hash__() __hash__() None __hash__() None TypeError isinstance(obj, collections. abc. Hashable) __eq__() __hash__() __hash__ = <ParentClass>. __hash__ __eq__() __hash__ = None __hash__() TypeError isinstance(obj, collections. abc. Hashable) __hash__() PYTHONHASHSEED bool() False True __len__() __len__() __bool__() object x. name AttributeError __getattribute__() AttributeError self __get__() AttributeError AttributeError object __getattr__() __getattr__() __setattr__() __getattr__() __getattribute__() __getattr__() __getattribute__() AttributeError AttributeError object. __getattribute__(self, name) object. __getattr__ obj name __setattr__() object. __setattr__(self, name, value) object. __setattr__ obj name value __setattr__() del obj. name object. __delattr__ obj name dir() dir() __getattr__ __dir__ __getattr__ AttributeError object. __getattribute__() __getattr__ __dict__ AttributeError __dir__ dir() __class__ types. ModuleType import sys from types import ModuleType class VerboseModule(ModuleType): def __repr__(self): return f'Verbose {self. __name__}' def __setattr__(self, attr, value): print(f'Setting {attr}. ') super(). __setattr__(attr, value) sys. modules[__name__]. __class__ = VerboseModule __getattr__ __class__ __class__ __getattr__ __dir__ __getattr__ __dir__ __dict__ object None AttributeError __get__() __getattribute__() __set__() __delete__() __objclass__ __objclass__ inspect __get__() __set__() __delete__() a. x a. __dict__['x'] type(a). __dict__['x'] type(a) a. x a x. __get__(a) a. x type(a). __dict__['x']. __get__(a, type(a)) A. x A. __dict__['x']. __get__(None, A) super(A, a). x a. __class__. __mro__ B A B. __dict__['x'].