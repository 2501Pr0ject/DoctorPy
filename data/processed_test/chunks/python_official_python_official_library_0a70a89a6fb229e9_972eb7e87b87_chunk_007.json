{
  "chunk_id": "python_official_python_official_library_0a70a89a6fb229e9_972eb7e87b87_chunk_007",
  "original_doc_id": "python_official_python_official_library_0a70a89a6fb229e9_972eb7e87b87",
  "content": "'d' 'n' 'b' 'o' 'x' 'X' For a locale aware separator, use the 'n' presentation type instead. 'n' Changed in version 3. 1: Added the ',' option (see also PEP 378). ',' Changed in version 3. 6: Added the '' option (see also PEP 515). '_' The precision is a decimal integer indicating how many digits should be displayed after the decimal point for presentation types 'f' and 'F', or before and after the decimal point for presentation types 'g' or 'G'. For string presentation types the field indicates the maximum field size - in other words, how many characters will be used from the field content. The precision is not allowed for integer presentation types. 'f' 'F' 'g' 'G' Finally, the type determines how the data should be presented. The available string presentation types are: Type Meaning 's' 's' String format. This is the default type for strings and may be omitted. None The same as 's'. 's' The available integer presentation types are: Type Meaning 'b' 'b' Binary format. Outputs the number in base 2. 'c' 'c' Character. Converts the integer to the corresponding unicode character before printing. 'd' 'd' Decimal Integer. Outputs the number in base 10. 'o' 'o' Octal format. Outputs the number in base 8. 'x' 'x' Hex format. Outputs the number in base 16, using lower-case letters for the digits above 9. 'X' 'X' Hex format. Outputs the number in base 16, using upper-case letters for the digits above 9. In case '#' is specified, the prefix '0x' will be upper-cased to '0X' as well. '#' '0x' '0X' 'n' 'n' Number. This is the same as 'd', except that it uses the current locale setting to insert the appropriate digit group separators. 'd' None The same as 'd'. 'd' In addition to the above presentation types, integers can be formatted with the floating-point presentation types listed below (except 'n' and None). When doing so, float() is used to convert the integer to a floating-point number before formatting.",
  "title": "string â€” Common string operations.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 7,
  "start_char": 15685,
  "end_char": 17614,
  "token_count": 487,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_0a70a89a6fb229e9.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:09.219029"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_0a70a89a6fb229e9_972eb7e87b87_chunk_007.txt"
}