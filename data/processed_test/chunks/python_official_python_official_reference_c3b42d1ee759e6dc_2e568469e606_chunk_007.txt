Interaction with dynamic features 4. 3. Exceptions #### Previous topic 3. Data model #### Next topic 5. The import system ### This page Report a bug Show source -c __main__ -m eval() exec() for as with except except* import type import from. import * del nonlocal global NameError UnboundLocalError UnboundLocalError NameError global builtins global nonlocal SyntaxError nonlocal __main__ exec() eval() class A: a = 42 b = list(a + i for i in range(10)) class A: type Alias = Nested class Nested: pass print(A. Alias. __value__) # <type 'A. Nested'> type yield yield from await := nonlocal __qualname__ type >>> type Alias = 1/0 >>> Alias. __value__ Traceback (most recent call last):. ZeroDivisionError: division by zero >>> def func[T: 1/0](): pass >>> T = func. __type_params__[0] >>> T. __bound__ Traceback (most recent call last):. ZeroDivisionError: division by zero __value__ __bound__ from typing import Literal type SimpleExpr = int | Parenthesized type Parenthesized = tuple[Literal["("], Expr, Literal[")"]] type Expr = SimpleExpr | tuple[SimpleExpr, Literal["+", "-"], Expr] __builtins__ import builtins __builtins__ __main__ __builtins__ builtins __builtins__ builtins i = 10 def f(): print(i) i = 42 f() eval() exec() exec() eval() raise try except finally SystemExit except try raise.