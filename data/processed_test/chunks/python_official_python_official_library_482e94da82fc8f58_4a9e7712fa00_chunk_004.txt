name This exception is derived from RuntimeError. In user defined base classes, abstract methods should raise this exception when they require derived classes to override the method, or while the class is being developed to indicate that the real implementation still needs to be added. RuntimeError Note It should not be used to indicate that an operator or method is not meant to be supported at all – in that case either leave the operator / method undefined or, if a subclass, set it to None. None Caution NotImplementedError and NotImplemented are not interchangeable. This exception should only be used as described above; see NotImplemented for details on correct usage of the built-in constant. NotImplementedError NotImplemented NotImplemented This exception is raised when a system function returns a system-related error, including I/O failures such as “file not found” or “disk full” (not for illegal argument types or other incidental errors). The second form of the constructor sets the corresponding attributes, described below. The attributes default to None if not specified. For backwards compatibility, if three arguments are passed, the args attribute contains only a 2-tuple of the first two constructor arguments. None args The constructor often actually returns a subclass of OSError, as described in OS exceptions below. The particular subclass depends on the final errno value. This behaviour only occurs when constructing OSError directly or via an alias, and is not inherited when subclassing. OSError errno OSError A numeric error code from the C variable errno. errno Under Windows, this gives you the native Windows error code. The errno attribute is then an approximate translation, in POSIX terms, of that native error code. errno Under Windows, if the winerror constructor argument is an integer, the errno attribute is determined from the Windows error code, and the errno argument is ignored. On other platforms, the winerror argument is ignored, and the winerror attribute does not exist. errno winerror The corresponding error message, as provided by the operating system. It is formatted by the C functions perror() under POSIX, and FormatMessage() under Windows. perror() FormatMessage() For exceptions that involve a file system path (such as open() or os. unlink()), filename is the file name passed to the function. For functions that involve two file system paths (such as os. rename()), filename2 corresponds to the second file name passed to the function. open() os. unlink() filename os. rename() filename2 Changed in version 3. 3: EnvironmentError, IOError, WindowsError, socket. error, select.