{
  "chunk_id": "external_external_guides_1811034afddfd51a_93df0401e39e_chunk_011",
  "original_doc_id": "external_external_guides_1811034afddfd51a_93df0401e39e",
  "content": "add_argument('args', nargs='*') >>> # ambiguous, so parse_args assumes it's an option >>> parser. parse_args(['-f']) usage: PROG [-h] [-n N [N. ]] [args. ] PROG: error: unrecognized arguments: -f >>> parser. parse_args(['--', '-f']) Namespace(args=['-f'], n=None) >>> # ambiguous, so the -n option greedily accepts arguments >>> parser. parse_args(['-n', '1', '2', '3']) Namespace(args=[], n=['1', '2', '3']) >>> parser. parse_args(['-n', '1', '--', '2', '3']) Namespace(args=['2', '3'], n=['1']) ### Conflicting options¶ So far, we have been working with two methods of an argparse. ArgumentParser instance. Let’s introduce a third one, add_mutually_exclusive_group(). It allows for us to specify options that conflict with each other. Let’s also change the rest of the program so that the new functionality makes more sense: we’ll introduce the --quiet option, which will be the opposite of the --verbose one: argparse. ArgumentParser add_mutually_exclusive_group() --quiet --verbose import argparse parser = argparse. ArgumentParser() group = parser. add_mutually_exclusive_group() group. add_argument(\"-v\", \"--verbose\", action=\"store_true\") group. add_argument(\"-q\", \"--quiet\", action=\"store_true\") parser. add_argument(\"x\", type=int, help=\"the base\") parser. add_argument(\"y\", type=int, help=\"the exponent\") args = parser. parse_args() answer = args. x**args. y if args. quiet: print(answer) elif args. verbose: print(f\"{args. x} to the power {args. y} equals {answer}\") else: print(f\"{args. x}^{args. y} == {answer}\") Our program is now simpler, and we’ve lost some functionality for the sake of demonstration. Anyways, here’s the output: $ python prog. py 4 2 4^2 == 16 $ python prog. py 4 2 -q 16 $ python prog. py 4 2 -v 4 to the power 2 equals 16 $ python prog. py 4 2 -vq usage: prog.",
  "title": "Argparse Tutorial.13.5",
  "section": "external",
  "subsection": "guides",
  "chunk_index": 11,
  "start_char": 22646,
  "end_char": 24441,
  "token_count": 494,
  "metadata": {
    "original_file": "data/raw/documentation_test/external/external_guides_1811034afddfd51a.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:39.493062"
  },
  "file_path": "data/processed_test/chunks/external_external_guides_1811034afddfd51a_93df0401e39e_chunk_011.txt"
}