group(0) 'def' >>> m = re. search(r'(. <=-)\w+', 'spam-egg') >>> m. group(0) 'egg' (. <. ). (. (id/name)yes-pattern|no-pattern) yes-pattern no-pattern no-pattern (<). (\w+@\w+(. :\. \w+)+)(. (1)>|$) '<user@host. com>' 'user@host. com' '<user@host. com' 'user@host. com>' bytes b'\x00' b'\x7f' '\' \$ '$' \number (. +) \1 'the the' '55 55' 'thethe' '[' ']' \A \b \b \w \W \w r'\bat\b' 'at' 'at. ' '(at)' 'as at ay' 'attempt' 'atlas' ASCII LOCALE \b \B r'at\B' 'athens' 'atom' 'attorney' 'at' 'at. ' 'at. ' \B \b ASCII LOCALE \B \d [0-9] [0-9] ASCII [0-9] \D \d [^0-9] ASCII \s str. isspace() [ \t\n\r\f\v] [ \t\n\r\f\v] ASCII [ \t\n\r\f\v] \S \s [^ \t\n\r\f\v] ASCII \w str. isalnum() _ [a-zA-Z0-9_] ASCII [a-zA-Z0-9_] LOCALE \W \w _ str. isalnum() False [^a-zA-Z0-9_] ASCII LOCALE \Z \a \b \f \n \N \r \t \u \U \v \x \\ \b '\u' '\U' '\N' '\u' '\U' '\' '\N{name}' '\N{EM DASH}' RegexFlag enum. IntFlag enum. IntFlag __all__ \w \W \b \B \d \D \s \S (. a) U str UNICODE (. u) [A-Z] Ü ü ASCII LOCALE (. i) [a-z] [A-Z] IGNORECASE ASCII \w \W \b \B (. L) LOCALE ASCII LOCALE '^' '$' '^' '$' (.