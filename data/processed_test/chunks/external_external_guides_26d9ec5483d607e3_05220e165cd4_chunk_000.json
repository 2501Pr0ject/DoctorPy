{
  "chunk_id": "external_external_guides_26d9ec5483d607e3_05220e165cd4_chunk_000",
  "original_doc_id": "external_external_guides_26d9ec5483d607e3_05220e165cd4",
  "content": "PEP 257 – Docstring Conventions | peps. python. org Source:  PEP 257 – Docstring Conventions Abstract Rationale Specification What is a Docstring. One-line Docstrings Multi-line Docstrings Handling Docstring Indentation What is a Docstring. One-line Docstrings Multi-line Docstrings Handling Docstring Indentation Copyright Acknowledgements ## Abstract This PEP documents the semantics and conventions associated with Python docstrings. ## Rationale The aim of this PEP is to standardize the high-level structure of docstrings: what they should contain, and how to say it (without touching on any markup syntax within docstrings). The PEP contains conventions, not laws or syntax. —Tim Peters on comp. lang. python, 2001-06-16 If you violate these conventions, the worst you’ll get is some dirty looks. But some software (such as the Docutils docstring processing system PEP 256, PEP 258) will be aware of the conventions, so following them will get you the best results. ## Specification ### What is a Docstring. A docstring is a string literal that occurs as the first statement in a module, function, class, or method definition. Such a docstring becomes the doc special attribute of that object. __doc__ All modules should normally have docstrings, and all functions and classes exported by a module should also have docstrings. Public methods (including the init constructor) should also have docstrings. A package may be documented in the module docstring of the init. py file in the package directory. __init__ __init__. py String literals occurring elsewhere in Python code may also act as documentation. They are not recognized by the Python bytecode compiler and are not accessible as runtime object attributes (i. e. not assigned to doc), but two types of extra docstrings may be extracted by software tools: __doc__ String literals occurring immediately after a simple assignment at the top level of a module, class, or init method are called “attribute docstrings”. __init__ String literals occurring immediately after another docstring are called “additional docstrings”. Please see PEP 258, “Docutils Design Specification”, for a detailed description of attribute and additional docstrings. For consistency, always use \"\"\"triple double quotes\"\"\" around docstrings. Use r\"\"\"raw triple double quotes\"\"\" if you use any backslashes in your docstrings.",
  "title": "PEP 257 – Docstring Conventions | peps.python.org",
  "section": "external",
  "subsection": "guides",
  "chunk_index": 0,
  "start_char": 0,
  "end_char": 2362,
  "token_count": 494,
  "metadata": {
    "original_file": "data/raw/documentation_test/external/external_guides_26d9ec5483d607e3.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:39.239312"
  },
  "file_path": "data/processed_test/chunks/external_external_guides_26d9ec5483d607e3_05220e165cd4_chunk_000.txt"
}