{
  "chunk_id": "python_official_python_official_library_ccf716b46391ca56_40d31454785a_chunk_019",
  "original_doc_id": "python_official_python_official_library_ccf716b46391ca56_40d31454785a",
  "content": "split(r'(\\W*)', '. words. ') ['', '. ', '', '', 'w', '', 'o', '', 'r', '', 'd', '', 's', '. ', '', '', ''] The expression’s behaviour can be modified by specifying a flags value. Values can be any of the flags variables, combined using bitwise OR (the | operator). | Changed in version 3. 1: Added the optional flags argument. Changed in version 3. 7: Added support of splitting on a pattern that could match an empty string. Deprecated since version 3. 13: Passing maxsplit and flags as positional arguments is deprecated. In future Python versions they will be keyword-only parameters. Return all non-overlapping matches of pattern in string, as a list of strings or tuples. The string is scanned left-to-right, and matches are returned in the order found. Empty matches are included in the result. The result depends on the number of capturing groups in the pattern. If there are no groups, return a list of strings matching the whole pattern. If there is exactly one group, return a list of strings matching that group. If multiple groups are present, return a list of tuples of strings matching the groups. Non-capturing groups do not affect the form of the result. >>> re. findall(r'\\bf[a-z]*', 'which foot or hand fell fastest') ['foot', 'fell', 'fastest'] >>> re. findall(r'(\\w+)=(\\d+)', 'set width=20 and height=10') [('width', '20'), ('height', '10')] The expression’s behaviour can be modified by specifying a flags value. Values can be any of the flags variables, combined using bitwise OR (the | operator). | Changed in version 3. 7: Non-empty matches can now start just after a previous empty match. Return an iterator yielding Match objects over all non-overlapping matches for the RE pattern in string. The string is scanned left-to-right, and matches are returned in the order found. Empty matches are included in the result. Match The expression’s behaviour can be modified by specifying a flags value. Values can be any of the flags variables, combined using bitwise OR (the | operator). | Changed in version 3. 7: Non-empty matches can now start just after a previous empty match.",
  "title": "re — Regular expression operations.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 19,
  "start_char": 37038,
  "end_char": 39138,
  "token_count": 482,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_ccf716b46391ca56.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:36.818486"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_ccf716b46391ca56_40d31454785a_chunk_019.txt"
}