{
  "chunk_id": "python_official_python_official_library_b3ab419475b0789f_74784175dd21_chunk_035",
  "original_doc_id": "python_official_python_official_library_b3ab419475b0789f_74784175dd21",
  "content": "Path. rglob self pattern (dirpath, dirnames, filenames) Path '. ' '. ' dirpath / name del Path. walk() Path. walk() Path. walk() Path. walk() os. scandir() OSError filename Path. walk() Path. walk() Path. walk() Path. walk() os. walk() Path. walk() __pycache__ from pathlib import Path for root, dirs, files in Path(\"cpython/Lib/concurrent\"). walk(on_error=print): print( root, \"consumes\", sum((root / file). stat(). st_size for file in files), \"bytes in\", len(files), \"non-directory files\" ) if '__pycache__' in dirs: dirs. remove('__pycache__') shutil. rmtree() rmdir() # Delete everything reachable from the directory \"top\". # CAUTION: This is dangerous. For example, if top == Path('/'), # it could delete all of your files. for root, dirs, files in top. walk(top_down=False): for name in files: (root / name). unlink() for name in dirs: (root / name). rmdir() umask FileExistsError open() write_text() write_bytes() umask FileExistsError mkdir -p FileNotFoundError FileExistsError FileExistsError mkdir -p >>> p = Path('mylink') >>> p. symlink_to('setup. py') >>> p. resolve() PosixPath('/home/antoine/pathlib/setup. py') >>> p. stat(). st_size 956 >>> p. lstat(). st_size 8 os. symlink() UnsupportedOperation os. symlink() NotImplementedError os. link() UnsupportedOperation os. link() NotImplementedError Path FileExistsError >>> p = Path('foo') >>> p. open('w'). write('some text') 9 >>> target = Path('bar') >>> p. rename(target) PosixPath('bar') >>> target. open(). read() 'some text' Path os. rename() Path Path Path Path Path. rmdir() FileNotFoundError FileNotFoundError rm -f KeyError follow_symlinks=False UnsupportedOperation pwd NotImplementedError KeyError follow_symlinks=False UnsupportedOperation grp NotImplementedError os. chmod() follow_symlinks=False lchmod() >>> p = Path('setup. py') >>> p. stat(). st_mode 33277 >>> p. chmod(0o444) >>> p. stat(). st_mode 33060 Path.",
  "title": "pathlib â€” Object-oriented filesystem paths.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 35,
  "start_char": 68731,
  "end_char": 70624,
  "token_count": 493,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_b3ab419475b0789f.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:32.519003"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_b3ab419475b0789f_74784175dd21_chunk_035.txt"
}