dump(x, f) To decode the object again, if f is a binary file or text file object which has been opened for reading: f x = json. load(f) Note JSON files must be encoded in UTF-8. Use encoding="utf-8" when opening JSON file as a text file for both of reading and writing. encoding="utf-8" This simple serialization technique can handle lists and dictionaries, but serializing arbitrary class instances in JSON requires a bit of extra effort. The reference for the json module contains an explanation of this. json See also pickle - the pickle module pickle Contrary to JSON, pickle is a protocol which allows the serialization of arbitrarily complex Python objects. As such, it is specific to Python and cannot be used to communicate with applications written in other languages. It is also insecure by default: deserializing pickle data coming from an untrusted source can execute arbitrary code, if the data was crafted by a skilled attacker. ### Table of Contents 7. Input and Output 7. 1. Fancier Output Formatting 7. 1. 1. Formatted String Literals 7. 1. 2. The String format() Method 7. 1. 3. Manual String Formatting 7. 1. 4. Old string formatting 7. 2. Reading and Writing Files 7. 2. 1. Methods of File Objects 7. 2. 2. Saving structured data with json 7. 1. Fancier Output Formatting 7. 1. 1. Formatted String Literals 7. 1. 2. The String format() Method 7. 1. 3. Manual String Formatting 7. 1. 4. Old string formatting 7. 1. 1. Formatted String Literals 7. 1. 2. The String format() Method 7. 1. 3. Manual String Formatting 7. 1. 4. Old string formatting 7. 2. Reading and Writing Files 7. 2. 1. Methods of File Objects 7. 2. 2. Saving structured data with json 7. 2. 1. Methods of File Objects 7. 2. 2. Saving structured data with json json #### Previous topic 6. Modules #### Next topic 8.