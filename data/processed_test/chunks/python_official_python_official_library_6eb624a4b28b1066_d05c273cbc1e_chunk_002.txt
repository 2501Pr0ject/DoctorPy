tzinfo is not None d. tzinfo None d. tzinfo. utcoffset(d) does not return None d. tzinfo. utcoffset(d) does not return None d. tzinfo. utcoffset(d) None Otherwise, d is naive. d A time object t is aware if both of the following hold: time t t. tzinfo is not None t. tzinfo is not None t. tzinfo None t. tzinfo. utcoffset(None) does not return None. t. tzinfo. utcoffset(None) does not return None. t. tzinfo. utcoffset(None) None Otherwise, t is naive. t The distinction between aware and naive doesn’t apply to timedelta objects. timedelta ## timedelta Objects¶ timedelta A timedelta object represents a duration, the difference between two datetime or date instances. timedelta datetime date All arguments are optional and default to 0. Arguments may be integers or floats, and may be positive or negative. Only days, seconds and microseconds are stored internally. Arguments are converted to those units: A millisecond is converted to 1000 microseconds. A millisecond is converted to 1000 microseconds. A minute is converted to 60 seconds. A minute is converted to 60 seconds. An hour is converted to 3600 seconds. An hour is converted to 3600 seconds. A week is converted to 7 days. A week is converted to 7 days. and days, seconds and microseconds are then normalized so that the representation is unique, with 0 <= microseconds < 1000000 0 <= microseconds < 1000000 0 <= microseconds < 1000000 0 <= seconds < 360024 (the number of seconds in one day) 0 <= seconds < 360024 (the number of seconds in one day) 0 <= seconds < 3600*24 -999999999 <= days <= 999999999 -999999999 <= days <= 999999999 -999999999 <= days <= 999999999 The following example illustrates how any arguments besides days, seconds and microseconds are “merged” and normalized into those three resulting attributes: >>> from datetime import timedelta >>> delta = timedelta(. days=50,. seconds=27,. microseconds=10,. milliseconds=29000,. minutes=5,. hours=8,. weeks=2. ) >>> # Only days, seconds, and microseconds remain >>> delta datetime.