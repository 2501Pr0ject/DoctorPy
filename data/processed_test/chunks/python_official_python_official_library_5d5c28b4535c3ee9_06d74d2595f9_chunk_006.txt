None float(num_str) decimal. Decimal parse_int (callable | None) – If set, a function that is called with the string of every JSON int to be decoded. If None (the default), it is equivalent to int(num_str). This can be used to parse JSON integers into custom datatypes, for example float. parse_int (callable | None) – If set, a function that is called with the string of every JSON int to be decoded. If None (the default), it is equivalent to int(num_str). This can be used to parse JSON integers into custom datatypes, for example float. None int(num_str) float parse_constant (callable | None) – If set, a function that is called with one of the following strings: '-Infinity', 'Infinity', or 'NaN'. This can be used to raise an exception if invalid JSON numbers are encountered. Default None. parse_constant (callable | None) – If set, a function that is called with one of the following strings: '-Infinity', 'Infinity', or 'NaN'. This can be used to raise an exception if invalid JSON numbers are encountered. Default None. '-Infinity' 'Infinity' 'NaN' None JSONDecodeError – When the data being deserialized is not a valid JSON document. JSONDecodeError – When the data being deserialized is not a valid JSON document. UnicodeDecodeError – When the data being deserialized does not contain UTF-8, UTF-16 or UTF-32 encoded data. UnicodeDecodeError – When the data being deserialized does not contain UTF-8, UTF-16 or UTF-32 encoded data. Changed in version 3. 1: Added the optional object_pairs_hook parameter. Added the optional object_pairs_hook parameter. parse_constant doesn’t get called on ‘null’, ‘true’, ‘false’ anymore. parse_constant doesn’t get called on ‘null’, ‘true’, ‘false’ anymore. Changed in version 3. 6: All optional parameters are now keyword-only. All optional parameters are now keyword-only. fp can now be a binary file. The input encoding should be UTF-8, UTF-16 or UTF-32. fp can now be a binary file. The input encoding should be UTF-8, UTF-16 or UTF-32. Changed in version 3.