'call' None The local trace function should return a reference to itself, or to another function which would then be used as the local trace function for the scope. If there is any error occurred in the trace function, it will be unset, just like settrace(None) is called. settrace(None) Note Tracing is disabled while calling the trace function (e. g. a function set by settrace()). For recursive tracing see call_tracing(). settrace() call_tracing() The events have the following meaning: 'call' A function is called (or some other code block entered). The global trace function is called; arg is None; the return value specifies the local trace function. None 'line' The interpreter is about to execute a new line of code or re-execute the condition of a loop. The local trace function is called; arg is None; the return value specifies the new local trace function. See Objects/lnotab_notes. txt for a detailed explanation of how this works. Per-line events may be disabled for a frame by setting f_trace_lines to False on that frame. None Objects/lnotab_notes. txt f_trace_lines False 'return' A function (or other code block) is about to return. The local trace function is called; arg is the value that will be returned, or None if the event is caused by an exception being raised. The trace function’s return value is ignored. None 'exception' An exception has occurred. The local trace function is called; arg is a tuple (exception, value, traceback); the return value specifies the new local trace function. (exception, value, traceback) 'opcode' The interpreter is about to execute a new opcode (see dis for opcode details). The local trace function is called; arg is None; the return value specifies the new local trace function. Per-opcode events are not emitted by default: they must be explicitly requested by setting f_trace_opcodes to True on the frame. dis None f_trace_opcodes True Note that as an exception is propagated down the chain of callers, an 'exception' event is generated at each level. 'exception' For more fine-grained usage, it’s possible to set a trace function by assigning frame. f_trace = tracefunc explicitly, rather than relying on it being set indirectly via the return value from an already installed trace function.