{
  "chunk_id": "python_official_python_official_tutorial_848a8fc839cddd7c_011b0462aa58_chunk_007",
  "original_doc_id": "python_official_python_official_tutorial_848a8fc839cddd7c_011b0462aa58",
  "content": "These must be dotted names to prevent them from being interpreted as capture variable: from enum import Enum class Color(Enum): RED = 'red' GREEN = 'green' BLUE = 'blue' color = Color(input(\"Enter your choice of 'red', 'blue' or 'green': \")) match color: case Color. RED: print(\"I see red. \") case Color. GREEN: print(\"Grass is green\") case Color. BLUE: print(\"I'm feeling the blues :(\") Patterns may use named constants. These must be dotted names to prevent them from being interpreted as capture variable: from enum import Enum class Color(Enum): RED = 'red' GREEN = 'green' BLUE = 'blue' color = Color(input(\"Enter your choice of 'red', 'blue' or 'green': \")) match color: case Color. RED: print(\"I see red. \") case Color. GREEN: print(\"Grass is green\") case Color. BLUE: print(\"I'm feeling the blues :(\") For a more detailed explanation and additional examples, you can look into PEP 636 which is written in a tutorial format. ## 4. 8. Defining Functions¶ We can create a function that writes the Fibonacci series to an arbitrary boundary: >>> def fib(n): # write Fibonacci series less than n. \"\"\"Print a Fibonacci series less than n. \"\"\". a, b = 0, 1. while a < n:. print(a, end=' '). a, b = b, a+b. print(). >>> # Now call the function we just defined: >>> fib(2000) 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 The keyword def introduces a function definition. It must be followed by the function name and the parenthesized list of formal parameters. The statements that form the body of the function start at the next line, and must be indented. def The first statement of the function body can optionally be a string literal; this string literal is the function’s documentation string, or docstring. (More about docstrings can be found in the section Documentation Strings.",
  "title": "4. More Control Flow Tools.13.5",
  "section": "python_official",
  "subsection": "tutorial",
  "chunk_index": 7,
  "start_char": 13359,
  "end_char": 15151,
  "token_count": 454,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_tutorial_848a8fc839cddd7c.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:37.610920"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_tutorial_848a8fc839cddd7c_011b0462aa58_chunk_007.txt"
}