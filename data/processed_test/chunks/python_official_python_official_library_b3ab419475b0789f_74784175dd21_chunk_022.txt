chmod() but, if the path points to a symbolic link, the symbolic link’s mode is changed rather than its target’s. Path. chmod() ## Pattern language¶ The following wildcards are supported in patterns for full_match(), glob() and rglob(): full_match() glob() rglob() ** Matches any number of file or directory segments, including zero. * Matches one file or directory segment. * Matches any number of non-separator characters, including zero. Matches one non-separator character. [seq] Matches one character in seq, where seq is a sequence of characters. Range expressions are supported; for example, [a-z] matches any lowercase ASCII letter. Multiple ranges can be combined: [a-zA-Z0-9_] matches any ASCII letter, digit, or underscore. [a-z] [a-zA-Z0-9_] [. seq] Matches one character not in seq, where seq follows the same rules as above. For a literal match, wrap the meta-characters in brackets. For example, "[. ]" matches the character ". ". "[. ]" ". " The “” wildcard enables recursive globbing. A few examples: ** Pattern Meaning “/*” **/* Any path with at least one segment. “/. py” **/*. py Any path with a final segment ending “. py”. py “assets/” assets/** Any path starting with “assets/”. assets/ “assets//” assets/**/* Any path starting with “assets/”, excluding “assets/” itself. assets/ assets/ Note Globbing with the “” wildcard visits every directory in the tree. Large directory trees may take a long time to search. ** Changed in version 3. 13: Globbing with a pattern that ends with “” returns both files and directories. In previous versions, only directories were returned. ** In Path. glob() and rglob(), a trailing slash may be added to the pattern to match only directories. Path. glob() rglob() Changed in version 3. 11: Globbing with a pattern that ends with a pathname components separator (sep or altsep) returns only directories. sep altsep ## Comparison to the glob module¶ glob The patterns accepted and results generated by Path. glob() and Path. rglob() differ slightly from those by the glob module: Path. glob() Path. rglob() glob Files beginning with a dot are not special in pathlib.