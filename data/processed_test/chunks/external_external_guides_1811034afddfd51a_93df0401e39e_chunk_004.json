{
  "chunk_id": "external_external_guides_1811034afddfd51a_93df0401e39e_chunk_004",
  "original_doc_id": "external_external_guides_1811034afddfd51a_93df0401e39e",
  "content": "py: error: argument square: invalid int value: 'four' That went well. The program now even helpfully quits on bad illegal input before proceeding. ## Introducing Optional arguments¶ So far we have been playing with positional arguments. Let us have a look on how to add optional ones: import argparse parser = argparse. ArgumentParser() parser. add_argument(\"--verbosity\", help=\"increase output verbosity\") args = parser. parse_args() if args. verbosity: print(\"verbosity turned on\") And the output: $ python prog. py --verbosity 1 verbosity turned on $ python prog. py $ python prog. py --help usage: prog. py [-h] [--verbosity VERBOSITY] options: -h, --help show this help message and exit --verbosity VERBOSITY increase output verbosity $ python prog. py --verbosity usage: prog. py [-h] [--verbosity VERBOSITY] prog. py: error: argument --verbosity: expected one argument Here is what is happening: The program is written so as to display something when --verbosity is specified and display nothing when not. The program is written so as to display something when --verbosity is specified and display nothing when not. --verbosity To show that the option is actually optional, there is no error when running the program without it. Note that by default, if an optional argument isn’t used, the relevant variable, in this case args. verbosity, is given None as a value, which is the reason it fails the truth test of the if statement. To show that the option is actually optional, there is no error when running the program without it. Note that by default, if an optional argument isn’t used, the relevant variable, in this case args. verbosity, is given None as a value, which is the reason it fails the truth test of the if statement. args. verbosity None if The help message is a bit different. The help message is a bit different. When using the --verbosity option, one must also specify some value, any value. When using the --verbosity option, one must also specify some value, any value. --verbosity The above example accepts arbitrary integer values for --verbosity, but for our simple program, only two values are actually useful, True or False. Let’s modify the code accordingly: --verbosity True False import argparse parser = argparse. ArgumentParser() parser.",
  "title": "Argparse Tutorial.13.5",
  "section": "external",
  "subsection": "guides",
  "chunk_index": 4,
  "start_char": 8558,
  "end_char": 10834,
  "token_count": 485,
  "metadata": {
    "original_file": "data/raw/documentation_test/external/external_guides_1811034afddfd51a.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:39.486808"
  },
  "file_path": "data/processed_test/chunks/external_external_guides_1811034afddfd51a_93df0401e39e_chunk_004.txt"
}