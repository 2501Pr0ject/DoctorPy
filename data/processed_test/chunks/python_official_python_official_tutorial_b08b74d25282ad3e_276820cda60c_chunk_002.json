{
  "chunk_id": "python_official_python_official_tutorial_b08b74d25282ad3e_276820cda60c_chunk_002",
  "original_doc_id": "python_official_python_official_tutorial_b08b74d25282ad3e_276820cda60c",
  "content": "14285714285714285' >>> x = 10 * 3. 25 >>> y = 200 * 200 >>> s = 'The value of x is ' + repr(x) + ', and y is ' + repr(y) + '. ' >>> print(s) The value of x is 32. 5, and y is 40000. >>> # The repr() of a string adds string quotes and backslashes: >>> hello = 'hello, world\\n' >>> hellos = repr(hello) >>> print(hellos) 'hello, world\\n' >>> # The argument to repr() may be any Python object: >>> repr((x, y, ('spam', 'eggs'))) \"(32. 5, 40000, ('spam', 'eggs'))\" The string module contains a Template class that offers yet another way to substitute values into strings, using placeholders like $x and replacing them with values from a dictionary, but offers much less control of the formatting. string Template $x ### 7. 1. 1. Formatted String LiteralsÂ¶ Formatted string literals (also called f-strings for short) let you include the value of Python expressions inside a string by prefixing the string with f or F and writing expressions as {expression}. f F {expression} An optional format specifier can follow the expression. This allows greater control over how the value is formatted. The following example rounds pi to three places after the decimal: >>> import math >>> print(f'The value of pi is approximately {math. pi:. 3f}. ') The value of pi is approximately 3. 142. Passing an integer after the ':' will cause that field to be a minimum number of characters wide. This is useful for making columns line up. ':' >>> table = {'Sjoerd': 4127, 'Jack': 4098, 'Dcab': 7678} >>> for name, phone in table. items():. print(f'{name:10} ==> {phone:10d}'). Sjoerd ==> 4127 Jack ==> 4098 Dcab ==> 7678 Other modifiers can be used to convert the value before it is formatted. '. a' applies ascii(), '. s' applies str(), and '. r' applies repr(): '. a' ascii() '. s' str() '.",
  "title": "7. Input and Output.13.5",
  "section": "python_official",
  "subsection": "tutorial",
  "chunk_index": 2,
  "start_char": 4460,
  "end_char": 6230,
  "token_count": 481,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_tutorial_b08b74d25282ad3e.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:37.883807"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_tutorial_b08b74d25282ad3e_276820cda60c_chunk_002.txt"
}