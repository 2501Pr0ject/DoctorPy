Test whether the set is a proper subset of other, that is, set <= other and set. = other. set <= other and set. = other Test whether every element in other is in the set. Test whether the set is a proper superset of other, that is, set >= other and set. = other. set >= other and set. = other Return a new set with elements from the set and all others. Return a new set with elements common to the set and all others. Return a new set with elements in the set that are not in the others. Return a new set with elements in either the set or other but not both. Return a shallow copy of the set. Note, the non-operator versions of union(), intersection(), difference(), symmetric_difference(), issubset(), and issuperset() methods will accept any iterable as an argument. In contrast, their operator based counterparts require their arguments to be sets. This precludes error-prone constructions like set('abc') & 'cbs' in favor of the more readable set('abc'). intersection('cbs'). union() intersection() difference() symmetric_difference() issubset() issuperset() set('abc') & 'cbs' set('abc'). intersection('cbs') Both set and frozenset support set to set comparisons. Two sets are equal if and only if every element of each set is contained in the other (each is a subset of the other). A set is less than another set if and only if the first set is a proper subset of the second set (is a subset, but is not equal). A set is greater than another set if and only if the first set is a proper superset of the second set (is a superset, but is not equal). set frozenset Instances of set are compared to instances of frozenset based on their members. For example, set('abc') == frozenset('abc') returns True and so does set('abc') in set([frozenset('abc')]). set frozenset set('abc') == frozenset('abc') True set('abc') in set([frozenset('abc')]) The subset and equality comparisons do not generalize to a total ordering function. For example, any two nonempty disjoint sets are not equal and are not subsets of each other, so all of the following return False: ab.