{
  "chunk_id": "python_official_python_official_library_275d02bc254e97ec_ea8f648931f7_chunk_069",
  "original_doc_id": "python_official_python_official_library_275d02bc254e97ec_ea8f648931f7",
  "content": "True posix_spawn POSIX_SPAWN_SETSID POSIX_SPAWN_SETSID_NP NotImplementedError The setsigmask argument will set the signal mask to the signal set specified. If the parameter is not used, then the child inherits the parent’s signal mask. This argument corresponds to the C library POSIX_SPAWN_SETSIGMASK flag. POSIX_SPAWN_SETSIGMASK The sigdef argument will reset the disposition of all signals in the set specified. This argument corresponds to the C library POSIX_SPAWN_SETSIGDEF flag. POSIX_SPAWN_SETSIGDEF The scheduler argument must be a tuple containing the (optional) scheduler policy and an instance of sched_param with the scheduler parameters. A value of None in the place of the scheduler policy indicates that is not being provided. This argument is a combination of the C library POSIX_SPAWN_SETSCHEDPARAM and POSIX_SPAWN_SETSCHEDULER flags. sched_param None POSIX_SPAWN_SETSCHEDPARAM POSIX_SPAWN_SETSCHEDULER Raises an auditing event os. posix_spawn with arguments path, argv, env. os. posix_spawn path argv env Added in version 3. 8. Changed in version 3. 13: env parameter accepts None. os. POSIX_SPAWN_CLOSEFROM is available on platforms where posix_spawn_file_actions_addclosefrom_np() exists. None os. POSIX_SPAWN_CLOSEFROM posix_spawn_file_actions_addclosefrom_np() Availability: Unix, not WASI, not Android, not iOS. Wraps the posix_spawnp() C library API for use from Python. posix_spawnp() Similar to posix_spawn() except that the system searches for the executable file in the list of directories specified by the PATH environment variable (in the same way as for execvp(3)). posix_spawn() PATH execvp(3) Raises an auditing event os. posix_spawn with arguments path, argv, env. os. posix_spawn path argv env Added in version 3. 8. Availability: POSIX, not WASI, not Android, not iOS. See posix_spawn() documentation. posix_spawn() Register callables to be executed when a new child process is forked using os. fork() or similar process cloning APIs. The parameters are optional and keyword-only. Each specifies a different call point. os. fork() before is a function called before forking a child process. before is a function called before forking a child process.",
  "title": "os — Miscellaneous operating system interfaces.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 69,
  "start_char": 146974,
  "end_char": 149161,
  "token_count": 495,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_275d02bc254e97ec.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:24.833827"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_275d02bc254e97ec_ea8f648931f7_chunk_069.txt"
}