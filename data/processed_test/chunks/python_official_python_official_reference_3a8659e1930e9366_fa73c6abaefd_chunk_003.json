{
  "chunk_id": "python_official_python_official_reference_3a8659e1930e9366_fa73c6abaefd_chunk_003",
  "original_doc_id": "python_official_python_official_reference_3a8659e1930e9366_fa73c6abaefd",
  "content": "The string representations of the numeric classes, computed by repr() and str(), have the following properties: __repr__() __str__() They are valid numeric literals which, when passed to their class constructor, produce an object having the value of the original numeric. They are valid numeric literals which, when passed to their class constructor, produce an object having the value of the original numeric. The representation is in base 10, when possible. The representation is in base 10, when possible. Leading zeros, possibly excepting a single zero before a decimal point, are not shown. Leading zeros, possibly excepting a single zero before a decimal point, are not shown. Trailing zeros, possibly excepting a single zero after a decimal point, are not shown. Trailing zeros, possibly excepting a single zero after a decimal point, are not shown. A sign is shown only when the number is negative. A sign is shown only when the number is negative. Python distinguishes between integers, floating-point numbers, and complex numbers: #### 3. 2. 4. 1. numbers. Integral¶ numbers. Integral These represent elements from the mathematical set of integers (positive and negative). Note The rules for integer representation are intended to give the most meaningful interpretation of shift and mask operations involving negative integers. There are two types of integers: int These represent numbers in an unlimited range, subject to available (virtual) memory only. For the purpose of shift and mask operations, a binary representation is assumed, and negative numbers are represented in a variant of 2’s complement which gives the illusion of an infinite string of sign bits extending to the left. bool These represent the truth values False and True. The two objects representing the values False and True are the only Boolean objects. The Boolean type is a subtype of the integer type, and Boolean values behave like the values 0 and 1, respectively, in almost all contexts, the exception being that when converted to a string, the strings \"False\" or \"True\" are returned, respectively. False True \"False\" \"True\" #### 3. 2. 4. 2. numbers. Real (float)¶ numbers. Real float These represent machine-level double precision floating-point numbers. You are at the mercy of the underlying machine architecture (and C or Java implementation) for the accepted range and handling of overflow.",
  "title": "3. Data model.13.5",
  "section": "python_official",
  "subsection": "reference",
  "chunk_index": 3,
  "start_char": 7216,
  "end_char": 9602,
  "token_count": 482,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_reference_3a8659e1930e9366.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:56:42.696287"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_reference_3a8659e1930e9366_fa73c6abaefd_chunk_003.txt"
}