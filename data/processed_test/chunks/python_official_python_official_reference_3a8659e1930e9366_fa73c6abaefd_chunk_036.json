{
  "chunk_id": "python_official_python_official_reference_3a8659e1930e9366_fa73c6abaefd_chunk_036",
  "original_doc_id": "python_official_python_official_reference_3a8659e1930e9366_fa73c6abaefd",
  "content": "Without a weakref variable for each instance, classes defining slots do not support weak references to its instances. If weak reference support is needed, then add 'weakref' to the sequence of strings in the slots declaration. weak references '__weakref__' slots are implemented at the class level by creating descriptors for each variable name. As a result, class attributes cannot be used to set default values for instance variables defined by slots; otherwise, the class attribute would overwrite the descriptor assignment. slots are implemented at the class level by creating descriptors for each variable name. As a result, class attributes cannot be used to set default values for instance variables defined by slots; otherwise, the class attribute would overwrite the descriptor assignment. The action of a slots declaration is not limited to the class where it is defined. slots declared in parents are available in child classes. However, instances of a child subclass will get a dict and weakref unless the subclass also defines slots (which should only contain names of any additional slots). The action of a slots declaration is not limited to the class where it is defined. slots declared in parents are available in child classes. However, instances of a child subclass will get a dict and weakref unless the subclass also defines slots (which should only contain names of any additional slots). __dict__ If a class defines a slot also defined in a base class, the instance variable defined by the base class slot is inaccessible (except by retrieving its descriptor directly from the base class). This renders the meaning of the program undefined. In the future, a check may be added to prevent this. If a class defines a slot also defined in a base class, the instance variable defined by the base class slot is inaccessible (except by retrieving its descriptor directly from the base class). This renders the meaning of the program undefined. In the future, a check may be added to prevent this. TypeError will be raised if nonempty slots are defined for a class derived from a \"variable-length\" built-in type such as int, bytes, and tuple. TypeError will be raised if nonempty slots are defined for a class derived from a \"variable-length\" built-in type such as int, bytes, and tuple. TypeError \"variable-length\" built-in type int bytes tuple Any non-string iterable may be assigned to slots. Any non-string iterable may be assigned to slots. If a dictionary is used to assign slots, the dictionary keys will be used as the slot names.",
  "title": "3. Data model.13.5",
  "section": "python_official",
  "subsection": "reference",
  "chunk_index": 36,
  "start_char": 82944,
  "end_char": 85498,
  "token_count": 493,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_reference_3a8659e1930e9366.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:56:42.727050"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_reference_3a8659e1930e9366_fa73c6abaefd_chunk_036.txt"
}