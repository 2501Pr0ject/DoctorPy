In the following example, the replacement function translates decimals into hexadecimal: >>> def hexrepl(match):. "Return the hex string for a decimal number". value = int(match. group()). return hex(value). >>> p = re. compile(r'\d+') >>> p. sub(hexrepl, 'Call 65490 for printing, 49152 for user code. ') 'Call 0xffd2 for printing, 0xc000 for user code. ' When using the module-level re. sub() function, the pattern is passed as the first argument. The pattern may be provided as an object or as a string; if you need to specify regular expression flags, you must either use a pattern object as the first parameter, or use embedded modifiers in the pattern string, e. g. sub("(. i)b+", "x", "bbbb BBBB") returns 'x x'. re. sub() sub("(. i)b+", "x", "bbbb BBBB") 'x x' ## Common Problems¶ Regular expressions are a powerful tool for some applications, but in some ways their behaviour isn’t intuitive and at times they don’t behave the way you may expect them to. This section will point out some of the most common pitfalls. ### Use String Methods¶ Sometimes using the re module is a mistake. If you’re matching a fixed string, or a single character class, and you’re not using any re features such as the IGNORECASE flag, then the full power of regular expressions may not be required. Strings have several methods for performing operations with fixed strings and they’re usually much faster, because the implementation is a single small C loop that’s been optimized for the purpose, instead of the large, more generalized regular expression engine. re re IGNORECASE One example might be replacing a single fixed string with another one; for example, you might replace word with deed. re. sub() seems like the function to use for this, but consider the replace() method. Note that replace() will also replace word inside words, turning swordfish into sdeedfish, but the naive RE word would have done that, too. (To avoid performing the substitution on parts of words, the pattern would have to be \bword\b, in order to require that word have a word boundary on either side. This takes the job beyond replace()’s abilities. ) word deed re.