)+", "a1b2c3") # Matches 3 times. >>> m. group(1) # Returns only the last match. 'c3' m. group(g) >>> m = re. match(r"(\w+) (\w+)", "Isaac Newton, physicist") >>> m[0] # The entire match 'Isaac Newton' >>> m[1] # The first parenthesized subgroup. 'Isaac' >>> m[2] # The second parenthesized subgroup. 'Newton' >>> m = re. match(r"(. P<first_name>\w+) (. P<last_name>\w+)", "Isaac Newton") >>> m['first_name'] 'Isaac' >>> m['last_name'] 'Newton' None >>> m = re. match(r"(\d+)\. (\d+)", "24. 1632") >>> m. groups() ('24', '1632') None >>> m = re. match(r"(\d+)\. (\d+). ", "24") >>> m. groups() # Second group defaults to None. ('24', None) >>> m. groups('0') # Now, the second group defaults to '0'. ('24', '0') None >>> m = re. match(r"(. P<first_name>\w+) (. P<last_name>\w+)", "Malcolm Reynolds") >>> m. groupdict() {'first_name': 'Malcolm', 'last_name': 'Reynolds'} -1 m. group(g) m. string[m. start(g):m. end(g)] m. start(group) m. end(group) m = re. search('b(c. )', 'cba') m. start(0) m. end(0) m. start(1) m. end(1) m. start(2) IndexError >>> email = "tony@tiremove_thisger. net" >>> m = re. search("remove_this", email) >>> email[:m. start()] + email[m. end():] 'tony@tiger. net' (m. start(group), m. end(group)) (-1, -1) search() match() search() match() None (a)b ((a)(b)) ((ab)) lastindex == 1 'ab' (a)(b) lastindex == 2 None match() search() match() search() copy.