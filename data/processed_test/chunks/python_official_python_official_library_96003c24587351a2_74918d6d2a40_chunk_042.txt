foobar setattr() dict dict list set tuple collections __dir__() __getattr__() __getattribute__() dir() __dir__() __dict__ __getattr__() dir() >>> import struct >>> dir() # show the names in the module namespace ['__builtins__', '__name__', 'struct'] >>> dir(struct) # show the names in the struct module ['Struct', '__all__', '__builtins__', '__cached__', '__doc__', '__file__', '__initializing__', '__loader__', '__name__', '__package__', '_clearcache', 'calcsize', 'error', 'pack', 'pack_into', 'unpack', 'unpack_from'] >>> class Shape:. def __dir__(self):. return ['area', 'perimeter', 'location']. >>> s = Shape() >>> dir(s) ['area', 'location', 'perimeter'] dir() (a // b, a % b) (q, a % b) math. floor(a / b) q * b + a % b a % b 0 <= abs(a % b) < abs(b) __next__() enumerate() >>> seasons = ['Spring', 'Summer', 'Fall', 'Winter'] >>> list(enumerate(seasons)) [(0, 'Spring'), (1, 'Summer'), (2, 'Fall'), (3, 'Winter')] >>> list(enumerate(seasons, start=1)) [(1, 'Spring'), (2, 'Summer'), (3, 'Fall'), (4, 'Winter')] def enumerate(iterable, start=0): n = start for elem in iterable: yield n, elem n += 1 str dict None None None None __builtins__ builtins __builtins__ eval() eval() eval() nonlocal >>> x = 1 >>> eval('x+1') 2 compile() 'exec' eval() None exec() globals() locals() eval() exec() ast. literal_eval() exec locals() nonlocal yield return exec() None exec __builtins__ builtins __builtins__ exec() co_freevars exec globals() locals() exec() locals() exec() locals() None filter(function, iterable) (item for item in iterable if function(item)) None (item for item in iterable if item) None itertools. filterfalse() >>> float('+1. 23') 1. 23 >>> float(' -12345\n') -12345. 0 >>> float('1e-003') 0.