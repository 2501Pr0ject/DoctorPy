12: Octal escapes with value larger than 0o377 produce a SyntaxWarning. In a future Python version they will be eventually a SyntaxError. 0o377 SyntaxWarning SyntaxError Unlike in Standard C, exactly two hex digits are required. Unlike in Standard C, exactly two hex digits are required. In a bytes literal, hexadecimal and octal escapes denote the byte with the given value. In a string literal, these escapes denote a Unicode character with the given value. In a bytes literal, hexadecimal and octal escapes denote the byte with the given value. In a string literal, these escapes denote a Unicode character with the given value. Changed in version 3. 3: Support for name aliases [1] has been added. Changed in version 3. 3: Support for name aliases [1] has been added. Exactly four hex digits are required. Exactly four hex digits are required. Any Unicode character can be encoded this way. Exactly eight hex digits are required. Any Unicode character can be encoded this way. Exactly eight hex digits are required. Unlike Standard C, all unrecognized escape sequences are left in the string unchanged, i. e. , the backslash is left in the result. (This behavior is useful when debugging: if an escape sequence is mistyped, the resulting output is more easily recognized as broken. ) It is also important to note that the escape sequences only recognized in string literals fall into the category of unrecognized escapes for bytes literals. Changed in version 3. 6: Unrecognized escape sequences produce a DeprecationWarning. DeprecationWarning Changed in version 3. 12: Unrecognized escape sequences produce a SyntaxWarning. In a future Python version they will be eventually a SyntaxError. SyntaxWarning SyntaxError Even in a raw literal, quotes can be escaped with a backslash, but the backslash remains in the result; for example, r"\"" is a valid string literal consisting of two characters: a backslash and a double quote; r"\" is not a valid string literal (even a raw string cannot end in an odd number of backslashes). Specifically, a raw literal cannot end in a single backslash (since the backslash would escape the following quote character). Note also that a single backslash followed by a newline is interpreted as those two characters as part of the literal, not as a line continuation. r"\"" r"\" ### 2. 4. 2.