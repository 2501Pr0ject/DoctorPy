{
  "chunk_id": "python_official_python_official_library_bfa9edd59fb6bc20_f9e9b8d89b43_chunk_064",
  "original_doc_id": "python_official_python_official_library_bfa9edd59fb6bc20_f9e9b8d89b43",
  "content": "hex() now supports optional sep and bytes_per_sep parameters to insert separators between bytes in the hex output. bytes. hex() memoryview. hex() Return the data in the buffer as a list of elements. >>> memoryview(b'abc'). tolist() [97, 98, 99] >>> import array >>> a = array. array('d', [1. 1, 2. 2, 3. 3]) >>> m = memoryview(a) >>> m. tolist() [1. 1, 2. 2, 3. 3] Changed in version 3. 3: tolist() now supports all single character native formats in struct module syntax as well as multi-dimensional representations. tolist() struct Return a readonly version of the memoryview object. The original memoryview object is unchanged. >>> m = memoryview(bytearray(b'abc')) >>> mm = m. toreadonly() >>> mm. tolist() [97, 98, 99] >>> mm[0] = 42 Traceback (most recent call last): File \"<stdin>\", line 1, in <module> TypeError: cannot modify read-only memory >>> m[0] = 43 >>> mm. tolist() [43, 98, 99] Added in version 3. 8. Release the underlying buffer exposed by the memoryview object. Many objects take special actions when a view is held on them (for example, a bytearray would temporarily forbid resizing); therefore, calling release() is handy to remove these restrictions (and free any dangling resources) as soon as possible. bytearray After this method has been called, any further operation on the view raises a ValueError (except release() itself which can be called multiple times): ValueError release() >>> m = memoryview(b'abc') >>> m. release() >>> m[0] Traceback (most recent call last): File \"<stdin>\", line 1, in <module> ValueError: operation forbidden on released memoryview object The context management protocol can be used for a similar effect, using the with statement: with >>> with memoryview(b'abc') as m:. m[0]. 97 >>> m[0] Traceback (most recent call last): File \"<stdin>\", line 1, in <module> ValueError: operation forbidden on released memoryview object Added in version 3. 2. Cast a memoryview to a new format or shape.",
  "title": "Built-in Types.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 64,
  "start_char": 131318,
  "end_char": 133264,
  "token_count": 501,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_bfa9edd59fb6bc20.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:56:56.236957"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_bfa9edd59fb6bc20_f9e9b8d89b43_chunk_064.txt"
}