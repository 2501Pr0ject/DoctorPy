{
  "chunk_id": "python_official_python_official_library_bfa9edd59fb6bc20_f9e9b8d89b43_chunk_051",
  "original_doc_id": "python_official_python_official_library_bfa9edd59fb6bc20_f9e9b8d89b43",
  "content": "For example: removeprefix() >>> b'Arthur: three. '. lstrip(b'Arthur: ') b'ee. ' >>> b'Arthur: three. '. removeprefix(b'Arthur: ') b'three. ' Note The bytearray version of this method does not operate in place - it always produces a new object, even if no changes were made. Return a copy of the object right justified in a sequence of length width. Padding is done using the specified fillbyte (default is an ASCII space). For bytes objects, the original sequence is returned if width is less than or equal to len(s). bytes len(s) Note The bytearray version of this method does not operate in place - it always produces a new object, even if no changes were made. Split the binary sequence into subsequences of the same type, using sep as the delimiter string. If maxsplit is given, at most maxsplit splits are done, the rightmost ones. If sep is not specified or None, any subsequence consisting solely of ASCII whitespace is a separator. Except for splitting from the right, rsplit() behaves like split() which is described in detail below. None rsplit() split() Return a copy of the sequence with specified trailing bytes removed. The chars argument is a binary sequence specifying the set of byte values to be removed - the name refers to the fact this method is usually used with ASCII characters. If omitted or None, the chars argument defaults to removing ASCII whitespace. The chars argument is not a suffix; rather, all combinations of its values are stripped: None >>> b' spacious '. rstrip() b' spacious' >>> b'mississippi'. rstrip(b'ipz') b'mississ' The binary sequence of byte values to remove may be any bytes-like object. See removesuffix() for a method that will remove a single suffix string rather than all of a set of characters. For example: removesuffix() >>> b'Monty Python'. rstrip(b' Python') b'M' >>> b'Monty Python'. removesuffix(b' Python') b'Monty' Note The bytearray version of this method does not operate in place - it always produces a new object, even if no changes were made. Split the binary sequence into subsequences of the same type, using sep as the delimiter string.",
  "title": "Built-in Types.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 51,
  "start_char": 104865,
  "end_char": 106971,
  "token_count": 471,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_bfa9edd59fb6bc20.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:56:56.225574"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_bfa9edd59fb6bc20_f9e9b8d89b43_chunk_051.txt"
}