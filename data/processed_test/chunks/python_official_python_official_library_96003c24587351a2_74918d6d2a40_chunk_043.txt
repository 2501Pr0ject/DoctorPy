001 >>> float('+1E6') 1000000. 0 >>> float('-Infinity') -inf '+' '-' '+' floatvalue sign ::= "+" | "-" infinity ::= "Infinity" | "inf" nan ::= "nan" digit ::= <a Unicode decimal digit, i. e. characters in Unicode general category Nd> digitpart ::= digit (["_"] digit)* number ::= [digitpart] ". " digitpart | digitpart [". "] exponent ::= ("e" | "E") [sign] digitpart floatnumber ::= number [exponent] absfloatvalue ::= floatnumber | infinity | nan floatvalue ::= [sign] absfloatvalue digit digit digitpart digitpart digitpart sign digitpart number exponent floatnumber infinity nan sign absfloatvalue OverflowError x float(x) x. __float__() __float__() __index__() 0. 0 __index__() __float__() str(value) format(value, format_spec) type(value). __format__(value, format_spec) __format__() TypeError object object(). __format__(format_spec) TypeError frozenset frozenset frozenset set list tuple dict collections getattr(x, 'foobar') x. foobar AttributeError setattr() getattr() True False getattr(object, name) AttributeError __hash__() hash() help() site pydoc inspect int __index__() >>> hex(255) '0xff' >>> hex(-42) '-0x2a' >>> '%#x' % 255, '%x' % 255, '%X' % 255 ('0xff', 'ff', 'FF') >>> format(255, '#x'), format(255, 'x'), format(255, 'X') ('0xff', 'ff', 'FF') >>> f'{255:#x}', f'{255:x}', f'{255:X}' ('0xff', 'ff', 'FF') format() int() float. hex() id() builtins. id id EOFError >>> s = input('--> ') --> Monty Python's Flying Circus >>> s "Monty Python's Flying Circus" readline input() builtins. input prompt builtins. input/result 0 >>> int(123.