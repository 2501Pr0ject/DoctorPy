Note that on non-POSIX systems that include leap seconds in their notion of a timestamp, leap seconds are ignored by fromtimestamp(), and then it’s possible to have two timestamps differing by a second that yield identical datetime objects. This method is preferred over utcfromtimestamp(). fromtimestamp() OverflowError localtime() gmtime() OSError localtime() gmtime() fromtimestamp() datetime utcfromtimestamp() Changed in version 3. 3: Raise OverflowError instead of ValueError if the timestamp is out of the range of values supported by the platform C localtime() or gmtime() functions. Raise OSError instead of ValueError on localtime() or gmtime() failure. OverflowError ValueError localtime() gmtime() OSError ValueError localtime() gmtime() Changed in version 3. 6: fromtimestamp() may return instances with fold set to 1. fromtimestamp() fold Return the UTC datetime corresponding to the POSIX timestamp, with tzinfo None. (The resulting object is naive. ) datetime tzinfo None This may raise OverflowError, if the timestamp is out of the range of values supported by the platform C gmtime() function, and OSError on gmtime() failure. It’s common for this to be restricted to years in 1970 through 2038. OverflowError gmtime() OSError gmtime() To get an aware datetime object, call fromtimestamp(): datetime fromtimestamp() datetime. fromtimestamp(timestamp, timezone. utc) On the POSIX compliant platforms, it is equivalent to the following expression: datetime(1970, 1, 1, tzinfo=timezone. utc) + timedelta(seconds=timestamp) except the latter formula always supports the full years range: between MINYEAR and MAXYEAR inclusive. MINYEAR MAXYEAR Warning Because naive datetime objects are treated by many datetime methods as local times, it is preferred to use aware datetimes to represent times in UTC. As such, the recommended way to create an object representing a specific timestamp in UTC is by calling datetime. fromtimestamp(timestamp, tz=timezone. utc). datetime datetime datetime. fromtimestamp(timestamp, tz=timezone. utc) Changed in version 3. 3: Raise OverflowError instead of ValueError if the timestamp is out of the range of values supported by the platform C gmtime() function. Raise OSError instead of ValueError on gmtime() failure. OverflowError ValueError gmtime() OSError ValueError gmtime() Deprecated since version 3. 12: Use datetime. fromtimestamp() with UTC instead. datetime.