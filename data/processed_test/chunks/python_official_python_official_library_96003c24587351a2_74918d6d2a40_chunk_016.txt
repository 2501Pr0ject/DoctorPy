45) 123 >>> int('123') 123 >>> int(' -12_345\n') -12345 >>> int('FACE', 16) 64206 >>> int('0xface', 0) 64206 >>> int('01110011', base=2) 115 If the argument defines int(), int(x) returns x. int(). If the argument defines index(), it returns x. index(). If the argument defines trunc(), it returns x. trunc(). For floating-point numbers, this truncates towards zero. __int__() int(x) x. __int__() __index__() x. __index__() __trunc__() x. __trunc__() If the argument is not a number or if base is given, then it must be a string, bytes, or bytearray instance representing an integer in radix base. Optionally, the string can be preceded by + or - (with no space in between), have leading zeros, be surrounded by whitespace, and have single underscores interspersed between digits. bytes bytearray + - A base-n integer string contains digits, each representing a value from 0 to n-1. The values 0–9 can be represented by any Unicode decimal digit. The values 10–35 can be represented by a to z (or A to Z). The default base is 10. The allowed bases are 0 and 2–36. Base-2, -8, and -16 strings can be optionally prefixed with 0b/0B, 0o/0O, or 0x/0X, as with integer literals in code. For base 0, the string is interpreted in a similar way to an integer literal in code, in that the actual base is 2, 8, 10, or 16 as determined by the prefix. Base 0 also disallows leading zeros: int('010', 0) is not legal, while int('010') and int('010', 8) are. a z A Z 0b 0B 0o 0O 0x 0X int('010', 0) int('010') int('010', 8) The integer type is described in Numeric Types — int, float, complex. Changed in version 3. 4: If base is not an instance of int and the base object has a base.