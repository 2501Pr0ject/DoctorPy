{
  "chunk_id": "python_official_python_official_reference_99fb26420c3873aa_898565d1500b_chunk_009",
  "original_doc_id": "python_official_python_official_reference_99fb26420c3873aa_898565d1500b",
  "content": "The recognized escape sequences are: 'r' 'R' Escape Sequence Meaning Notes \\ \\ Backslash and newline ignored (1) \\ \\\\ Backslash () \\ \\' \\' Single quote (') ' \\\" \\\" Double quote (\") \" \\a \\a ASCII Bell (BEL) \\b \\b ASCII Backspace (BS) \\f \\f ASCII Formfeed (FF) \\n \\n ASCII Linefeed (LF) \\r \\r ASCII Carriage Return (CR) \\t \\t ASCII Horizontal Tab (TAB) \\v \\v ASCII Vertical Tab (VT) \\ooo \\ooo Character with octal value ooo (2,4) \\xhh \\xhh Character with hex value hh (3,4) Escape sequences only recognized in string literals are: Escape Sequence Meaning Notes \\N{name} \\N{name} Character named name in the Unicode database (5) \\uxxxx \\uxxxx Character with 16-bit hex value xxxx (6) \\Uxxxxxxxx \\Uxxxxxxxx Character with 32-bit hex value xxxxxxxx (7) Notes: A backslash can be added at the end of a line to ignore the newline: >>> 'This string will not include \\. backslashes or newline characters. ' 'This string will not include backslashes or newline characters. ' The same result can be achieved using triple-quoted strings, or parentheses and string literal concatenation. A backslash can be added at the end of a line to ignore the newline: >>> 'This string will not include \\. backslashes or newline characters. ' 'This string will not include backslashes or newline characters. ' The same result can be achieved using triple-quoted strings, or parentheses and string literal concatenation. As in Standard C, up to three octal digits are accepted. Changed in version 3. 11: Octal escapes with value larger than 0o377 produce a DeprecationWarning. Changed in version 3. 12: Octal escapes with value larger than 0o377 produce a SyntaxWarning. In a future Python version they will be eventually a SyntaxError. As in Standard C, up to three octal digits are accepted. Changed in version 3. 11: Octal escapes with value larger than 0o377 produce a DeprecationWarning. 0o377 DeprecationWarning Changed in version 3.",
  "title": "2. Lexical analysis.13.5",
  "section": "python_official",
  "subsection": "reference",
  "chunk_index": 9,
  "start_char": 18068,
  "end_char": 19981,
  "token_count": 483,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_reference_99fb26420c3873aa.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:25.399181"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_reference_99fb26420c3873aa_898565d1500b_chunk_009.txt"
}