isoformat() '2009-11-27T00:00:00. 000100-06:39' The optional argument timespec specifies the number of additional components of the time to include (the default is 'auto'). It can be one of the following: 'auto' 'auto': Same as 'seconds' if microsecond is 0, same as 'microseconds' otherwise. 'auto': Same as 'seconds' if microsecond is 0, same as 'microseconds' otherwise. 'auto' 'seconds' microsecond 'microseconds' 'hours': Include the hour in the two-digit HH format. 'hours': Include the hour in the two-digit HH format. 'hours' hour HH 'minutes': Include hour and minute in HH:MM format. 'minutes': Include hour and minute in HH:MM format. 'minutes' hour minute HH:MM 'seconds': Include hour, minute, and second in HH:MM:SS format. 'seconds': Include hour, minute, and second in HH:MM:SS format. 'seconds' hour minute second HH:MM:SS 'milliseconds': Include full time, but truncate fractional second part to milliseconds. HH:MM:SS. sss format. 'milliseconds': Include full time, but truncate fractional second part to milliseconds. HH:MM:SS. sss format. 'milliseconds' HH:MM:SS. sss 'microseconds': Include full time in HH:MM:SS. ffffff format. 'microseconds': Include full time in HH:MM:SS. ffffff format. 'microseconds' HH:MM:SS. ffffff Note Excluded time components are truncated, not rounded. ValueError will be raised on an invalid timespec argument: ValueError >>> from datetime import datetime >>> datetime. now(). isoformat(timespec='minutes') '2002-12-25T00:00' >>> dt = datetime(2015, 1, 1, 12, 30, 59, 0) >>> dt. isoformat(timespec='microseconds') '2015-01-01T12:30:59. 000000' Changed in version 3. 6: Added the timespec parameter. For a datetime instance d, str(d) is equivalent to d. isoformat(' '). datetime d str(d) d.