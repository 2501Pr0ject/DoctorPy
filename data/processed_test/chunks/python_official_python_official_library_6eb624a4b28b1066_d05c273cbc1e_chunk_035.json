{
  "chunk_id": "python_official_python_official_library_6eb624a4b28b1066_d05c273cbc1e_chunk_035",
  "original_doc_id": "python_official_python_official_library_6eb624a4b28b1066_d05c273cbc1e",
  "content": "This makes it possible to specify a format string for a time object in formatted string literals and when using str. format(). See also strftime() and strptime() Behavior and time. isoformat(). time. strftime() time str. format() time. isoformat() If tzinfo is None, returns None, else returns self. tzinfo. utcoffset(None), and raises an exception if the latter doesn’t return None or a timedelta object with magnitude less than one day. tzinfo None None self. tzinfo. utcoffset(None) None timedelta Changed in version 3. 7: The UTC offset is not restricted to a whole number of minutes. If tzinfo is None, returns None, else returns self. tzinfo. dst(None), and raises an exception if the latter doesn’t return None, or a timedelta object with magnitude less than one day. tzinfo None None self. tzinfo. dst(None) None timedelta Changed in version 3. 7: The DST offset is not restricted to a whole number of minutes. If tzinfo is None, returns None, else returns self. tzinfo. tzname(None), or raises an exception if the latter doesn’t return None or a string object. tzinfo None None self. tzinfo. tzname(None) None ### Examples of Usage: time¶ time Examples of working with a time object: time >>> from datetime import time, tzinfo, timedelta >>> class TZ1(tzinfo):. def utcoffset(self, dt):. return timedelta(hours=1). def dst(self, dt):. return timedelta(0). def tzname(self,dt):. return \"+01:00\". def __repr__(self):. return f\"{self. __class__. __name__}()\". >>> t = time(12, 10, 30, tzinfo=TZ1()) >>> t datetime. time(12, 10, 30, tzinfo=TZ1()) >>> t. isoformat() '12:10:30+01:00' >>> t. dst() datetime. timedelta(0) >>> t. tzname() '+01:00' >>> t. strftime(\"%H:%M:%S %Z\") '12:10:30 +01:00' >>> 'The {} is {:%H:%M}. '. format(\"time\", t) 'The time is 12:10.",
  "title": "datetime — Basic date and time types.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 35,
  "start_char": 67404,
  "end_char": 69167,
  "token_count": 489,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_6eb624a4b28b1066.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:01.412353"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_6eb624a4b28b1066_d05c273cbc1e_chunk_035.txt"
}