{
  "chunk_id": "python_official_python_official_library_ccf716b46391ca56_40d31454785a_chunk_003",
  "original_doc_id": "python_official_python_official_library_ccf716b46391ca56_40d31454785a",
  "content": "For example, aa will match 'aaaa' because the a will match all 4 'a's, but, when the final 'a' is encountered, the expression is backtracked so that in the end the a ends up matching 3 'a's total, and the fourth 'a' is matched by the final 'a'. However, when a+a is used to match 'aaaa', the a+ will match all 4 'a', but when the final 'a' fails to find any more characters to match, the expression cannot be backtracked and will thus fail to match. x+, x++ and x. + are equivalent to (. >x), (. >x+) and (. >x. ) correspondingly. '*' '+' '. ' '+' a*a 'aaaa' a* 'a' 'a' a* 'a' 'a' 'a' a*+a 'aaaa' a*+ 'a' 'a' x*+ x++ x. + (. >x*) (. >x+) (. >x. ) Added in version 3. 11. {m} Specifies that exactly m copies of the previous RE should be matched; fewer matches cause the entire RE not to match. For example, a{6} will match exactly six 'a' characters, but not five. a{6} 'a' {m,n} Causes the resulting RE to match from m to n repetitions of the preceding RE, attempting to match as many repetitions as possible. For example, a{3,5} will match from 3 to 5 'a' characters. Omitting m specifies a lower bound of zero, and omitting n specifies an infinite upper bound. As an example, a{4,}b will match 'aaaab' or a thousand 'a' characters followed by a 'b', but not 'aaab'. The comma may not be omitted or the modifier would be confused with the previously described form. a{3,5} 'a' a{4,}b 'aaaab' 'a' 'b' 'aaab' {m,n}. Causes the resulting RE to match from m to n repetitions of the preceding RE, attempting to match as few repetitions as possible. This is the non-greedy version of the previous quantifier.",
  "title": "re â€” Regular expression operations.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 3,
  "start_char": 6498,
  "end_char": 8101,
  "token_count": 473,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_ccf716b46391ca56.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:36.804602"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_ccf716b46391ca56_40d31454785a_chunk_003.txt"
}