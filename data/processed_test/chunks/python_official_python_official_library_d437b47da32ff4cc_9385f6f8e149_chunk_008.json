{
  "chunk_id": "python_official_python_official_library_d437b47da32ff4cc_9385f6f8e149_chunk_008",
  "original_doc_id": "python_official_python_official_library_d437b47da32ff4cc_9385f6f8e149",
  "content": "2. '/usr/local' --exec-prefix pyconfig. h exec_prefix/lib/pythonX. Y/config exec_prefix/lib/pythonX. Y/lib-dynload 3. 2 Note If a virtual environment is in effect, this value will be changed in site. py to point to the virtual environment. The value for the Python installation will still be available, via base_exec_prefix. site. py base_exec_prefix A string giving the absolute path of the executable binary for the Python interpreter, on systems where this makes sense. If Python is unable to retrieve the real path to its executable, sys. executable will be an empty string or None. sys. executable None Raise a SystemExit exception, signaling an intention to exit the interpreter. SystemExit The optional argument arg can be an integer giving the exit status (defaulting to zero), or another type of object. If it is an integer, zero is considered “successful termination” and any nonzero value is considered “abnormal termination” by shells and the like. Most systems require it to be in the range 0–127, and produce undefined results otherwise. Some systems have a convention for assigning specific meanings to specific exit codes, but these are generally underdeveloped; Unix programs generally use 2 for command line syntax errors and 1 for all other kind of errors. If another type of object is passed, None is equivalent to passing zero, and any other object is printed to stderr and results in an exit code of 1. In particular, sys. exit(\"some error message\") is a quick way to exit a program when an error occurs. None stderr sys. exit(\"some error message\") Since exit() ultimately “only” raises an exception, it will only exit the process when called from the main thread, and the exception is not intercepted. Cleanup actions specified by finally clauses of try statements are honored, and it is possible to intercept the exit attempt at an outer level. exit() try Changed in version 3. 6: If an error occurs in the cleanup after the Python interpreter has caught SystemExit (such as an error flushing buffered data in the standard streams), the exit status is changed to 120. SystemExit The named tuple flags exposes the status of command line flags. The attributes are read only.",
  "title": "sys — System-specific parameters and functions.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 8,
  "start_char": 18393,
  "end_char": 20589,
  "token_count": 460,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_d437b47da32ff4cc.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:04.425907"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_d437b47da32ff4cc_9385f6f8e149_chunk_008.txt"
}