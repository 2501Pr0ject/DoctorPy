{
  "chunk_id": "python_official_python_official_reference_086a4fc66c4c8ed9_8fde32723cc1_chunk_013",
  "original_doc_id": "python_official_python_official_reference_086a4fc66c4c8ed9_8fde32723cc1",
  "content": "otherwise, a reference to that value is stored in the local namespace, using the name in the as clause if it is present, otherwise using the attribute name for each of the identifiers specified in the import clauses: import check if the imported module has an attribute by that name check if the imported module has an attribute by that name if not, attempt to import a submodule with that name and then check the imported module again for that attribute if not, attempt to import a submodule with that name and then check the imported module again for that attribute if the attribute is not found, ImportError is raised. if the attribute is not found, ImportError is raised. ImportError otherwise, a reference to that value is stored in the local namespace, using the name in the as clause if it is present, otherwise using the attribute name otherwise, a reference to that value is stored in the local namespace, using the name in the as clause if it is present, otherwise using the attribute name as Examples: import foo # foo imported and bound locally import foo. bar. baz # foo, foo. bar, and foo. bar. baz imported, foo bound locally import foo. bar. baz as fbb # foo, foo. bar, and foo. bar. baz imported, foo. bar. baz bound as fbb from foo. bar import baz # foo, foo. bar, and foo. bar. baz imported, foo. bar. baz bound as baz from foo import attr # foo imported and foo. attr bound as attr If the list of identifiers is replaced by a star (''), all public names defined in the module are bound in the local namespace for the scope where the import statement occurs. '*' import The public names defined by a module are determined by checking the module’s namespace for a variable named all; if defined, it must be a sequence of strings which are names defined or imported by that module. The names given in all are all considered public and are required to exist. If all is not defined, the set of public names includes all names found in the module’s namespace which do not begin with an underscore character ('_'). all should contain the entire public API. It is intended to avoid accidentally exporting items that are not part of the API (such as library modules which were imported and used within the module). __all__ __all__ __all__ '_' __all__ The wild card form of import — from module import * — is only allowed at the module level.",
  "title": "7. Simple statements.13.5",
  "section": "python_official",
  "subsection": "reference",
  "chunk_index": 13,
  "start_char": 30964,
  "end_char": 33316,
  "token_count": 496,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_reference_086a4fc66c4c8ed9.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:05.266744"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_reference_086a4fc66c4c8ed9_8fde32723cc1_chunk_013.txt"
}