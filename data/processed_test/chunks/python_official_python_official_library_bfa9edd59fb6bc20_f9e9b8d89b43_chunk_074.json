{
  "chunk_id": "python_official_python_official_library_bfa9edd59fb6bc20_f9e9b8d89b43_chunk_074",
  "original_doc_id": "python_official_python_official_library_bfa9edd59fb6bc20_f9e9b8d89b43",
  "content": "If default is not given and key is not in the dictionary, a KeyError is raised. KeyError Remove and return a (key, value) pair from the dictionary. Pairs are returned in LIFO order. (key, value) popitem() is useful to destructively iterate over a dictionary, as often used in set algorithms. If the dictionary is empty, calling popitem() raises a KeyError. popitem() popitem() KeyError Changed in version 3. 7: LIFO order is now guaranteed. In prior versions, popitem() would return an arbitrary key/value pair. popitem() Return a reverse iterator over the keys of the dictionary. This is a shortcut for reversed(d. keys()). reversed(d. keys()) Added in version 3. 8. If key is in the dictionary, return its value. If not, insert key with a value of default and return default. default defaults to None. None Update the dictionary with the key/value pairs from other, overwriting existing keys. Return None. None update() accepts either another object with a keys() method (in which case getitem() is called with every key returned from the method) or an iterable of key/value pairs (as tuples or other iterables of length two). If keyword arguments are specified, the dictionary is then updated with those key/value pairs: d. update(red=1, blue=2). update() keys() __getitem__() d. update(red=1, blue=2) Return a new view of the dictionaryâ€™s values. See the documentation of view objects. An equality comparison between one dict. values() view and another will always return False. This also applies when comparing dict. values() to itself: dict. values() False dict. values() >>> d = {'a': 1} >>> d. values() == d. values() False Create a new dictionary with the merged keys and values of d and other, which must both be dictionaries. The values of other take priority when d and other share keys. Added in version 3. 9. Update the dictionary d with keys and values from other, which may be either a mapping or an iterable of key/value pairs. The values of other take priority when d and other share keys. Added in version 3. 9. Dictionaries and dictionary views are reversible.",
  "title": "Built-in Types.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 74,
  "start_char": 150214,
  "end_char": 152294,
  "token_count": 473,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_bfa9edd59fb6bc20.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:56:56.246124"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_bfa9edd59fb6bc20_f9e9b8d89b43_chunk_074.txt"
}