{
  "chunk_id": "python_official_python_official_library_d437b47da32ff4cc_9385f6f8e149_chunk_024",
  "original_doc_id": "python_official_python_official_library_d437b47da32ff4cc_9385f6f8e149",
  "content": "This may be an extension function or a built-in. arg is the C function object. 'c_return' A C function has returned. arg is the C function object. 'c_exception' A C function has raised an exception. arg is the C function object. Raises an auditing event sys. setprofile with no arguments. sys. setprofile Set the maximum depth of the Python interpreter stack to limit. This limit prevents infinite recursion from causing an overflow of the C stack and crashing Python. The highest possible limit is platform-dependent. A user may need to set the limit higher when they have a program that requires deep recursion and a platform that supports a higher limit. This should be done with care, because a too-high limit can lead to a crash. If the new limit is too low at the current recursion depth, a RecursionError exception is raised. RecursionError Changed in version 3. 5. 1: A RecursionError exception is now raised if the new limit is too low at the current recursion depth. RecursionError Set the interpreter’s thread switch interval (in seconds). This floating-point value determines the ideal duration of the “timeslices” allocated to concurrently running Python threads. Please note that the actual value can be higher, especially if long-running internal functions or methods are used. Also, which thread becomes scheduled at the end of the interval is the operating system’s decision. The interpreter doesn’t have its own scheduler. Added in version 3. 2. Set the system’s trace function, which allows you to implement a Python source code debugger in Python. The function is thread-specific; for a debugger to support multiple threads, it must register a trace function using settrace() for each thread being debugged or use threading. settrace(). settrace() threading. settrace() Trace functions should have three arguments: frame, event, and arg. frame is the current stack frame. event is a string: 'call', 'line', 'return', 'exception' or 'opcode'. arg depends on the event type. 'call' 'line' 'return' 'exception' 'opcode' The trace function is invoked (with event set to 'call') whenever a new local scope is entered; it should return a reference to a local trace function to be used for the new scope, or None if the scope shouldn’t be traced.",
  "title": "sys — System-specific parameters and functions.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 24,
  "start_char": 52833,
  "end_char": 55092,
  "token_count": 480,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_d437b47da32ff4cc.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:04.440097"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_d437b47da32ff4cc_9385f6f8e149_chunk_024.txt"
}