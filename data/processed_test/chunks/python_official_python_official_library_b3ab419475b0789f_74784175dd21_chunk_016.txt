read_bytes() b'Binary file contents' An existing file of the same name is overwritten. Added in version 3. 5. ### Reading directories¶ When the path points to a directory, yield path objects of the directory contents: >>> p = Path('docs') >>> for child in p. iterdir(): child. PosixPath('docs/conf. py') PosixPath('docs/_templates') PosixPath('docs/make. bat') PosixPath('docs/index. rst') PosixPath('docs/_build') PosixPath('docs/_static') PosixPath('docs/Makefile') The children are yielded in arbitrary order, and the special entries '. ' and '. ' are not included. If a file is removed from or added to the directory after creating the iterator, it is unspecified whether a path object for that file is included. '. ' '. ' If the path is not a directory or otherwise inaccessible, OSError is raised. OSError Glob the given relative pattern in the directory represented by this path, yielding all matching files (of any kind): >>> sorted(Path('. '). glob('*. py')) [PosixPath('pathlib. py'), PosixPath('setup. py'), PosixPath('test_pathlib. py')] >>> sorted(Path('. '). glob('*/*. py')) [PosixPath('docs/conf. py')] >>> sorted(Path('. '). glob('**/*. py')) [PosixPath('build/lib/pathlib. py'), PosixPath('docs/conf. py'), PosixPath('pathlib. py'), PosixPath('setup. py'), PosixPath('test_pathlib. py')] See also Pattern language documentation. By default, or when the case_sensitive keyword-only argument is set to None, this method matches paths using platform-specific casing rules: typically, case-sensitive on POSIX, and case-insensitive on Windows. Set case_sensitive to True or False to override this behaviour. None True False By default, or when the recurse_symlinks keyword-only argument is set to False, this method follows symlinks except when expanding “” wildcards. Set recurse_symlinks to True to always follow symlinks. False ** True Raises an auditing event pathlib. Path. glob with arguments self, pattern. pathlib. Path. glob self pattern Changed in version 3. 12: The case_sensitive parameter was added. Changed in version 3.