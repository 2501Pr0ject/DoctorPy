(3) timedelta q, r = divmod(t1, t2) q, r = divmod(t1, t2) Computes the quotient and the remainder: q = t1 // t2 (3) and r = t1 % t2. q is an integer and r is a timedelta object. q = t1 // t2 r = t1 % t2 q r timedelta +t1 +t1 Returns a timedelta object with the same value. (2) timedelta -t1 -t1 Equivalent to timedelta(-t1. days, -t1. seconds, -t1. microseconds), and to t1 * -1. (1)(4) timedelta(-t1. days, -t1. seconds, -t1. microseconds) t1 * -1 abs(t) abs(t) Equivalent to +t when t. days >= 0, and to -t when t. days < 0. (2) +t t. days >= 0 -t t. days < 0 str(t) str(t) Returns a string in the form [D day[s], ][H]H:MM:SS[. UUUUUU], where D is negative for negative t. (5) [D day[s], ][H]H:MM:SS[. UUUUUU] t repr(t) repr(t) Returns a string representation of the timedelta object as a constructor call with canonical attribute values. timedelta Notes: This is exact but may overflow. This is exact but may overflow. This is exact and cannot overflow. This is exact and cannot overflow. Division by zero raises ZeroDivisionError. Division by zero raises ZeroDivisionError. ZeroDivisionError -timedelta. max is not representable as a timedelta object. -timedelta. max is not representable as a timedelta object. -timedelta. max timedelta String representations of timedelta objects are normalized similarly to their internal representation. This leads to somewhat unusual results for negative timedeltas. For example: >>> timedelta(hours=-5) datetime. timedelta(days=-1, seconds=68400) >>> print(_) -1 day, 19:00:00 String representations of timedelta objects are normalized similarly to their internal representation. This leads to somewhat unusual results for negative timedeltas. For example: timedelta >>> timedelta(hours=-5) datetime.