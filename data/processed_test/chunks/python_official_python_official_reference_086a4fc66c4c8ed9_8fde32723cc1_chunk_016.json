{
  "chunk_id": "python_official_python_official_reference_086a4fc66c4c8ed9_8fde32723cc1_chunk_016",
  "original_doc_id": "python_official_python_official_reference_086a4fc66c4c8ed9_8fde32723cc1",
  "content": "The global statement¶ global global_stmt ::= \"global\" identifier (\",\" identifier)* identifier identifier The global statement causes the listed identifiers to be interpreted as globals. It would be impossible to assign to a global variable without global, although free variables may refer to globals without being declared global. global global The global statement applies to the entire scope of a function or class body. A SyntaxError is raised if a variable is used or assigned to prior to its global declaration in the scope. global SyntaxError Programmer’s note: global is a directive to the parser. It applies only to code parsed at the same time as the global statement. In particular, a global statement contained in a string or code object supplied to the built-in exec() function does not affect the code block containing the function call, and code contained in such a string is unaffected by global statements in the code containing the function call. The same applies to the eval() and compile() functions. global global global exec() global eval() compile() ## 7. 13. The nonlocal statement¶ nonlocal nonlocal_stmt ::= \"nonlocal\" identifier (\",\" identifier)* identifier identifier When the definition of a function or class is nested (enclosed) within the definitions of other functions, its nonlocal scopes are the local scopes of the enclosing functions. The nonlocal statement causes the listed identifiers to refer to names previously bound in nonlocal scopes. It allows encapsulated code to rebind such nonlocal identifiers. If a name is bound in more than one nonlocal scope, the nearest binding is used. If a name is not bound in any nonlocal scope, or if there is no nonlocal scope, a SyntaxError is raised. nonlocal SyntaxError The nonlocal statement applies to the entire scope of a function or class body. A SyntaxError is raised if a variable is used or assigned to prior to its nonlocal declaration in the scope. nonlocal SyntaxError See also The specification for the nonlocal statement. nonlocal Programmer’s note: nonlocal is a directive to the parser and applies only to code parsed along with it. See the note for the global statement. nonlocal global ## 7. 14. The type statement¶ type type_stmt ::= 'type' identifier [type_params] \"=\" expression identifier type_params expression The type statement declares a type alias, which is an instance of typing. TypeAliasType. type typing.",
  "title": "7. Simple statements.13.5",
  "section": "python_official",
  "subsection": "reference",
  "chunk_index": 16,
  "start_char": 38226,
  "end_char": 40642,
  "token_count": 483,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_reference_086a4fc66c4c8ed9.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:05.269370"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_reference_086a4fc66c4c8ed9_8fde32723cc1_chunk_016.txt"
}