{
  "chunk_id": "python_official_python_official_library_482e94da82fc8f58_4a9e7712fa00_chunk_003",
  "original_doc_id": "python_official_python_official_library_482e94da82fc8f58_4a9e7712fa00",
  "content": "close() BaseException Exception Raised when the import statement has troubles trying to load a module. Also raised when the “from list” in from. import has a name that cannot be found. import from. import The optional name and path keyword-only arguments set the corresponding attributes: The name of the module that was attempted to be imported. The path to any file which triggered the exception. Changed in version 3. 3: Added the name and path attributes. name path A subclass of ImportError which is raised by import when a module could not be located. It is also raised when None is found in sys. modules. ImportError import None sys. modules Added in version 3. 6. Raised when a sequence subscript is out of range. (Slice indices are silently truncated to fall in the allowed range; if an index is not an integer, TypeError is raised. ) TypeError Raised when a mapping (dictionary) key is not found in the set of existing keys. Raised when the user hits the interrupt key (normally Control-C or Delete). During execution, a check for interrupts is made regularly. The exception inherits from BaseException so as to not be accidentally caught by code that catches Exception and thus prevent the interpreter from exiting. BaseException Exception Note Catching a KeyboardInterrupt requires special consideration. Because it can be raised at unpredictable points, it may, in some circumstances, leave the running program in an inconsistent state. It is generally best to allow KeyboardInterrupt to end the program as quickly as possible or avoid raising it entirely. (See Note on Signal Handlers and Exceptions. ) KeyboardInterrupt KeyboardInterrupt Raised when an operation runs out of memory but the situation may still be rescued (by deleting some objects). The associated value is a string indicating what kind of (internal) operation ran out of memory. Note that because of the underlying memory management architecture (C’s malloc() function), the interpreter may not always be able to completely recover from this situation; it nevertheless raises an exception so that a stack traceback can be printed, in case a run-away program was the cause. malloc() Raised when a local or global name is not found. This applies only to unqualified names. The associated value is an error message that includes the name that could not be found. The name attribute can be set using a keyword-only argument to the constructor. When set it represent the name of the variable that was attempted to be accessed. name Changed in version 3. 10: Added the name attribute.",
  "title": "Built-in Exceptions.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 3,
  "start_char": 7616,
  "end_char": 10176,
  "token_count": 495,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_482e94da82fc8f58.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:34.388322"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_482e94da82fc8f58_4a9e7712fa00_chunk_003.txt"
}