{
  "chunk_id": "python_official_python_official_library_6eb624a4b28b1066_d05c273cbc1e_chunk_046",
  "original_doc_id": "python_official_python_official_library_6eb624a4b28b1066_d05c273cbc1e",
  "content": "timezone(timedelta(0)) ## strftime() and strptime() Behavior¶ strftime() strptime() date, datetime, and time objects all support a strftime(format) method, to create a string representing the time under the control of an explicit format string. date datetime time strftime(format) Conversely, the datetime. strptime() class method creates a datetime object from a string representing a date and time and a corresponding format string. datetime. strptime() datetime The table below provides a high-level comparison of strftime() versus strptime(): strftime() strptime() strftime strftime strptime strptime Usage Convert object to a string according to a given format Parse a string into a datetime object given a corresponding format datetime Type of method Instance method Class method Method of date; datetime; time date datetime time datetime datetime Signature strftime(format) strftime(format) strptime(date_string, format) strptime(date_string, format) ### strftime() and strptime() Format Codes¶ strftime() strptime() These methods accept format codes that can be used to parse and format dates: >>> datetime. strptime('31/01/22 23:59:59. 999999',. '%d/%m/%y %H:%M:%S. %f') datetime. datetime(2022, 1, 31, 23, 59, 59, 999999) >>> _. strftime('%a %d %b %Y, %I:%M%p') 'Mon 31 Jan 2022, 11:59PM' The following is a list of all the format codes that the 1989 C standard requires, and these work on all platforms with a standard C implementation. Directive Meaning Example Notes %a %a Weekday as locale’s abbreviated name. (1) %A %A Weekday as locale’s full name. (1) %w %w Weekday as a decimal number, where 0 is Sunday and 6 is Saturday. 0, 1, …, 6 %d %d Day of the month as a zero-padded decimal number. 01, 02, …, 31 (9) %b %b Month as locale’s abbreviated name. (1) %B %B Month as locale’s full name. (1) %m %m Month as a zero-padded decimal number.",
  "title": "datetime — Basic date and time types.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 46,
  "start_char": 88137,
  "end_char": 89992,
  "token_count": 476,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_6eb624a4b28b1066.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:01.423116"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_6eb624a4b28b1066_d05c273cbc1e_chunk_046.txt"
}