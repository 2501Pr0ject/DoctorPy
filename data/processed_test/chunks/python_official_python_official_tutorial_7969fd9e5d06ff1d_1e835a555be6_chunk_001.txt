The string printed as the exception type is the name of the built-in exception that occurred. This is true for all built-in exceptions, but need not be true for user-defined exceptions (although it is a useful convention). Standard exception names are built-in identifiers (not reserved keywords). ZeroDivisionError NameError TypeError The rest of the line provides detail based on the type of exception and what caused it. The preceding part of the error message shows the context where the exception occurred, in the form of a stack traceback. In general it contains a stack traceback listing source lines; however, it will not display lines read from standard input. Built-in Exceptions lists the built-in exceptions and their meanings. ## 8. 3. Handling ExceptionsÂ¶ It is possible to write programs that handle selected exceptions. Look at the following example, which asks the user for input until a valid integer has been entered, but allows the user to interrupt the program (using Control-C or whatever the operating system supports); note that a user-generated interruption is signalled by raising the KeyboardInterrupt exception. KeyboardInterrupt >>> while True:. try:. x = int(input("Please enter a number: ")). break. except ValueError:. print("Oops. That was no valid number. Try again. "). The try statement works as follows. try First, the try clause (the statement(s) between the try and except keywords) is executed. First, the try clause (the statement(s) between the try and except keywords) is executed. try except If no exception occurs, the except clause is skipped and execution of the try statement is finished. If no exception occurs, the except clause is skipped and execution of the try statement is finished. try If an exception occurs during execution of the try clause, the rest of the clause is skipped. Then, if its type matches the exception named after the except keyword, the except clause is executed, and then execution continues after the try/except block. If an exception occurs during execution of the try clause, the rest of the clause is skipped. Then, if its type matches the exception named after the except keyword, the except clause is executed, and then execution continues after the try/except block. try except If an exception occurs which does not match the exception named in the except clause, it is passed on to outer try statements; if no handler is found, it is an unhandled exception and execution stops with an error message.