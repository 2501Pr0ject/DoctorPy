{
  "chunk_id": "python_official_python_official_library_5d5c28b4535c3ee9_06d74d2595f9_chunk_004",
  "original_doc_id": "python_official_python_official_library_5d5c28b4535c3ee9_06d74d2595f9",
  "content": "For the most compact JSON, specify (',', ':') to eliminate whitespace. separators (tuple | None) – A two-tuple: (item_separator, key_separator). If None (the default), separators defaults to (', ', ': ') if indent is None, and (',', ': ') otherwise. For the most compact JSON, specify (',', ':') to eliminate whitespace. (item_separator, key_separator) None (', ', ': ') None (',', ': ') (',', ':') default (callable | None) – A function that is called for objects that can’t otherwise be serialized. It should return a JSON encodable version of the object or raise a TypeError. If None (the default), TypeError is raised. default (callable | None) – A function that is called for objects that can’t otherwise be serialized. It should return a JSON encodable version of the object or raise a TypeError. If None (the default), TypeError is raised. TypeError None TypeError sort_keys (bool) – If True, dictionaries will be outputted sorted by key. Default False. sort_keys (bool) – If True, dictionaries will be outputted sorted by key. Default False. True False Changed in version 3. 2: Allow strings for indent in addition to integers. Changed in version 3. 4: Use (',', ': ') as default if indent is not None. (',', ': ') None Changed in version 3. 6: All optional parameters are now keyword-only. Serialize obj to a JSON formatted str using this conversion table. The arguments have the same meaning as in dump(). str dump() Note Keys in key/value pairs of JSON are always of the type str. When a dictionary is converted into JSON, all the keys of the dictionary are coerced to strings. As a result of this, if a dictionary is converted into JSON and then back into a dictionary, the dictionary may not equal the original one. That is, loads(dumps(x)). = x if x has non-string keys. str loads(dumps(x)). = x Deserialize fp to a Python object using the JSON-to-Python conversion table. fp (file-like object) – A. read()-supporting text file or binary file containing the JSON document to be deserialized. fp (file-like object) – A. read()-supporting text file or binary file containing the JSON document to be deserialized.",
  "title": "json — JSON encoder and decoder.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 4,
  "start_char": 7653,
  "end_char": 9777,
  "token_count": 490,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_5d5c28b4535c3ee9.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:37.142304"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_5d5c28b4535c3ee9_06d74d2595f9_chunk_004.txt"
}