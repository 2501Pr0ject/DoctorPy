{
  "chunk_id": "python_official_python_official_tutorial_0118e3709bd1b85c_ef028d6ff8ea_chunk_008",
  "original_doc_id": "python_official_python_official_tutorial_0118e3709bd1b85c_ef028d6ff8ea",
  "content": "days 14368 zlib gzip bz2 lzma zipfile tarfile >>> import zlib >>> s = b'witch which has which witches wrist watch' >>> len(s) 41 >>> t = zlib. compress(s) >>> len(t) 37 >>> zlib. decompress(t) b'witch which has which witches wrist watch' >>> zlib. crc32(s) 226805979 timeit >>> from timeit import Timer >>> Timer('t=a; a=b; b=t', 'a=1; b=2'). timeit() 0. 57535828626024577 >>> Timer('a,b = b,a', 'a=1; b=2'). timeit() 0. 54962537085770791 timeit profile pstats doctest def average(values): \"\"\"Computes the arithmetic mean of a list of numbers. >>> print(average([20, 30, 70])) 40. 0 \"\"\" return sum(values) / len(values) import doctest doctest. testmod() # automatically validate the embedded tests unittest doctest import unittest class TestStatisticalFunctions(unittest. TestCase): def test_average(self): self. assertEqual(average([20, 30, 70]), 40. 0) self. assertEqual(round(average([1, 5, 7]), 1), 4. 3) with self. assertRaises(ZeroDivisionError): average([]) with self. assertRaises(TypeError): average(20, 30, 70) unittest. main() # Calling from the command line invokes all tests xmlrpc. client xmlrpc. server email smtplib poplib json csv xml. etree. ElementTree xml. dom xml. sax sqlite3 gettext locale codecs.",
  "title": "10. Brief Tour of the Standard Library.13.5",
  "section": "python_official",
  "subsection": "tutorial",
  "chunk_index": 8,
  "start_char": 15676,
  "end_char": 16896,
  "token_count": 356,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_tutorial_0118e3709bd1b85c.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:05.427120"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_tutorial_0118e3709bd1b85c_ef028d6ff8ea_chunk_008.txt"
}