{
  "chunk_id": "python_official_python_official_library_275d02bc254e97ec_ea8f648931f7_chunk_006",
  "original_doc_id": "python_official_python_official_library_275d02bc254e97ec_ea8f648931f7",
  "content": "Availability: Unix, not WASI. Return the real group id of the current process. Availability: Unix. The function is a stub on WASI, see WebAssembly platforms for more information. Return list of group ids that user belongs to. If group is not in the list, it is included; typically, group is specified as the group ID field from the password record for user, because that group ID will otherwise be potentially omitted. Availability: Unix, not WASI. Added in version 3. 3. Return list of supplemental group ids associated with the current process. Availability: Unix, not WASI. Note On macOS, getgroups() behavior differs somewhat from other Unix platforms. If the Python interpreter was built with a deployment target of 10. 5 or earlier, getgroups() returns the list of effective group ids associated with the current user process; this list is limited to a system-defined number of entries, typically 16, and may be modified by calls to setgroups() if suitably privileged. If built with a deployment target greater than 10. 5, getgroups() returns the current group access list for the user associated with the effective user id of the process; the group access list may change over the lifetime of the process, it is not affected by calls to setgroups(), and its length is not limited to 16. The deployment target value, MACOSX_DEPLOYMENT_TARGET, can be obtained with sysconfig. get_config_var(). getgroups() 10. 5 getgroups() setgroups() 10. 5 getgroups() setgroups() MACOSX_DEPLOYMENT_TARGET sysconfig. get_config_var() Return the name of the user logged in on the controlling terminal of the process. For most purposes, it is more useful to use getpass. getuser() since the latter checks the environment variables LOGNAME or USERNAME to find out who the user is, and falls back to pwd. getpwuid(os. getuid())[0] to get the login name of the current real user id. getpass. getuser() LOGNAME USERNAME pwd. getpwuid(os. getuid())[0] Availability: Unix, Windows, not WASI. Return the process group id of the process with process id pid. If pid is 0, the process group id of the current process is returned. Availability: Unix, not WASI. Return the id of the current process group.",
  "title": "os â€” Miscellaneous operating system interfaces.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 6,
  "start_char": 13585,
  "end_char": 15766,
  "token_count": 496,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_275d02bc254e97ec.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:24.777102"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_275d02bc254e97ec_ea8f648931f7_chunk_006.txt"
}