{
  "chunk_id": "python_official_python_official_library_8bb6cc8251877a19_520a0a3989d6_chunk_012",
  "original_doc_id": "python_official_python_official_library_8bb6cc8251877a19_520a0a3989d6",
  "content": "count(vowel) for vowel in 'AEIOUaeiou') None Decimal(42) Fraction(42) ('answer', Decimal(42)) ('answer', Fraction(42)) cache_parameters() dict cache_info() cache_clear() __wrapped__ self @lru_cache(maxsize=32) def get_pep(num): 'Retrieve text of a Python Enhancement Proposal' resource = f' try: with urllib. request. urlopen(resource) as s: return s. read() except urllib. error. HTTPError: return 'Not Found' >>> for n in 8, 290, 308, 320, 8, 218, 320, 279, 289, 320, 9991:. pep = get_pep(n). print(n, len(pep)) >>> get_pep. cache_info() CacheInfo(hits=3, misses=8, maxsize=32, currsize=8) @lru_cache(maxsize=None) def fib(n): if n < 2: return n return fib(n-1) + fib(n-2) >>> [fib(n) for n in range(16)] [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610] >>> fib. cache_info() CacheInfo(hits=28, misses=16, maxsize=None, currsize=16) cache_parameters() __lt__() __le__() __gt__() __ge__() __eq__() @total_ordering class Student: def _is_valid_operand(self, other): return (hasattr(other, \"lastname\") and hasattr(other, \"firstname\")) def __eq__(self, other): if not self. _is_valid_operand(other): return NotImplemented return ((self. lastname. lower(), self. firstname. lower()) == (other. lastname. lower(), other. firstname. lower())) def __lt__(self, other): if not self. _is_valid_operand(other): return NotImplemented return ((self. lastname. lower(), self. firstname. lower()) < (other. lastname. lower(), other. firstname.",
  "title": "functools â€” Higher-order functions and operations on callable objects.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 12,
  "start_char": 26584,
  "end_char": 28027,
  "token_count": 454,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_8bb6cc8251877a19.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:09.507781"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_8bb6cc8251877a19_520a0a3989d6_chunk_012.txt"
}