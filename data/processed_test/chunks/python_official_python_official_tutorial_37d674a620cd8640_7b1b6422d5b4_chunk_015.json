{
  "chunk_id": "python_official_python_official_tutorial_37d674a620cd8640_7b1b6422d5b4_chunk_015",
  "original_doc_id": "python_official_python_official_tutorial_37d674a620cd8640_7b1b6422d5b4",
  "content": "pop() 5 >>> stack [3, 4] collections. deque >>> from collections import deque >>> queue = deque([\"Eric\", \"John\", \"Michael\"]) >>> queue. append(\"Terry\") # Terry arrives >>> queue. append(\"Graham\") # Graham arrives >>> queue. popleft() # The first to arrive now leaves 'Eric' >>> queue. popleft() # The second to arrive now leaves 'John' >>> queue # Remaining queue in order of arrival deque(['Michael', 'Terry', 'Graham']) >>> squares = [] >>> for x in range(10):. squares. append(x**2). >>> squares [0, 1, 4, 9, 16, 25, 36, 49, 64, 81] x squares = list(map(lambda x: x**2, range(10))) squares = [x**2 for x in range(10)] for for if for if >>> [(x, y) for x in [1,2,3] for y in [3,1,4] if x. = y] [(1, 3), (1, 4), (2, 3), (2, 1), (2, 4), (3, 1), (3, 4)] >>> combs = [] >>> for x in [1,2,3]:. for y in [3,1,4]:. if x. = y:. combs. append((x, y)).",
  "title": "5. Data Structures.13.5",
  "section": "python_official",
  "subsection": "tutorial",
  "chunk_index": 15,
  "start_char": 23944,
  "end_char": 24788,
  "token_count": 311,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_tutorial_37d674a620cd8640.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:05.629250"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_tutorial_37d674a620cd8640_7b1b6422d5b4_chunk_015.txt"
}