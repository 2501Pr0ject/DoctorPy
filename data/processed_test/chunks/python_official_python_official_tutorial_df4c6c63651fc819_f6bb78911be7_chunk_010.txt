insort(scores, (300, 'ruby')) >>> scores [(100, 'perl'), (200, 'tcl'), (300, 'ruby'), (400, 'lua'), (500, 'python')] heapq >>> from heapq import heapify, heappop, heappush >>> data = [1, 3, 5, 7, 9, 2, 4, 6, 8, 0] >>> heapify(data) # rearrange the list into heap order >>> heappush(data, -5) # add a new entry >>> [heappop(data) for i in range(3)] # fetch the three smallest entries [-5, 0, 1] decimal Decimal float >>> from decimal import * >>> round(Decimal('0. 70') * Decimal('1. 05'), 2) Decimal('0. 74') >>> round(. 70 * 1. 05, 2) 0. 73 Decimal Decimal >>> Decimal('1. 00') % Decimal('. 10') Decimal('0. 00') >>> 1. 00 % 0. 10 0. 09999999999999995 >>> sum([Decimal('0. 1')]*10) == Decimal('1. 0') True >>> 0. 1 + 0. 1 + 0. 1 + 0. 1 + 0. 1 + 0. 1 + 0. 1 + 0. 1 + 0. 1 + 0. 1 == 1. 0 False decimal >>> getcontext(). prec = 36 >>> Decimal(1) / Decimal(7) Decimal('0. 142857142857142857142857142857142857').