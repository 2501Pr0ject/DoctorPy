{
  "chunk_id": "python_official_python_official_library_bfa9edd59fb6bc20_f9e9b8d89b43_chunk_028",
  "original_doc_id": "python_official_python_official_library_bfa9edd59fb6bc20_f9e9b8d89b43",
  "content": "For example, the German lowercase letter 'ß' is equivalent to \"ss\". Since it is already lowercase, lower() would do nothing to 'ß'; casefold() converts it to \"ss\". 'ß' \"ss\" lower() 'ß' casefold() \"ss\" The casefolding algorithm is described in section 3. 13 ‘Default Case Folding’ of the Unicode Standard. Added in version 3. 3. Return centered in a string of length width. Padding is done using the specified fillchar (default is an ASCII space). The original string is returned if width is less than or equal to len(s). For example: len(s) >>> 'Python'. center(10) ' Python ' >>> 'Python'. center(10, '-') '--Python--' >>> 'Python'. center(4) 'Python' Return the number of non-overlapping occurrences of substring sub in the range [start, end]. Optional arguments start and end are interpreted as in slice notation. If sub is empty, returns the number of empty strings between characters which is the length of the string plus one. For example: >>> 'spam, spam, spam'. count('spam') 3 >>> 'spam, spam, spam'. count('spam', 5) 2 >>> 'spam, spam, spam'. count('spam', 5, 10) 1 >>> 'spam, spam, spam'. count('eggs') 0 >>> 'spam, spam, spam'. count('') 17 Return the string encoded to bytes. bytes encoding defaults to 'utf-8'; see Standard Encodings for possible values. 'utf-8' errors controls how encoding errors are handled. If 'strict' (the default), a UnicodeError exception is raised. Other possible values are 'ignore', 'replace', 'xmlcharrefreplace', 'backslashreplace' and any other name registered via codecs. register_error(). See Error Handlers for details. 'strict' UnicodeError 'ignore' 'replace' 'xmlcharrefreplace' 'backslashreplace' codecs. register_error() For performance reasons, the value of errors is not checked for validity unless an encoding error actually occurs, Python Development Mode is enabled or a debug build is used. Changed in version 3. 1: Added support for keyword arguments. Changed in version 3. 9: The value of the errors argument is now checked in Python Development Mode and in debug mode.",
  "title": "Built-in Types.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 28,
  "start_char": 56124,
  "end_char": 58153,
  "token_count": 498,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_bfa9edd59fb6bc20.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:56:56.204758"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_bfa9edd59fb6bc20_f9e9b8d89b43_chunk_028.txt"
}