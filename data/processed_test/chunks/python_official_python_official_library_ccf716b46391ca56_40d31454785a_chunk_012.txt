If the ordinary character is not an ASCII digit or an ASCII letter, then the resulting RE will match the second character. For example, \$ matches the character '$'. '\' \$ '$' \number Matches the contents of the group of the same number. Groups are numbered starting from 1. For example, (. +) \1 matches 'the the' or '55 55', but not 'thethe' (note the space after the group). This special sequence can only be used to match one of the first 99 groups. If the first digit of number is 0, or number is 3 octal digits long, it will not be interpreted as a group match, but as the character with octal value number. Inside the '[' and ']' of a character class, all numeric escapes are treated as characters. (. +) \1 'the the' '55 55' 'thethe' '[' ']' \A Matches only at the start of the string. \b Matches the empty string, but only at the beginning or end of a word. A word is defined as a sequence of word characters. Note that formally, \b is defined as the boundary between a \w and a \W character (or vice versa), or between \w and the beginning or end of the string. This means that r'\bat\b' matches 'at', 'at. ', '(at)', and 'as at ay' but not 'attempt' or 'atlas'. \b \w \W \w r'\bat\b' 'at' 'at. ' '(at)' 'as at ay' 'attempt' 'atlas' The default word characters in Unicode (str) patterns are Unicode alphanumerics and the underscore, but this can be changed by using the ASCII flag. Word boundaries are determined by the current locale if the LOCALE flag is used. ASCII LOCALE Note Inside a character range, \b represents the backspace character, for compatibility with Pythonâ€™s string literals. \b \B Matches the empty string, but only when it is not at the beginning or end of a word. This means that r'at\B' matches 'athens', 'atom', 'attorney', but not 'at', 'at. ', or 'at. '.