{
  "chunk_id": "python_official_python_official_library_ccf716b46391ca56_40d31454785a_chunk_018",
  "original_doc_id": "python_official_python_official_library_ccf716b46391ca56_40d31454785a",
  "content": "match() If you want to locate a match anywhere in string, use search() instead (see also search() vs. match()). search() The expression’s behaviour can be modified by specifying a flags value. Values can be any of the flags variables, combined using bitwise OR (the | operator). | If the whole string matches the regular expression pattern, return a corresponding Match. Return None if the string does not match the pattern; note that this is different from a zero-length match. Match None The expression’s behaviour can be modified by specifying a flags value. Values can be any of the flags variables, combined using bitwise OR (the | operator). | Added in version 3. 4. Split string by the occurrences of pattern. If capturing parentheses are used in pattern, then the text of all groups in the pattern are also returned as part of the resulting list. If maxsplit is nonzero, at most maxsplit splits occur, and the remainder of the string is returned as the final element of the list. >>> re. split(r'\\W+', 'Words, words, words. ') ['Words', 'words', 'words', ''] >>> re. split(r'(\\W+)', 'Words, words, words. ') ['Words', ', ', 'words', ', ', 'words', '. ', ''] >>> re. split(r'\\W+', 'Words, words, words. ', maxsplit=1) ['Words', 'words, words. '] >>> re. split('[a-f]+', '0a3B9', flags=re. IGNORECASE) ['0', '3', '9'] If there are capturing groups in the separator and it matches at the start of the string, the result will start with an empty string. The same holds for the end of the string: >>> re. split(r'(\\W+)', '. words, words. ') ['', '. ', 'words', ', ', 'words', '. ', ''] That way, separator components are always found at the same relative indices within the result list. Adjacent empty matches are not possible, but an empty match can occur immediately after a non-empty match. >>> re. split(r'\\b', 'Words, words, words. ') ['', 'Words', ', ', 'words', ', ', 'words', '. '] >>> re. split(r'\\W*', '. words. ') ['', '', 'w', 'o', 'r', 'd', 's', '', ''] >>> re.",
  "title": "re — Regular expression operations.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 18,
  "start_char": 35061,
  "end_char": 37038,
  "token_count": 501,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_ccf716b46391ca56.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:36.817617"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_ccf716b46391ca56_40d31454785a_chunk_018.txt"
}