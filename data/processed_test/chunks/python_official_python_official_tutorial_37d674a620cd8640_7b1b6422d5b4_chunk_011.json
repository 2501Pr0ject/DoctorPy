{
  "chunk_id": "python_official_python_official_tutorial_37d674a620cd8640_7b1b6422d5b4_chunk_011",
  "original_doc_id": "python_official_python_official_tutorial_37d674a620cd8640_7b1b6422d5b4",
  "content": "0 tic 1 tac 2 toe To loop over two or more sequences at the same time, the entries can be paired with the zip() function. zip() >>> questions = ['name', 'quest', 'favorite color'] >>> answers = ['lancelot', 'the holy grail', 'blue'] >>> for q, a in zip(questions, answers):. print('What is your {0}. It is {1}. '. format(q, a)). What is your name. It is lancelot. What is your quest. It is the holy grail. What is your favorite color. It is blue. To loop over a sequence in reverse, first specify the sequence in a forward direction and then call the reversed() function. reversed() >>> for i in reversed(range(1, 10, 2)):. print(i). 9 7 5 3 1 To loop over a sequence in sorted order, use the sorted() function which returns a new sorted list while leaving the source unaltered. sorted() >>> basket = ['apple', 'orange', 'apple', 'pear', 'orange', 'banana'] >>> for i in sorted(basket):. print(i). apple apple banana orange orange pear Using set() on a sequence eliminates duplicate elements. The use of sorted() in combination with set() over a sequence is an idiomatic way to loop over unique elements of the sequence in sorted order. set() sorted() set() >>> basket = ['apple', 'orange', 'apple', 'pear', 'orange', 'banana'] >>> for f in sorted(set(basket)):. print(f). apple banana orange pear It is sometimes tempting to change a list while you are looping over it; however, it is often simpler and safer to create a new list instead. >>> import math >>> raw_data = [56. 2, float('NaN'), 51. 7, 55. 3, 52. 5, float('NaN'), 47. 8] >>> filtered_data = [] >>> for value in raw_data:. if not math. isnan(value):. filtered_data. append(value). >>> filtered_data [56. 2, 51. 7, 55. 3, 52. 5, 47. 8] ## 5. 7. More on ConditionsÂ¶ The conditions used in while and if statements can contain any operators, not just comparisons.",
  "title": "5. Data Structures.13.5",
  "section": "python_official",
  "subsection": "tutorial",
  "chunk_index": 11,
  "start_char": 16935,
  "end_char": 18757,
  "token_count": 499,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_tutorial_37d674a620cd8640.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:05.625431"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_tutorial_37d674a620cd8640_7b1b6422d5b4_chunk_011.txt"
}