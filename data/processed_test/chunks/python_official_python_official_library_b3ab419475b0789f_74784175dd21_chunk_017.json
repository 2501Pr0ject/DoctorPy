{
  "chunk_id": "python_official_python_official_library_b3ab419475b0789f_74784175dd21_chunk_017",
  "original_doc_id": "python_official_python_official_library_b3ab419475b0789f_74784175dd21",
  "content": "13: The recurse_symlinks parameter was added. Changed in version 3. 13: The pattern parameter accepts a path-like object. Changed in version 3. 13: Any OSError exceptions raised from scanning the filesystem are suppressed. In previous versions, such exceptions are suppressed in many cases, but not all. OSError Glob the given relative pattern recursively. This is like calling Path. glob() with “/” added in front of the pattern. Path. glob() **/ See also Pattern language and Path. glob() documentation. Path. glob() Raises an auditing event pathlib. Path. rglob with arguments self, pattern. pathlib. Path. rglob self pattern Changed in version 3. 12: The case_sensitive parameter was added. Changed in version 3. 13: The recurse_symlinks parameter was added. Changed in version 3. 13: The pattern parameter accepts a path-like object. Generate the file names in a directory tree by walking the tree either top-down or bottom-up. For each directory in the directory tree rooted at self (including self but excluding ‘. ’ and ‘. ’), the method yields a 3-tuple of (dirpath, dirnames, filenames). (dirpath, dirnames, filenames) dirpath is a Path to the directory currently being walked, dirnames is a list of strings for the names of subdirectories in dirpath (excluding '. ' and '. '), and filenames is a list of strings for the names of the non-directory files in dirpath. To get a full path (which begins with self) to a file or directory in dirpath, do dirpath / name. Whether or not the lists are sorted is file system-dependent. Path '. ' '. ' dirpath / name If the optional argument top_down is true (which is the default), the triple for a directory is generated before the triples for any of its subdirectories (directories are walked top-down). If top_down is false, the triple for a directory is generated after the triples for all of its subdirectories (directories are walked bottom-up). No matter the value of top_down, the list of subdirectories is retrieved before the triples for the directory and its subdirectories are walked. When top_down is true, the caller can modify the dirnames list in-place (for example, using del or slice assignment), and Path. walk() will only recurse into the subdirectories whose names remain in dirnames.",
  "title": "pathlib — Object-oriented filesystem paths.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 17,
  "start_char": 33522,
  "end_char": 35777,
  "token_count": 498,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_b3ab419475b0789f.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:32.499648"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_b3ab419475b0789f_74784175dd21_chunk_017.txt"
}