{
  "chunk_id": "python_official_python_official_library_96003c24587351a2_74918d6d2a40_chunk_027",
  "original_doc_id": "python_official_python_official_library_96003c24587351a2_74918d6d2a40",
  "content": "os. PathLike On Windows, opening a console buffer may return a subclass of io. RawIOBase other than io. FileIO. On Windows, opening a console buffer may return a subclass of io. RawIOBase other than io. FileIO. io. RawIOBase io. FileIO Changed in version 3. 11: The 'U' mode has been removed. 'U' Given a string representing one Unicode character, return an integer representing the Unicode code point of that character. For example, ord('a') returns the integer 97 and ord('€') (Euro sign) returns 8364. This is the inverse of chr(). ord('a') 97 ord('€') 8364 chr() Return base to the power exp; if mod is present, return base to the power exp, modulo mod (computed more efficiently than pow(base, exp) % mod). The two-argument form pow(base, exp) is equivalent to using the power operator: baseexp. pow(base, exp) % mod pow(base, exp) base**exp The arguments must have numeric types. With mixed operand types, the coercion rules for binary arithmetic operators apply. For int operands, the result has the same type as the operands (after coercion) unless the second argument is negative; in that case, all arguments are converted to float and a float result is delivered. For example, pow(10, 2) returns 100, but pow(10, -2) returns 0. 01. For a negative base of type int or float and a non-integral exponent, a complex result is delivered. For example, pow(-9, 0. 5) returns a value close to 3j. Whereas, for a negative base of type int or float with an integral exponent, a float result is delivered. For example, pow(-9, 2. 0) returns 81. 0. int pow(10, 2) 100 pow(10, -2) 0. 01 int float pow(-9, 0. 5) 3j int float pow(-9, 2. 0) 81. 0 For int operands base and exp, if mod is present, mod must also be of integer type and mod must be nonzero. If mod is present and exp is negative, base must be relatively prime to mod.",
  "title": "Built-in Functions.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 27,
  "start_char": 58195,
  "end_char": 60020,
  "token_count": 493,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_96003c24587351a2.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:31.018557"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_96003c24587351a2_74918d6d2a40_chunk_027.txt"
}