In all other places where they can be used, parentheses are not required, including in if and while statements. assert with assignment if while Added in version 3. 8: See PEP 572 for more details about assignment expressions. ## 6. 13. Conditional expressions¶ conditional_expression ::= or_test ["if" or_test "else" expression] expression ::= conditional_expression | lambda_expr or_test or_test expression conditional_expression lambda_expr Conditional expressions (sometimes called a “ternary operator”) have the lowest priority of all Python operations. The expression x if C else y first evaluates the condition, C rather than x. If C is true, x is evaluated and its value is returned; otherwise, y is evaluated and its value is returned. x if C else y See PEP 308 for more details about conditional expressions. ## 6. 14. Lambdas¶ lambda_expr ::= "lambda" [parameter_list] ":" expression parameter_list expression Lambda expressions (sometimes called lambda forms) are used to create anonymous functions. The expression lambda parameters: expression yields a function object. The unnamed object behaves like a function object defined with: lambda parameters: expression def <lambda>(parameters): return expression See section Function definitions for the syntax of parameter lists. Note that functions created with lambda expressions cannot contain statements or annotations. ## 6. 15. Expression lists¶ starred_expression ::= ["*"] or_expr flexible_expression ::= assignment_expression | starred_expression flexible_expression_list ::= flexible_expression ("," flexible_expression)* [","] starred_expression_list ::= starred_expression ("," starred_expression)* [","] expression_list ::= expression ("," expression)* [","] yield_list ::= expression_list | starred_expression "," [starred_expression_list] or_expr assignment_expression starred_expression flexible_expression flexible_expression starred_expression starred_expression expression expression expression_list starred_expression starred_expression_list Except when part of a list or set display, an expression list containing at least one comma yields a tuple. The length of the tuple is the number of expressions in the list. The expressions are evaluated from left to right. An asterisk * denotes iterable unpacking. Its operand must be an iterable. The iterable is expanded into a sequence of items, which are included in the new tuple, list, or set, at the site of the unpacking. * Added in version 3. 5: Iterable unpacking in expression lists, originally proposed by PEP 448. Added in version 3.