{
  "chunk_id": "python_official_python_official_library_bfa9edd59fb6bc20_f9e9b8d89b43_chunk_063",
  "original_doc_id": "python_official_python_official_library_bfa9edd59fb6bc20_f9e9b8d89b43",
  "content": "array('b', [5, 3, 1]) >>> x = memoryview(a) >>> y = memoryview(b) >>> x == a == y == b True >>> x. tolist() == a. tolist() == y. tolist() == b. tolist() True >>> z = y[::-2] >>> z == c True >>> z. tolist() == c. tolist() True If either format string is not supported by the struct module, then the objects will always compare as unequal (even if the format strings and buffer contents are identical): struct >>> from ctypes import BigEndianStructure, c_long >>> class BEPoint(BigEndianStructure):. _fields_ = [(\"x\", c_long), (\"y\", c_long)]. >>> point = BEPoint(100, 200) >>> a = memoryview(point) >>> b = memoryview(point) >>> a == point False >>> a == b False Note that, as with floating-point numbers, v is w does not imply v == w for memoryview objects. v is w v == w Changed in version 3. 3: Previous versions compared the raw memory disregarding the item format and the logical array structure. Return the data in the buffer as a bytestring. This is equivalent to calling the bytes constructor on the memoryview. bytes >>> m = memoryview(b\"abc\") >>> m. tobytes() b'abc' >>> bytes(m) b'abc' For non-contiguous arrays the result is equal to the flattened list representation with all elements converted to bytes. tobytes() supports all format strings, including those that are not in struct module syntax. tobytes() struct Added in version 3. 8: order can be {‘C’, ‘F’, ‘A’}. When order is ‘C’ or ‘F’, the data of the original array is converted to C or Fortran order. For contiguous views, ‘A’ returns an exact copy of the physical memory. In particular, in-memory Fortran order is preserved. For non-contiguous views, the data is converted to C first. order=None is the same as order=’C’. Return a string object containing two hexadecimal digits for each byte in the buffer. >>> m = memoryview(b\"abc\") >>> m. hex() '616263' Added in version 3. 5. Changed in version 3. 8: Similar to bytes. hex(), memoryview.",
  "title": "Built-in Types.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 63,
  "start_char": 129405,
  "end_char": 131318,
  "token_count": 501,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_bfa9edd59fb6bc20.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:56:56.236076"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_bfa9edd59fb6bc20_f9e9b8d89b43_chunk_063.txt"
}