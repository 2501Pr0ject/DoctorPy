{
  "chunk_id": "python_official_python_official_library_d437b47da32ff4cc_9385f6f8e149_chunk_027",
  "original_doc_id": "python_official_python_official_library_d437b47da32ff4cc_9385f6f8e149",
  "content": "cr_origin cr_origin None To enable, pass a depth value greater than zero; this sets the number of frames whose information will be captured. To disable, pass set depth to zero. This setting is thread-specific. Added in version 3. 7. Note This function has been added on a provisional basis (see PEP 411 for details. ) Use it only for debugging purposes. Activate the stack profiler trampoline backend. The only supported backend is \"perf\". \"perf\" Availability: Linux. Added in version 3. 12. See also Python support for the Linux perf profiler Python support for the Linux perf profiler   Deactivate the current stack profiler trampoline backend. If no stack profiler is activated, this function has no effect. Availability: Linux. Added in version 3. 12. Return True if a stack profiler trampoline is active. True Availability: Linux. Added in version 3. 12. Changes the filesystem encoding and error handler to ‘mbcs’ and ‘replace’ respectively, for consistency with versions of Python prior to 3. 6. This is equivalent to defining the PYTHONLEGACYWINDOWSFSENCODING environment variable before launching Python. PYTHONLEGACYWINDOWSFSENCODING See also sys. getfilesystemencoding() and sys. getfilesystemencodeerrors(). sys. getfilesystemencoding() sys. getfilesystemencodeerrors() Availability: Windows. Note Changing the filesystem encoding after Python startup is risky because the old fsencoding or paths encoded by the old fsencoding may be cached somewhere. Use PYTHONLEGACYWINDOWSFSENCODING instead. PYTHONLEGACYWINDOWSFSENCODING Added in version 3. 6: See PEP 529 for more details. Deprecated since version 3. 13, will be removed in version 3. 16: Use PYTHONLEGACYWINDOWSFSENCODING instead. PYTHONLEGACYWINDOWSFSENCODING File objects used by the interpreter for standard input, output and errors: stdin is used for all interactive input (including calls to input()); stdin is used for all interactive input (including calls to input()); stdin input() stdout is used for the output of print() and expression statements and for the prompts of input(); stdout is used for the output of print() and expression statements and for the prompts of input(); stdout print() input() The interpreter’s own prompts and its error messages go to stderr.",
  "title": "sys — System-specific parameters and functions.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 27,
  "start_char": 59754,
  "end_char": 62000,
  "token_count": 491,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_d437b47da32ff4cc.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:04.442667"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_d437b47da32ff4cc_9385f6f8e149_chunk_027.txt"
}