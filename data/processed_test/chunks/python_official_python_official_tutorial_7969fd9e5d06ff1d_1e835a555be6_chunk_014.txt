caught <class 'ExceptionGroup'>: e >>> except* except except* >>> def f():. raise ExceptionGroup(. "group1",. [. OSError(1),. SystemError(2),. ExceptionGroup(. "group2",. [. OSError(3),. RecursionError(4). ]. ). ]. ). >>> try:. f(). except* OSError as e:. print("There were OSErrors"). except* SystemError as e:. print("There were SystemErrors"). There were OSErrors There were SystemErrors + Exception Group Traceback (most recent call last): | File "<stdin>", line 2, in <module> | f() | ~^^ | File "<stdin>", line 2, in f | raise ExceptionGroup( |. <12 lines>. | ) | ExceptionGroup: group1 (1 sub-exception) +-+---------------- 1 ---------------- | ExceptionGroup: group2 (1 sub-exception) +-+---------------- 1 ---------------- | RecursionError: 4 +------------------------------------ >>> >>> excs = []. for test in tests:. try:. test. run(). except Exception as e:. excs. append(e). >>> if excs:. raise ExceptionGroup("Test Failures", excs). add_note(note) >>> try:. raise TypeError('bad type'). except Exception as e:. e. add_note('Add some information'). e. add_note('Add some more information'). raise. Traceback (most recent call last): File "<stdin>", line 2, in <module> raise TypeError('bad type') TypeError: bad type Add some information Add some more information >>> >>> def f():. raise OSError('operation failed'). >>> excs = [] >>> for i in range(3):. try:. f(). except Exception as e:. e. add_note(f'Happened in Iteration {i+1}'). excs. append(e).