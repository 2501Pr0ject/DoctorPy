If no errors occur, the result will be: abs(a-b) <= max(rel_tol * max(abs(a), abs(b)), abs_tol). abs(a-b) <= max(rel_tol * max(abs(a), abs(b)), abs_tol) rel_tol is the relative tolerance – it is the maximum allowed difference between a and b, relative to the larger absolute value of a or b. For example, to set a tolerance of 5%, pass rel_tol=0. 05. The default tolerance is 1e-09, which assures that the two values are the same within about 9 decimal digits. rel_tol must be nonnegative and less than 1. 0. rel_tol=0. 05 1e-09 1. 0 abs_tol is the absolute tolerance; it defaults to 0. 0 and it must be nonnegative. When comparing x to 0. 0, isclose(x, 0) is computed as abs(x) <= rel_tol * abs(x), which is False for any nonzero x and rel_tol less than 1. 0. So add an appropriate positive abs_tol argument to the call. 0. 0 x 0. 0 isclose(x, 0) abs(x) <= rel_tol * abs(x) False x 1. 0 The IEEE 754 special values of NaN, inf, and -inf will be handled according to IEEE rules. Specifically, NaN is not considered close to any other value, including NaN. inf and -inf are only considered close to themselves. NaN inf -inf NaN NaN inf -inf Added in version 3. 5. See also PEP 485 – A function for testing approximate equality Return True if x is neither an infinity nor a NaN, and False otherwise. (Note that 0. 0 is considered finite. ) True False 0. 0 Added in version 3. 2. Return True if x is a positive or negative infinity, and False otherwise. True False Return True if x is a NaN (not a number), and False otherwise. True False Return x * (2i). This is essentially the inverse of function frexp(). x * (2**i) frexp() Return the floating-point value steps steps after x towards y. If x is equal to y, return y, unless steps is zero. Examples: math. nextafter(x, math.