{
  "chunk_id": "python_official_python_official_reference_3a8659e1930e9366_fa73c6abaefd_chunk_028",
  "original_doc_id": "python_official_python_official_reference_3a8659e1930e9366_fa73c6abaefd",
  "content": ", in the condition of an if statement), Python will call bool() on the value to determine if the result is true or false. NotImplemented False True if bool() By default, object implements eq() by using is, returning NotImplemented in the case of a false comparison: True if x is y else NotImplemented. For ne(), by default it delegates to eq() and inverts the result unless it is NotImplemented. There are no other implied relationships among the comparison operators or default implementations; for example, the truth of (x<y or x==y) does not imply x<=y. To automatically generate ordering operations from a single root operation, see functools. total_ordering(). object __eq__() is NotImplemented True if x is y else NotImplemented __ne__() __eq__() NotImplemented (x<y or x==y) x<=y functools. total_ordering() By default, the object class provides implementations consistent with Value comparisons: equality compares according to object identity, and order comparisons raise TypeError. Each default method may generate these results directly, but may also return NotImplemented. object TypeError NotImplemented See the paragraph on hash() for some important notes on creating hashable objects which support custom comparison operations and are usable as dictionary keys. __hash__() There are no swapped-argument versions of these methods (to be used when the left argument does not support the operation but the right argument does); rather, lt() and gt() are each other’s reflection, le() and ge() are each other’s reflection, and eq() and ne() are their own reflection. If the operands are of different types, and the right operand’s type is a direct or indirect subclass of the left operand’s type, the reflected method of the right operand has priority, otherwise the left operand’s method has priority. Virtual subclassing is not considered. __lt__() __gt__() __le__() __ge__() __eq__() __ne__() When no appropriate method returns any value other than NotImplemented, the == and. = operators will fall back to is and is not, respectively. NotImplemented ==. = is is not Called by built-in function hash() and for operations on members of hashed collections including set, frozenset, and dict. The hash() method should return an integer. The only required property is that objects which compare equal have the same hash value; it is advised to mix together the hash values of the components of the object that also play a part in comparison of objects by packing them into a tuple and hashing the tuple.",
  "title": "3. Data model.13.5",
  "section": "python_official",
  "subsection": "reference",
  "chunk_index": 28,
  "start_char": 64187,
  "end_char": 66699,
  "token_count": 501,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_reference_3a8659e1930e9366.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:56:42.719607"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_reference_3a8659e1930e9366_fa73c6abaefd_chunk_028.txt"
}