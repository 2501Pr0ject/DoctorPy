{
  "chunk_id": "python_official_python_official_library_49df04c24c9ba477_291038fae061_chunk_014",
  "original_doc_id": "python_official_python_official_library_49df04c24c9ba477_291038fae061",
  "content": "7958 #  from statistics import fmean as mean from random import choices data = [41, 50, 29, 37, 81, 30, 73, 63, 20, 35, 68, 22, 60, 31, 95] means = sorted(mean(choices(data, k=len(data))) for i in range(100)) print(f'The sample mean of {mean(data):. 1f} has a 90% confidence ' f'interval from {means[5]:. 1f} to {means[94]:. 1f}') # Example from \"Statistics is Easy\" by Dennis Shasha and Manda Wilson from statistics import fmean as mean from random import shuffle drug = [54, 73, 53, 70, 73, 68, 52, 65, 65] placebo = [54, 51, 58, 44, 55, 52, 42, 47, 58, 46] observed_diff = mean(drug) - mean(placebo) n = 10_000 count = 0 combined = drug + placebo for i in range(n): shuffle(combined) new_diff = mean(combined[:len(drug)]) - mean(combined[len(drug):]) count += (new_diff >= observed_diff) print(f'{n} label reshufflings produced only {count} instances with a difference') print(f'at least as extreme as the observed difference of {observed_diff:. 1f}. ') print(f'The one-sided p-value of {count / n:. 4f} leads us to reject the null') print(f'hypothesis that there is no difference between the drug and the placebo. ') from heapq import heapify, heapreplace from random import expovariate, gauss from statistics import mean, quantiles average_arrival_interval = 5. 6 average_service_time = 15. 0 stdev_service_time = 3. 5 num_servers = 3 waits = [] arrival_time = 0. 0 servers = [0. 0] * num_servers # time when each server becomes available heapify(servers) for i in range(1_000_000): arrival_time += expovariate(1. 0 / average_arrival_interval) next_server_available = servers[0] wait = max(0.",
  "title": "random â€” Generate pseudo-random numbers.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 14,
  "start_char": 27968,
  "end_char": 29565,
  "token_count": 499,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_49df04c24c9ba477.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:27.620732"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_49df04c24c9ba477_291038fae061_chunk_014.txt"
}