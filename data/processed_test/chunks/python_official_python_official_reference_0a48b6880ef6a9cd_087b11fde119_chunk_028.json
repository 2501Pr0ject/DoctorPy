{
  "chunk_id": "python_official_python_official_reference_0a48b6880ef6a9cd_087b11fde119_chunk_028",
  "original_doc_id": "python_official_python_official_reference_0a48b6880ef6a9cd_087b11fde119",
  "content": "The following (non-exhaustive) examples illustrate that: x > y and y > z implies x > z x > y and y > z x > z x < y and y <= z implies x < z x < y and y <= z x < z Inverse comparison should result in the boolean negation. In other words, the following expressions should have the same result: x == y and not x. = y x < y and not x >= y (for total ordering) x > y and not x <= y (for total ordering) The last two expressions apply to totally ordered collections (e. g. to sequences, but not to sets or mappings). See also the total_ordering() decorator. Inverse comparison should result in the boolean negation. In other words, the following expressions should have the same result: x == y and not x. = y x == y not x. = y x < y and not x >= y (for total ordering) x < y not x >= y x > y and not x <= y (for total ordering) x > y not x <= y The last two expressions apply to totally ordered collections (e. g. to sequences, but not to sets or mappings). See also the total_ordering() decorator. total_ordering() The hash() result should be consistent with equality. Objects that are equal should either have the same hash value, or be marked as unhashable. The hash() result should be consistent with equality. Objects that are equal should either have the same hash value, or be marked as unhashable. hash() Python does not enforce these consistency rules. In fact, the not-a-number values are an example for not following these rules. ### 6. 10. 2. Membership test operationsÂ¶ The operators in and not in test for membership. x in s evaluates to True if x is a member of s, and False otherwise. x not in s returns the negation of x in s. All built-in sequences and set types support this as well as dictionary, for which in tests whether the dictionary has a given key. For container types such as list, tuple, set, frozenset, dict, or collections. deque, the expression x in y is equivalent to any(x is e or x == e for e in y).",
  "title": "6. Expressions.13.5",
  "section": "python_official",
  "subsection": "reference",
  "chunk_index": 28,
  "start_char": 64027,
  "end_char": 65955,
  "token_count": 475,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_reference_0a48b6880ef6a9cd.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:08.594691"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_reference_0a48b6880ef6a9cd_087b11fde119_chunk_028.txt"
}