py 4 2 -q 16 $ python prog. py 4 2 -v 4 to the power 2 equals 16 $ python prog. py 4 2 -vq usage: prog. py [-h] [-v | -q] x y prog. py: error: argument -q/--quiet: not allowed with argument -v/--verbose $ python prog. py 4 2 -v --quiet usage: prog. py [-h] [-v | -q] x y prog. py: error: argument -q/--quiet: not allowed with argument -v/--verbose import argparse parser = argparse. ArgumentParser(description="calculate X to the power of Y") group = parser. add_mutually_exclusive_group() group. add_argument("-v", "--verbose", action="store_true") group. add_argument("-q", "--quiet", action="store_true") parser. add_argument("x", type=int, help="the base") parser. add_argument("y", type=int, help="the exponent") args = parser. parse_args() answer = args. x**args. y if args. quiet: print(answer) elif args. verbose: print(f"{args. x} to the power {args. y} equals {answer}") else: print(f"{args. x}^{args. y} == {answer}") [-v | -q] -v -q $ python prog. py --help usage: prog. py [-h] [-v | -q] x y calculate X to the power of Y positional arguments: x the base y the exponent options: -h, --help show this help message and exit -v, --verbose -q, --quiet argparse gettext argparse argparse $ python prog. py --help usage: prog. py [-h] [-v | -q] x y calculate X to the power of Y positional arguments: x the base y the exponent options: -h, --help show this help message and exit -v, --verbose -q, --quiet usage: positional arguments: options: show this help message and exit. po $ pybabel extract -o messages. po /usr/lib/python3. 12/argparse. py argparse messages. po /usr/lib argparse import argparse print(argparse. __file__). po gettext argparse argparse gettext argparse argparse. Namespace import argparse parser = argparse. ArgumentParser(prefix_chars='-+') parser.