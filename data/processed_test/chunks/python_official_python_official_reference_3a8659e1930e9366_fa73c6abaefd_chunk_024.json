{
  "chunk_id": "python_official_python_official_reference_3a8659e1930e9366_fa73c6abaefd_chunk_024",
  "original_doc_id": "python_official_python_official_reference_3a8659e1930e9366_fa73c6abaefd",
  "content": "[2] None __iter__() None iter() TypeError __getitem__() When implementing a class that emulates any built-in type, it is important that the emulation only be implemented to the degree that it makes sense for the object being modelled. For example, some sequences may work well with retrieval of individual elements, but extracting a slice may not make sense. (One example of this is the NodeList interface in the W3C’s Document Object Model. ) NodeList ### 3. 3. 1. Basic customization¶ Called to create a new instance of class cls. new() is a static method (special-cased so you need not declare it as such) that takes the class of which an instance was requested as its first argument. The remaining arguments are those passed to the object constructor expression (the call to the class). The return value of new() should be the new object instance (usually an instance of cls). __new__() __new__() Typical implementations create a new instance of the class by invoking the superclass’s new() method using super(). new(cls[,. ]) with appropriate arguments and then modifying the newly created instance as necessary before returning it. __new__() super(). __new__(cls[,. ]) If new() is invoked during object construction and it returns an instance of cls, then the new instance’s init() method will be invoked like init(self[,. ]), where self is the new instance and the remaining arguments are the same as were passed to the object constructor. __new__() __init__() __init__(self[,. ]) If new() does not return an instance of cls, then the new instance’s init() method will not be invoked. __new__() __init__() new() is intended mainly to allow subclasses of immutable types (like int, str, or tuple) to customize instance creation. It is also commonly overridden in custom metaclasses in order to customize class creation. __new__() Called after the instance has been created (by new()), but before it is returned to the caller. The arguments are those passed to the class constructor expression. If a base class has an init() method, the derived class’s init() method, if any, must explicitly call it to ensure proper initialization of the base class part of the instance; for example: super(). init([args. ]). __new__() __init__() __init__() super(). __init__([args.",
  "title": "3. Data model.13.5",
  "section": "python_official",
  "subsection": "reference",
  "chunk_index": 24,
  "start_char": 54890,
  "end_char": 57161,
  "token_count": 485,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_reference_3a8659e1930e9366.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:56:42.715594"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_reference_3a8659e1930e9366_fa73c6abaefd_chunk_024.txt"
}