index method, that method is called to obtain an integer for the base. Previous versions used base. int instead of base. index. int base. __index__ base. __int__ base. __index__ Changed in version 3. 6: Grouping digits with underscores as in code literals is allowed. Changed in version 3. 7: The first parameter is now positional-only. Changed in version 3. 8: Falls back to index() if int() is not defined. __index__() __int__() Changed in version 3. 11: The delegation to trunc() is deprecated. __trunc__() Changed in version 3. 11: int string inputs and string representations can be limited to help avoid denial of service attacks. A ValueError is raised when the limit is exceeded while converting a string to an int or when converting an int into a string would exceed the limit. See the integer string conversion length limitation documentation. int ValueError int int Return True if the object argument is an instance of the classinfo argument, or of a (direct, indirect, or virtual) subclass thereof. If object is not an object of the given type, the function always returns False. If classinfo is a tuple of type objects (or recursively, other such tuples) or a Union Type of multiple types, return True if object is an instance of any of the types. If classinfo is not a type or tuple of types and such tuples, a TypeError exception is raised. TypeError may not be raised for an invalid type if an earlier check succeeds. True False True TypeError TypeError Changed in version 3. 10: classinfo can be a Union Type. Return True if class is a subclass (direct, indirect, or virtual) of classinfo. A class is considered a subclass of itself. classinfo may be a tuple of class objects (or recursively, other such tuples) or a Union Type, in which case return True if class is a subclass of any entry in classinfo. In any other case, a TypeError exception is raised. True True TypeError Changed in version 3. 10: classinfo can be a Union Type. Return an iterator object. The first argument is interpreted very differently depending on the presence of the second argument.