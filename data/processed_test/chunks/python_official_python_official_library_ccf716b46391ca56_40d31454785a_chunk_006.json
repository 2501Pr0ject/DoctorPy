{
  "chunk_id": "python_official_python_official_library_ccf716b46391ca56_40d31454785a_chunk_006",
  "original_doc_id": "python_official_python_official_library_ccf716b46391ca56_40d31454785a",
  "content": "Backslash either escapes characters which have special meaning in a set such as '-', ']', '^' and '\\' itself or signals a special sequence which represents a single character such as \\xa0 or \\n or a character class such as \\w or \\S (defined below). Note that \\b represents a single “backspace” character, not a word boundary as outside a set, and numeric escapes such as \\1 are always octal escapes, not group references. Special sequences which do not match a single character such as \\A and \\Z are not allowed. '-' ']' '^' '\\\\' \\xa0 \\n \\w \\S \\b \\1 \\A \\Z Characters that are not within a range can be matched by complementing the set. If the first character of the set is '^', all the characters that are not in the set will be matched. For example, [^5] will match any character except '5', and [^^] will match any character except '^'. ^ has no special meaning if it’s not the first character in the set. Characters that are not within a range can be matched by complementing the set. If the first character of the set is '^', all the characters that are not in the set will be matched. For example, [^5] will match any character except '5', and [^^] will match any character except '^'. ^ has no special meaning if it’s not the first character in the set. '^' [^5] '5' [^^] '^' ^ To match a literal ']' inside a set, precede it with a backslash, or place it at the beginning of the set. For example, both [()[]{}] and [{}] will match a right bracket, as well as left bracket, braces, and parentheses. To match a literal ']' inside a set, precede it with a backslash, or place it at the beginning of the set. For example, both [()[]{}] and [{}] will match a right bracket, as well as left bracket, braces, and parentheses. ']' [()[\\]{}] []()[{}] Support of nested sets and set operations as in Unicode Technical Standard #18 might be added in the future. This would change the syntax, so to facilitate this change a FutureWarning will be raised in ambiguous cases for the time being.",
  "title": "re — Regular expression operations.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 6,
  "start_char": 11585,
  "end_char": 13571,
  "token_count": 482,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_ccf716b46391ca56.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:36.807310"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_ccf716b46391ca56_40d31454785a_chunk_006.txt"
}