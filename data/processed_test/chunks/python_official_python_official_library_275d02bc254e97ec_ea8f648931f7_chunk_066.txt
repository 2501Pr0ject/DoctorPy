fork() Availability: Unix, not WASI, not Android, not iOS. Send signal sig to the process pid. Constants for the specific signals available on the host platform are defined in the signal module. signal Windows: The signal. CTRL_C_EVENT and signal. CTRL_BREAK_EVENT signals are special signals which can only be sent to console processes which share a common console window, e. g. , some subprocesses. Any other value for sig will cause the process to be unconditionally killed by the TerminateProcess API, and the exit code will be set to sig. signal. CTRL_C_EVENT signal. CTRL_BREAK_EVENT See also signal. pthread_kill(). signal. pthread_kill() Raises an auditing event os. kill with arguments pid, sig. os. kill pid sig Availability: Unix, Windows, not WASI, not iOS. Changed in version 3. 2: Added Windows support. Send the signal sig to the process group pgid. Raises an auditing event os. killpg with arguments pgid, sig. os. killpg pgid sig Availability: Unix, not WASI, not iOS. Add increment to the process’s “niceness”. Return the new niceness. Availability: Unix, not WASI. Return a file descriptor referring to the process pid with flags set. This descriptor can be used to perform process management without races and signals. See the pidfd_open(2) man page for more details. Availability: Linux >= 5. 3, Android >= build-time API level 31 build-time Added in version 3. 9. This flag indicates that the file descriptor will be non-blocking. If the process referred to by the file descriptor has not yet terminated, then an attempt to wait on the file descriptor using waitid(2) will immediately return the error EAGAIN rather than blocking. EAGAIN Availability: Linux >= 5. 10 Added in version 3. 12. Lock program segments into memory. The value of op (defined in ) determines which segments are locked. <sys/lock. h> Availability: Unix, not WASI, not iOS. Open a pipe to or from command cmd. The return value is an open file object connected to the pipe, which can be read or written depending on whether mode is 'r' (default) or 'w'. The buffering argument have the same meaning as the corresponding argument to the built-in open() function.