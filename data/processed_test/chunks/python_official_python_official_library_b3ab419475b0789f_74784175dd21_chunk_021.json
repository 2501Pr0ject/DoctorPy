{
  "chunk_id": "python_official_python_official_library_b3ab419475b0789f_74784175dd21_chunk_021",
  "original_doc_id": "python_official_python_official_library_b3ab419475b0789f_74784175dd21",
  "content": "Relative paths are interpreted relative to the current working directory, not the directory of the Path object. Path Changed in version 3. 8: Added return value, return the new Path instance. Path Remove this file or symbolic link. If the path points to a directory, use Path. rmdir() instead. Path. rmdir() If missing_ok is false (the default), FileNotFoundError is raised if the path does not exist. FileNotFoundError If missing_ok is true, FileNotFoundError exceptions will be ignored (same behavior as the POSIX rm -f command). FileNotFoundError rm -f Changed in version 3. 8: The missing_ok parameter was added. Remove this directory. The directory must be empty. ### Permissions and ownership¶ Return the name of the user owning the file. KeyError is raised if the file’s user identifier (UID) isn’t found in the system database. KeyError This method normally follows symlinks; to get the owner of the symlink, add the argument follow_symlinks=False. follow_symlinks=False Changed in version 3. 13: Raises UnsupportedOperation if the pwd module is not available. In earlier versions, NotImplementedError was raised. UnsupportedOperation pwd NotImplementedError Changed in version 3. 13: The follow_symlinks parameter was added. Return the name of the group owning the file. KeyError is raised if the file’s group identifier (GID) isn’t found in the system database. KeyError This method normally follows symlinks; to get the group of the symlink, add the argument follow_symlinks=False. follow_symlinks=False Changed in version 3. 13: Raises UnsupportedOperation if the grp module is not available. In earlier versions, NotImplementedError was raised. UnsupportedOperation grp NotImplementedError Changed in version 3. 13: The follow_symlinks parameter was added. Change the file mode and permissions, like os. chmod(). os. chmod() This method normally follows symlinks. Some Unix flavours support changing permissions on the symlink itself; on these platforms you may add the argument follow_symlinks=False, or use lchmod(). follow_symlinks=False lchmod() >>> p = Path('setup. py') >>> p. stat(). st_mode 33277 >>> p. chmod(0o444) >>> p. stat(). st_mode 33060 Changed in version 3. 10: The follow_symlinks parameter was added. Like Path.",
  "title": "pathlib — Object-oriented filesystem paths.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 21,
  "start_char": 42297,
  "end_char": 44541,
  "token_count": 489,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_b3ab419475b0789f.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:32.502949"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_b3ab419475b0789f_74784175dd21_chunk_021.txt"
}