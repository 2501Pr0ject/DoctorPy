") except Exception as err: print(f"Unexpected {err=}, {type(err)=}") raise try except for arg in sys. argv[1:]: try: f = open(arg, 'r') except OSError: print('cannot open', arg) else: print(arg, 'has', len(f. readlines()), 'lines') f. close() else try try except >>> def this_fails():. x = 1/0. >>> try:. this_fails(). except ZeroDivisionError as err:. print('Handling run-time error:', err). Handling run-time error: division by zero raise >>> raise NameError('HiThere') Traceback (most recent call last): File "<stdin>", line 1, in <module> raise NameError('HiThere') NameError: HiThere raise BaseException Exception raise ValueError # shorthand for 'raise ValueError()' raise >>> try:. raise NameError('HiThere'). except NameError:. print('An exception flew by. '). raise. An exception flew by. Traceback (most recent call last): File "<stdin>", line 2, in <module> raise NameError('HiThere') NameError: HiThere except >>> try:. open("database. sqlite"). except OSError:. raise RuntimeError("unable to handle error"). Traceback (most recent call last): File "<stdin>", line 2, in <module> open("database. sqlite") ~~~~^^^^^^^^^^^^^^^^^^^ FileNotFoundError: [Errno 2] No such file or directory: 'database. sqlite' During handling of the above exception, another exception occurred: Traceback (most recent call last): File "<stdin>", line 4, in <module> raise RuntimeError("unable to handle error") RuntimeError: unable to handle error raise from # exc must be exception instance or None. raise RuntimeError from exc >>> def func():. raise ConnectionError. >>> try:. func(). except ConnectionError as exc:. raise RuntimeError('Failed to open database') from exc. Traceback (most recent call last): File "<stdin>", line 2, in <module> func() ~~~~^^ File "<stdin>", line 2, in func ConnectionError The above exception was the direct cause of the following exception: Traceback (most recent call last): File "<stdin>", line 4, in <module> raise RuntimeError('Failed to open database') from exc RuntimeError: Failed to open database from None >>> try:. open('database. sqlite').