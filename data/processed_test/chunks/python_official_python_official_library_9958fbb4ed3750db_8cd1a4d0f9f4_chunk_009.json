{
  "chunk_id": "python_official_python_official_library_9958fbb4ed3750db_8cd1a4d0f9f4_chunk_009",
  "original_doc_id": "python_official_python_official_library_9958fbb4ed3750db_8cd1a4d0f9f4",
  "content": "name('foo', bar=1) def methodcaller(name, /, *args, **kwargs): def caller(obj): return getattr(obj, name)(*args, **kwargs) return caller operator a + b add(a, b) seq1 + seq2 concat(seq1, seq2) obj in seq contains(seq, obj) a / b truediv(a, b) a // b floordiv(a, b) a & b and_(a, b) a ^ b xor(a, b) ~ a invert(a) a | b or_(a, b) a ** b pow(a, b) a is b is_(a, b) a is not b is_not(a, b) obj[k] = v setitem(obj, k, v) del obj[k] delitem(obj, k) obj[k] getitem(obj, k) a << b lshift(a, b) a % b mod(a, b) a * b mul(a, b) a @ b matmul(a, b) - a neg(a) not a not_(a) + a pos(a) a >> b rshift(a, b) seq[i:j] = values setitem(seq, slice(i, j), values) del seq[i:j] delitem(seq, slice(i, j)) seq[i:j] getitem(seq, slice(i, j)) s % obj mod(s, obj) a - b sub(a, b) obj truth(obj) a < b lt(a, b) a <= b le(a, b) a == b eq(a, b) a. = b ne(a, b) a >= b ge(a, b) a > b gt(a, b) x += y x = operator. iadd(x, y) z = operator.",
  "title": "operator â€” Standard operators as functions.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 9,
  "start_char": 13806,
  "end_char": 14715,
  "token_count": 366,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_9958fbb4ed3750db.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:56:56.463038"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_9958fbb4ed3750db_8cd1a4d0f9f4_chunk_009.txt"
}