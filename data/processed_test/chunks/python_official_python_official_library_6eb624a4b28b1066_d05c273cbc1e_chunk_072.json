{
  "chunk_id": "python_official_python_official_library_6eb624a4b28b1066_d05c273cbc1e_chunk_072",
  "original_doc_id": "python_official_python_official_library_6eb624a4b28b1066_d05c273cbc1e",
  "content": "replace(tzinfo=self) end = end. replace(tzinfo=self) std_time = dt + self. stdoffset dst_time = std_time + HOUR if end <= dst_time < end + HOUR: # Repeated hour return std_time. replace(fold=1) if std_time < start or dst_time >= end: # Standard time return std_time if start <= std_time < end - HOUR: # Daylight saving time return dst_time Eastern = USTimeZone(-5, \"Eastern\", \"EST\", \"EDT\") Central = USTimeZone(-6, \"Central\", \"CST\", \"CDT\") Mountain = USTimeZone(-7, \"Mountain\", \"MST\", \"MDT\") Pacific = USTimeZone(-8, \"Pacific\", \"PST\", \"PDT\") tzinfo UTC 3:MM 4:MM 5:MM 6:MM 7:MM 8:MM EST 22:MM 23:MM 0:MM 1:MM 2:MM 3:MM EDT 23:MM 0:MM 1:MM 2:MM 3:MM 4:MM start 22:MM 23:MM 0:MM 1:MM 3:MM 4:MM end 23:MM 0:MM 1:MM 1:MM 2:MM 3:MM astimezone(Eastern) hour == 2 >>> from datetime import datetime, timezone >>> from tzinfo_examples import HOUR, Eastern >>> u0 = datetime(2016, 3, 13, 5, tzinfo=timezone. utc) >>> for i in range(4):. u = u0 + i*HOUR. t = u. astimezone(Eastern). print(u. time(), 'UTC =', t. time(), t. tzname()). 05:00:00 UTC = 00:00:00 EST 06:00:00 UTC = 01:00:00 EST 07:00:00 UTC = 03:00:00 EDT 08:00:00 UTC = 04:00:00 EDT astimezone() fold >>> u0 = datetime(2016, 11, 6, 4, tzinfo=timezone. utc) >>> for i in range(4):.",
  "title": "datetime â€” Basic date and time types.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 72,
  "start_char": 131314,
  "end_char": 132546,
  "token_count": 496,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_6eb624a4b28b1066.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:01.448876"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_6eb624a4b28b1066_d05c273cbc1e_chunk_072.txt"
}