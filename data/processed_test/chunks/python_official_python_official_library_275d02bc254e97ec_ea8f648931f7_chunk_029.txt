S_IXGRP stat. S_IXGRP stat. S_IRWXO stat. S_IRWXO stat. S_IRWXO stat. S_IROTH stat. S_IROTH stat. S_IROTH stat. S_IWOTH stat. S_IWOTH stat. S_IWOTH stat. S_IXOTH stat. S_IXOTH stat. S_IXOTH This function can support specifying a file descriptor, paths relative to directory descriptors and not following symlinks. Note Although Windows supports chmod(), you can only set the fileâ€™s read-only flag with it (via the stat. S_IWRITE and stat. S_IREAD constants or a corresponding integer value). All other bits are ignored. The default value of follow_symlinks is False on Windows. chmod() stat. S_IWRITE stat. S_IREAD False The function is limited on WASI, see WebAssembly platforms for more information. Raises an auditing event os. chmod with arguments path, mode, dir_fd. os. chmod path mode dir_fd Changed in version 3. 3: Added support for specifying path as an open file descriptor, and the dir_fd and follow_symlinks arguments. Changed in version 3. 6: Accepts a path-like object. Changed in version 3. 13: Added support for a file descriptor and the follow_symlinks argument on Windows. Change the owner and group id of path to the numeric uid and gid. To leave one of the ids unchanged, set it to -1. This function can support specifying a file descriptor, paths relative to directory descriptors and not following symlinks. See shutil. chown() for a higher-level function that accepts names in addition to numeric ids. shutil. chown() Raises an auditing event os. chown with arguments path, uid, gid, dir_fd. os. chown path uid gid dir_fd Availability: Unix. The function is limited on WASI, see WebAssembly platforms for more information. Changed in version 3. 3: Added support for specifying path as an open file descriptor, and the dir_fd and follow_symlinks arguments. Changed in version 3. 6: Supports a path-like object. Change the root directory of the current process to path. Availability: Unix, not WASI, not Android. Changed in version 3. 6: Accepts a path-like object.