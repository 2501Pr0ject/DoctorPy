Return the item of d with key key. Raises a KeyError if key is not in the map. KeyError If a subclass of dict defines a method missing() and key is not present, the d[key] operation calls that method with the key key as argument. The d[key] operation then returns or raises whatever is returned or raised by the missing(key) call. No other operations or methods invoke missing(). If missing() is not defined, KeyError is raised. missing() must be a method; it cannot be an instance variable: __missing__() d[key] d[key] __missing__(key) __missing__() __missing__() KeyError __missing__() >>> class Counter(dict):. def __missing__(self, key):. return 0. >>> c = Counter() >>> c['red'] 0 >>> c['red'] += 1 >>> c['red'] 1 The example above shows part of the implementation of collections. Counter. A different missing method is used by collections. defaultdict. collections. Counter __missing__ collections. defaultdict Set d[key] to value. d[key] Remove d[key] from d. Raises a KeyError if key is not in the map. d[key] KeyError Return True if d has a key key, else False. True False Equivalent to not key in d. not key in d Return an iterator over the keys of the dictionary. This is a shortcut for iter(d. keys()). iter(d. keys()) Remove all items from the dictionary. Return a shallow copy of the dictionary. Create a new dictionary with keys from iterable and values set to value. fromkeys() is a class method that returns a new dictionary. value defaults to None. All of the values refer to just a single instance, so it generally doesn’t make sense for value to be a mutable object such as an empty list. To get distinct values, use a dict comprehension instead. fromkeys() None Return the value for key if key is in the dictionary, else default. If default is not given, it defaults to None, so that this method never raises a KeyError. None KeyError Return a new view of the dictionary’s items ((key, value) pairs). See the documentation of view objects. (key, value) Return a new view of the dictionary’s keys. See the documentation of view objects. If key is in the dictionary, remove it and return its value, else return default.