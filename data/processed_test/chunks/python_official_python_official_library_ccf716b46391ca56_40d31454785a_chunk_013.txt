\B is the opposite of \b, so word characters in Unicode (str) patterns are Unicode alphanumerics or the underscore, although this can be changed by using the ASCII flag. Word boundaries are determined by the current locale if the LOCALE flag is used. r'at\B' 'athens' 'atom' 'attorney' 'at' 'at. ' 'at. ' \B \b ASCII LOCALE Note Note that \B does not match an empty string, which differs from RE implementations in other programming languages such as Perl. This behavior is kept for compatibility reasons. \B \d Matches any Unicode decimal digit (that is, any character in Unicode character category [Nd]). This includes [0-9], and also many other digit characters. [0-9] Matches [0-9] if the ASCII flag is used. [0-9] ASCII Matches any decimal digit in the ASCII character set; this is equivalent to [0-9]. [0-9] \D Matches any character which is not a decimal digit. This is the opposite of \d. \d Matches [^0-9] if the ASCII flag is used. [^0-9] ASCII \s Matches Unicode whitespace characters (as defined by str. isspace()). This includes [ \t\n\r\f\v], and also many other characters, for example the non-breaking spaces mandated by typography rules in many languages. str. isspace() [ \t\n\r\f\v] Matches [ \t\n\r\f\v] if the ASCII flag is used. [ \t\n\r\f\v] ASCII Matches characters considered whitespace in the ASCII character set; this is equivalent to [ \t\n\r\f\v]. [ \t\n\r\f\v] \S Matches any character which is not a whitespace character. This is the opposite of \s. \s Matches [^ \t\n\r\f\v] if the ASCII flag is used. [^ \t\n\r\f\v] ASCII \w Matches Unicode word characters; this includes all Unicode alphanumeric characters (as defined by str. isalnum()), as well as the underscore (). str. isalnum() _ Matches [a-zA-Z0-9] if the ASCII flag is used. [a-zA-Z0-9_] ASCII Matches characters considered alphanumeric in the ASCII character set; this is equivalent to [a-zA-Z0-9_].