{
  "chunk_id": "external_external_guides_ac8c5a4a74040ab8_16efee389a40_chunk_021",
  "original_doc_id": "external_external_guides_ac8c5a4a74040ab8_16efee389a40",
  "content": "is a test. ') ['This', '. ', 'is', ' ', 'a', ' ', 'test', '. ', ''] The module-level function re. split() adds the RE to be used as the first argument, but is otherwise the same. re. split() >>> re. split(r'[\\W]+', 'Words, words, words. ') ['Words', 'words', 'words', ''] >>> re. split(r'([\\W]+)', 'Words, words, words. ') ['Words', ', ', 'words', ', ', 'words', '. ', ''] >>> re. split(r'[\\W]+', 'Words, words, words. ', 1) ['Words', 'words, words. '] ### Search and Replace¶ Another common task is to find all the matches for a pattern, and replace them with a different string. The sub() method takes a replacement value, which can be either a string or a function, and the string to be processed. sub() Returns the string obtained by replacing the leftmost non-overlapping occurrences of the RE in string by the replacement replacement. If the pattern isn’t found, string is returned unchanged. The optional argument count is the maximum number of pattern occurrences to be replaced; count must be a non-negative integer. The default value of 0 means to replace all occurrences. Here’s a simple example of using the sub() method. It replaces colour names with the word colour: sub() colour >>> p = re. compile('(blue|white|red)') >>> p. sub('colour', 'blue socks and red shoes') 'colour socks and colour shoes' >>> p. sub('colour', 'blue socks and red shoes', count=1) 'colour socks and red shoes' The subn() method does the same work, but returns a 2-tuple containing the new string value and the number of replacements that were performed: subn() >>> p = re. compile('(blue|white|red)') >>> p. subn('colour', 'blue socks and red shoes') ('colour socks and colour shoes', 2) >>> p. subn('colour', 'no colours at all') ('no colours at all', 0) Empty matches are replaced only when they’re not adjacent to a previous empty match. >>> p = re. compile('x*') >>> p.",
  "title": "Regular Expression HOWTO.13.5",
  "section": "external",
  "subsection": "guides",
  "chunk_index": 21,
  "start_char": 42716,
  "end_char": 44581,
  "token_count": 483,
  "metadata": {
    "original_file": "data/raw/documentation_test/external/external_guides_ac8c5a4a74040ab8.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:41.048101"
  },
  "file_path": "data/processed_test/chunks/external_external_guides_ac8c5a4a74040ab8_16efee389a40_chunk_021.txt"
}