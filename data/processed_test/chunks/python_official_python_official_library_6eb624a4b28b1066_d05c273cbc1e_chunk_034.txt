It can be one of the following: 'auto' 'auto': Same as 'seconds' if microsecond is 0, same as 'microseconds' otherwise. 'auto': Same as 'seconds' if microsecond is 0, same as 'microseconds' otherwise. 'auto' 'seconds' microsecond 'microseconds' 'hours': Include the hour in the two-digit HH format. 'hours': Include the hour in the two-digit HH format. 'hours' hour HH 'minutes': Include hour and minute in HH:MM format. 'minutes': Include hour and minute in HH:MM format. 'minutes' hour minute HH:MM 'seconds': Include hour, minute, and second in HH:MM:SS format. 'seconds': Include hour, minute, and second in HH:MM:SS format. 'seconds' hour minute second HH:MM:SS 'milliseconds': Include full time, but truncate fractional second part to milliseconds. HH:MM:SS. sss format. 'milliseconds': Include full time, but truncate fractional second part to milliseconds. HH:MM:SS. sss format. 'milliseconds' HH:MM:SS. sss 'microseconds': Include full time in HH:MM:SS. ffffff format. 'microseconds': Include full time in HH:MM:SS. ffffff format. 'microseconds' HH:MM:SS. ffffff Note Excluded time components are truncated, not rounded. ValueError will be raised on an invalid timespec argument. ValueError Example: >>> from datetime import time >>> time(hour=12, minute=34, second=56, microsecond=123456). isoformat(timespec='minutes') '12:34' >>> dt = time(hour=12, minute=34, second=56, microsecond=0) >>> dt. isoformat(timespec='microseconds') '12:34:56. 000000' >>> dt. isoformat(timespec='auto') '12:34:56' Changed in version 3. 6: Added the timespec parameter. For a time t, str(t) is equivalent to t. isoformat(). t str(t) t. isoformat() Return a string representing the time, controlled by an explicit format string. See also strftime() and strptime() Behavior and time. isoformat(). time. isoformat() Same as time. strftime().