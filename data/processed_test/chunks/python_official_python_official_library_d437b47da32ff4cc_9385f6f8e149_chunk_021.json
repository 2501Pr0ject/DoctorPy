{
  "chunk_id": "python_official_python_official_library_d437b47da32ff4cc_9385f6f8e149_chunk_021",
  "original_doc_id": "python_official_python_official_library_d437b47da32ff4cc_9385f6f8e149",
  "content": "Known values are: System platform value platform AIX 'aix' 'aix' Android 'android' 'android' Emscripten 'emscripten' 'emscripten' iOS 'ios' 'ios' Linux 'linux' 'linux' macOS 'darwin' 'darwin' Windows 'win32' 'win32' Windows/Cygwin 'cygwin' 'cygwin' WASI 'wasi' 'wasi' On Unix systems not listed in the table, the value is the lowercased OS name as returned by uname -s, with the first part of the version as returned by uname -r appended, e. g. 'sunos5' or 'freebsd8', at the time when Python was built. Unless you want to test for a specific system version, it is therefore recommended to use the following idiom: uname -s uname -r 'sunos5' 'freebsd8' if sys. platform. startswith('freebsd'): # FreeBSD-specific code here. Changed in version 3. 3: On Linux, sys. platform doesn’t contain the major version anymore. It is always 'linux', instead of 'linux2' or 'linux3'. sys. platform 'linux' 'linux2' 'linux3' Changed in version 3. 8: On AIX, sys. platform doesn’t contain the major version anymore. It is always 'aix', instead of 'aix5' or 'aix7'. sys. platform 'aix' 'aix5' 'aix7' Changed in version 3. 13: On Android, sys. platform now returns 'android' rather than 'linux'. sys. platform 'android' 'linux' See also os. name has a coarser granularity. os. uname() gives system-dependent version information. os. name os. uname() The platform module provides detailed checks for the system’s identity. platform Name of the platform-specific library directory. It is used to build the path of standard library and the paths of installed extension modules. It is equal to \"lib\" on most platforms. On Fedora and SuSE, it is equal to \"lib64\" on 64-bit platforms which gives the following sys. path paths (where X. Y is the Python major. minor version): \"lib\" \"lib64\" sys. path X. Y major. minor /usr/lib64/pythonX.",
  "title": "sys — System-specific parameters and functions.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 21,
  "start_char": 46727,
  "end_char": 48540,
  "token_count": 500,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_d437b47da32ff4cc.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:04.437536"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_d437b47da32ff4cc_9385f6f8e149_chunk_021.txt"
}