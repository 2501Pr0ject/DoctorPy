16g') # conversion changes value '9876543211234568' repr() 'short' x repr(x) float(repr(x)) == x float_repr_style 'legacy' repr(x) _clear_internal_caches() gc. collect() getallocatedblocks() platform. android_ver() 'utf-8' str. encode() dlopen() os RTLD_xxx os. RTLD_LAZY getfilesystemencodeerrors() os. fsencode() os. fsdecode() PyConfig_Read() filesystem_encoding filesystem_errors PyConfig getfilesystemencoding() None 'mbcs' _enablelegacywindowsfsencoding() 'utf-8' getfilesystemencoding() os. fsencode() os. fsdecode() PyConfig_Read() filesystem_encoding filesystem_errors PyConfig set_int_max_str_digits() getrefcount() setrecursionlimit() TypeError getsizeof() __sizeof__ getsizeof() setswitchinterval() ValueError sys. _getframe frame None sys. _getframemodulename depth --with-trace-refs PyInterpreterConfig. use_main_obmalloc Py_NewInterpreter() setprofile() settrace() gettrace() sys. getwindowsversion()[0] sys. getwindowsversion(). major 2 1 2 3 GetVersionEx() OSVERSIONINFOEX() platform namedtuple (firstiter, finalizer) None set_coroutine_origin_tracking_depth() if sys. hexversion >= 0x010502F0: # use some advanced feature. else: # use an alternative implementation or warn the user. hexversion hex() sys. version_info hexversion 'cpython' sys. version_info sys. version_info sys. implementation. version sys. version_info(1, 8, 0, 'final', 0) sys. version_info sys. version_info(2, 7, 2, 'final', 0) sys. hexversion 'cpython-33' cache_tag None sys. implementation sys. implementation 2**int_info. bits_per_digit sys. get_int_max_str_digits() sys. set_int_max_str_digits() PYTHONINTMAXSTRDIGITS -X int_max_str_digits default_max_str_digits str_digits_check_threshold PYTHONSTARTUP site cpython. run_interactivehook intern() True False True False PythonFinalizationError import pdb; pdb. pm() pdb True False sys. last_exc sys.