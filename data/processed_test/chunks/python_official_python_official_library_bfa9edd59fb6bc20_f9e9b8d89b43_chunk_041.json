{
  "chunk_id": "python_official_python_official_library_bfa9edd59fb6bc20_f9e9b8d89b43_chunk_041",
  "original_doc_id": "python_official_python_official_library_bfa9edd59fb6bc20_f9e9b8d89b43",
  "content": "If specified as '' (an asterisk), the actual precision is read from the next element of the tuple in values, and the value to convert comes after the precision. Precision (optional), given as a '. ' (dot) followed by the precision. If specified as '' (an asterisk), the actual precision is read from the next element of the tuple in values, and the value to convert comes after the precision. '. ' '*' Length modifier (optional). Length modifier (optional). Conversion type. Conversion type. When the right argument is a dictionary (or other mapping type), then the formats in the string must include a parenthesised mapping key into that dictionary inserted immediately after the '%' character. The mapping key selects the value to be formatted from the mapping. For example: '%' >>> print('%(language)s has %(number)03d quote types. ' %. {'language': \"Python\", \"number\": 2}) Python has 002 quote types. In this case no * specifiers may occur in a format (since they require a sequential parameter list). * The conversion flag characters are: Flag Meaning '#' '#' The value conversion will use the “alternate form” (where defined below). '0' '0' The conversion will be zero padded for numeric values. '-' '-' The converted value is left adjusted (overrides the '0' conversion if both are given). '0' ' ' ' ' (a space) A blank should be left before a positive number (or empty string) produced by a signed conversion. '+' '+' A sign character ('+' or '-') will precede the conversion (overrides a “space” flag). '+' '-' A length modifier (h, l, or L) may be present, but is ignored as it is not necessary for Python – so e. g. %ld is identical to %d. h l L %ld %d The conversion types are: Conversion Meaning Notes 'd' 'd' Signed integer decimal. 'i' 'i' Signed integer decimal. 'o' 'o' Signed octal value. (1) 'u' 'u' Obsolete type – it is identical to 'd'. 'd' (6) 'x' 'x' Signed hexadecimal (lowercase). (2) 'X' 'X' Signed hexadecimal (uppercase). (2) 'e' 'e' Floating-point exponential format (lowercase).",
  "title": "Built-in Types.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 41,
  "start_char": 82864,
  "end_char": 84873,
  "token_count": 486,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_bfa9edd59fb6bc20.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:56:56.216627"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_bfa9edd59fb6bc20_f9e9b8d89b43_chunk_041.txt"
}