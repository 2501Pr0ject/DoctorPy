{
  "chunk_id": "python_official_python_official_library_6eb624a4b28b1066_d05c273cbc1e_chunk_017",
  "original_doc_id": "python_official_python_official_library_6eb624a4b28b1066_d05c273cbc1e",
  "content": "fromisoformat('2011-11-04T00:05:23') datetime. datetime(2011, 11, 4, 0, 5, 23) >>> datetime. fromisoformat('2011-11-04T00:05:23Z') datetime. datetime(2011, 11, 4, 0, 5, 23, tzinfo=datetime. timezone. utc) >>> datetime. fromisoformat('20111104T000523') datetime. datetime(2011, 11, 4, 0, 5, 23) >>> datetime. fromisoformat('2011-W01-2T00:05:23. 283') datetime. datetime(2011, 1, 4, 0, 5, 23, 283000) >>> datetime. fromisoformat('2011-11-04 00:05:23. 283') datetime. datetime(2011, 11, 4, 0, 5, 23, 283000) >>> datetime. fromisoformat('2011-11-04 00:05:23. 283+00:00') datetime. datetime(2011, 11, 4, 0, 5, 23, 283000, tzinfo=datetime. timezone. utc) >>> datetime. fromisoformat('2011-11-04T00:05:23+04:00') datetime. datetime(2011, 11, 4, 0, 5, 23, tzinfo=datetime. timezone(datetime. timedelta(seconds=14400))) Added in version 3. 7. Changed in version 3. 11: Previously, this method only supported formats that could be emitted by date. isoformat() or datetime. isoformat(). date. isoformat() datetime. isoformat() Return a datetime corresponding to the ISO calendar date specified by year, week and day. The non-date components of the datetime are populated with their normal default values. This is the inverse of the function datetime. isocalendar(). datetime datetime. isocalendar() Added in version 3. 8. Return a datetime corresponding to date_string, parsed according to format. datetime If format does not contain microseconds or time zone information, this is equivalent to: datetime(*(time.",
  "title": "datetime â€” Basic date and time types.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 17,
  "start_char": 34454,
  "end_char": 35955,
  "token_count": 490,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_6eb624a4b28b1066.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:01.395008"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_6eb624a4b28b1066_d05c273cbc1e_chunk_017.txt"
}