In either case, the arguments to the child process must start with the name of the command being run. spawn* spawnl*() The variants which include a second “p” near the end (spawnlp(), spawnlpe(), spawnvp(), and spawnvpe()) will use the PATH environment variable to locate the program file. When the environment is being replaced (using one of the spawne variants, discussed in the next paragraph), the new environment is used as the source of the PATH variable. The other variants, spawnl(), spawnle(), spawnv(), and spawnve(), will not use the PATH variable to locate the executable; path must contain an appropriate absolute or relative path. spawnlp() spawnlpe() spawnvp() spawnvpe() PATH spawn*e PATH spawnl() spawnle() spawnv() spawnve() PATH For spawnle(), spawnlpe(), spawnve(), and spawnvpe() (note that these all end in “e”), the env parameter must be a mapping which is used to define the environment variables for the new process (they are used instead of the current process’ environment); the functions spawnl(), spawnlp(), spawnv(), and spawnvp() all cause the new process to inherit the environment of the current process. Note that keys and values in the env dictionary must be strings; invalid keys or values will cause the function to fail, with a return value of 127. spawnle() spawnlpe() spawnve() spawnvpe() spawnl() spawnlp() spawnv() spawnvp() 127 As an example, the following calls to spawnlp() and spawnvpe() are equivalent: spawnlp() spawnvpe() import os os. spawnlp(os. P_WAIT, 'cp', 'cp', 'index. html', '/dev/null') L = ['cp', 'index. html', '/dev/null'] os. spawnvpe(os. P_WAIT, 'cp', L, os. environ) Raises an auditing event os. spawn with arguments mode, path, args, env. os. spawn mode path args env Availability: Unix, Windows, not WASI, not Android, not iOS. spawnlp(), spawnlpe(), spawnvp() and spawnvpe() are not available on Windows. spawnle() and spawnve() are not thread-safe on Windows; we advise you to use the subprocess module instead.