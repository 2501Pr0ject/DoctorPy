{
  "chunk_id": "python_official_python_official_library_5d5c28b4535c3ee9_06d74d2595f9_chunk_007",
  "original_doc_id": "python_official_python_official_library_5d5c28b4535c3ee9_06d74d2595f9",
  "content": "11: The default parse_int of int() now limits the maximum length of the integer string via the interpreter’s integer string conversion length limitation to help avoid denial of service attacks. int() Identical to load(), but instead of a file-like object, deserialize s (a str, bytes or bytearray instance containing a JSON document) to a Python object using this conversion table. load() str bytes bytearray Changed in version 3. 6: s can now be of type bytes or bytearray. The input encoding should be UTF-8, UTF-16 or UTF-32. bytes bytearray Changed in version 3. 9: The keyword argument encoding has been removed. ## Encoders and Decoders¶ Simple JSON decoder. Performs the following translations in decoding by default: JSON Python object dict array list string str number (int) int number (real) float true True false False null None It also understands NaN, Infinity, and -Infinity as their corresponding float values, which is outside the JSON spec. NaN Infinity -Infinity float object_hook is an optional function that will be called with the result of every JSON object decoded and its return value will be used in place of the given dict. This can be used to provide custom deserializations (e. g. to support JSON-RPC class hinting). dict object_pairs_hook is an optional function that will be called with the result of every JSON object decoded with an ordered list of pairs. The return value of object_pairs_hook will be used instead of the dict. This feature can be used to implement custom decoders. If object_hook is also defined, the object_pairs_hook takes priority. dict Changed in version 3. 1: Added support for object_pairs_hook. parse_float is an optional function that will be called with the string of every JSON float to be decoded. By default, this is equivalent to float(num_str). This can be used to use another datatype or parser for JSON floats (e. g. decimal. Decimal). float(num_str) decimal. Decimal parse_int is an optional function that will be called with the string of every JSON int to be decoded. By default, this is equivalent to int(num_str). This can be used to use another datatype or parser for JSON integers (e. g. float). int(num_str) float parse_constant is an optional function that will be called with one of the following strings: '-Infinity', 'Infinity', 'NaN'.",
  "title": "json — JSON encoder and decoder.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 7,
  "start_char": 14068,
  "end_char": 16381,
  "token_count": 490,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_5d5c28b4535c3ee9.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:37.144989"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_5d5c28b4535c3ee9_06d74d2595f9_chunk_007.txt"
}