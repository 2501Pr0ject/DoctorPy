")" | with_stmt_contents ) ":" suite with_stmt_contents ::= with_item ("," with_item)* with_item ::= expression ["as" target] with_stmt_contents with_stmt_contents suite with_item with_item expression target The execution of the with statement with one “item” proceeds as follows: with The context expression (the expression given in the with_item) is evaluated to obtain a context manager. The context expression (the expression given in the with_item) is evaluated to obtain a context manager. with_item The context manager’s enter() is loaded for later use. The context manager’s enter() is loaded for later use. __enter__() The context manager’s exit() is loaded for later use. The context manager’s exit() is loaded for later use. __exit__() The context manager’s enter() method is invoked. The context manager’s enter() method is invoked. __enter__() If a target was included in the with statement, the return value from enter() is assigned to it. Note The with statement guarantees that if the enter() method returns without an error, then exit() will always be called. Thus, if an error occurs during the assignment to the target list, it will be treated the same as an error occurring within the suite would be. See step 7 below. If a target was included in the with statement, the return value from enter() is assigned to it. with __enter__() Note The with statement guarantees that if the enter() method returns without an error, then exit() will always be called. Thus, if an error occurs during the assignment to the target list, it will be treated the same as an error occurring within the suite would be. See step 7 below. with __enter__() __exit__() The suite is executed. The suite is executed. The context manager’s exit() method is invoked. If an exception caused the suite to be exited, its type, value, and traceback are passed as arguments to exit(). Otherwise, three None arguments are supplied. If the suite was exited due to an exception, and the return value from the exit() method was false, the exception is reraised. If the return value was true, the exception is suppressed, and execution continues with the statement following the with statement. If the suite was exited for any reason other than an exception, the return value from exit() is ignored, and execution proceeds at the normal location for the kind of exit that was taken.