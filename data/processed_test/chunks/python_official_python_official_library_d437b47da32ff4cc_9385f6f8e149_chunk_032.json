{
  "chunk_id": "python_official_python_official_library_d437b47da32ff4cc_9385f6f8e149_chunk_032",
  "original_doc_id": "python_official_python_official_library_d437b47da32ff4cc_9385f6f8e149",
  "content": "0 is (2, 0, 0, 'final', 0). The components can also be accessed by name, so sys. version_info[0] is equivalent to sys. version_info. major and so on. 'alpha' 'beta' 'candidate' 'final' version_info (2, 0, 0, 'final', 0) sys. version_info[0] sys. version_info. major Changed in version 3. 1: Added named component attributes. This is an implementation detail of the warnings framework; do not modify this value. Refer to the warnings module for more information on the warnings framework. warnings The version number used to form registry keys on Windows platforms. This is stored as string resource 1000 in the Python DLL. The value is normally the major and minor versions of the running Python interpreter. It is provided in the sys module for informational purposes; modifying this value has no effect on the registry keys used by Python. sys Availability: Windows. Namespace containing functions and constants for register callbacks and controlling monitoring events. See sys. monitoring for details. sys. monitoring A dictionary of the various implementation-specific flags passed through the -X command-line option. Option names are either mapped to their values, if given explicitly, or to True. Example: -X True $. /python -Xa=b -Xc Python 3. 2a3+ (py3k, Oct 16 2010, 20:14:50) [GCC 4. 4. 3] on linux2 Type \"help\", \"copyright\", \"credits\" or \"license\" for more information. >>> import sys >>> sys. _xoptions {'a': 'b', 'c': True} CPython implementation detail: This is a CPython-specific way of accessing options passed through -X. Other implementations may export them through other means, or not at all. -X Added in version 3. 2. Citations ISO/IEC 9899:1999. “Programming languages – C. ” A public draft of this standard is available at  #### Previous topic Python Runtime Services #### Next topic sys. monitoring — Execution event monitoring sys. monitoring ### This page Report a bug Show source sys configure m sys. audit() PySys_AddAuditHook() PySys_AddAuditHook() ctypes sys. addaudithook() sys.",
  "title": "sys — System-specific parameters and functions.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 32,
  "start_char": 71257,
  "end_char": 73266,
  "token_count": 487,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_d437b47da32ff4cc.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:04.446908"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_d437b47da32ff4cc_9385f6f8e149_chunk_032.txt"
}