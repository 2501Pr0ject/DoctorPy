{
  "chunk_id": "python_official_python_official_library_dc90c4c8afc30307_8cf0110ef317_chunk_012",
  "original_doc_id": "python_official_python_official_library_dc90c4c8afc30307_8cf0110ef317",
  "content": "A floating-point “not a number” (NaN) value. Equivalent to the output of float('nan'). Due to the requirements of the IEEE-754 standard, math. nan and float('nan') are not considered to equal to any other numeric value, including themselves. To check whether a number is a NaN, use the isnan() function to test for NaNs instead of is or ==. Example: float('nan') math. nan float('nan') isnan() is == >>> import math >>> math. nan == math. nan False >>> float('nan') == float('nan') False >>> math. isnan(math. nan) True >>> math. isnan(float('nan')) True Added in version 3. 5. Changed in version 3. 11: It is now always available. CPython implementation detail: The math module consists mostly of thin wrappers around the platform C math library functions. Behavior in exceptional cases follows Annex F of the C99 standard where appropriate. The current implementation will raise ValueError for invalid operations like sqrt(-1. 0) or log(0. 0) (where C99 Annex F recommends signaling invalid operation or divide-by-zero), and OverflowError for results that overflow (for example, exp(1000. 0)). A NaN will not be returned from any of the functions above unless one or more of the input arguments was a NaN; in that case, most functions will return a NaN, but (again following C99 Annex F) there are some exceptions to this rule, for example pow(float('nan'), 0. 0) or hypot(float('nan'), float('inf')). math ValueError sqrt(-1. 0) log(0. 0) OverflowError exp(1000. 0) pow(float('nan'), 0. 0) hypot(float('nan'), float('inf')) Note that Python makes no effort to distinguish signaling NaNs from quiet NaNs, and behavior for signaling NaNs remains unspecified. Typical behavior is to treat all NaNs as though they were quiet. See also cmath Complex number versions of many of these functions.",
  "title": "math — Mathematical functions.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 12,
  "start_char": 22989,
  "end_char": 24780,
  "token_count": 436,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_dc90c4c8afc30307.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:33.598153"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_dc90c4c8afc30307_8cf0110ef317_chunk_012.txt"
}