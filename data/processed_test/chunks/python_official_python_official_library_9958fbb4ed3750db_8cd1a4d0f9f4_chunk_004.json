{
  "chunk_id": "python_official_python_official_library_9958fbb4ed3750db_8cd1a4d0f9f4_chunk_004",
  "original_doc_id": "python_official_python_official_library_9958fbb4ed3750db_8cd1a4d0f9f4",
  "content": "name('foo', bar=1) Equivalent to: def methodcaller(name, /, *args, **kwargs): def caller(obj): return getattr(obj, name)(*args, **kwargs) return caller ## Mapping Operators to Functions¶ This table shows how abstract operations correspond to operator symbols in the Python syntax and the functions in the operator module.",
  "title": "operator — Standard operators as functions.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 4,
  "start_char": 7212,
  "end_char": 7533,
  "token_count": 69,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_9958fbb4ed3750db.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:56:56.457884"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_9958fbb4ed3750db_8cd1a4d0f9f4_chunk_004.txt"
}