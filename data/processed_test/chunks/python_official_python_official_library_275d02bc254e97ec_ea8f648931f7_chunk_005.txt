6: Support added to accept objects implementing the os. PathLike interface. os. PathLike Return the file system representation of the path. If str or bytes is passed in, it is returned unchanged. Otherwise fspath() is called and its value is returned as long as it is a str or bytes object. In all other cases, TypeError is raised. str bytes __fspath__() str bytes TypeError Added in version 3. 6. An abstract base class for objects representing a file system path, e. g. pathlib. PurePath. pathlib. PurePath Added in version 3. 6. Return the file system path representation of the object. The method should only return a str or bytes object, with the preference being for str. str bytes str Return the value of the environment variable key as a string if it exists, or default if it doesn’t. key is a string. Note that since getenv() uses os. environ, the mapping of getenv() is similarly also captured on import, and the function may not reflect future environment changes. getenv() os. environ getenv() On Unix, keys and values are decoded with sys. getfilesystemencoding() and 'surrogateescape' error handler. Use os. getenvb() if you would like to use a different encoding. sys. getfilesystemencoding() 'surrogateescape' os. getenvb() Availability: Unix, Windows. Return the value of the environment variable key as bytes if it exists, or default if it doesn’t. key must be bytes. Note that since getenvb() uses os. environb, the mapping of getenvb() is similarly also captured on import, and the function may not reflect future environment changes. getenvb() os. environb getenvb() getenvb() is only available if supports_bytes_environ is True. getenvb() supports_bytes_environ True Availability: Unix. Added in version 3. 2. Returns the list of directories that will be searched for a named executable, similar to a shell, when launching a process. env, when specified, should be an environment variable dictionary to lookup the PATH in. By default, when env is None, environ is used. None environ Added in version 3. 2. Return the effective group id of the current process. This corresponds to the “set id” bit on the file being executed in the current process. Availability: Unix, not WASI. Return the current process’s effective user id.