{
  "chunk_id": "python_official_python_official_tutorial_848a8fc839cddd7c_011b0462aa58_chunk_028",
  "original_doc_id": "python_official_python_official_tutorial_848a8fc839cddd7c_011b0462aa58",
  "content": "print(pos_only, standard, kwd_only) standard_arg >>> standard_arg(2) 2 >>> standard_arg(arg=2) 2 pos_only_arg / >>> pos_only_arg(1) 1 >>> pos_only_arg(arg=1) Traceback (most recent call last): File \"<stdin>\", line 1, in <module> TypeError: pos_only_arg() got some positional-only arguments passed as keyword arguments: 'arg' kwd_only_arg * >>> kwd_only_arg(3) Traceback (most recent call last): File \"<stdin>\", line 1, in <module> TypeError: kwd_only_arg() takes 0 positional arguments but 1 was given >>> kwd_only_arg(arg=3) 3 >>> combined_example(1, 2, 3) Traceback (most recent call last): File \"<stdin>\", line 1, in <module> TypeError: combined_example() takes 2 positional arguments but 3 were given >>> combined_example(1, 2, kwd_only=3) 1 2 3 >>> combined_example(1, standard=2, kwd_only=3) 1 2 3 >>> combined_example(pos_only=1, standard=2, kwd_only=3) Traceback (most recent call last): File \"<stdin>\", line 1, in <module> TypeError: combined_example() got some positional-only arguments passed as keyword arguments: 'pos_only' name **kwds name def foo(name, **kwds): return 'name' in kwds True 'name' >>> foo(1, **{'name': 2}) Traceback (most recent call last): File \"<stdin>\", line 1, in <module> TypeError: foo() got multiple values for argument 'name' >>> / name 'name' >>> def foo(name, /, **kwds):. return 'name' in kwds. >>> foo(1, **{'name': 2}) True **kwds def f(pos1, pos2, /, pos_or_kwd, *, kwd1, kwd2): def write_multiple_items(file, separator, *args): file. write(separator. join(args)) *args >>> def concat(*args, sep=\"/\"):. return sep. join(args).",
  "title": "4. More Control Flow Tools.13.5",
  "section": "python_official",
  "subsection": "tutorial",
  "chunk_index": 28,
  "start_char": 50041,
  "end_char": 51612,
  "token_count": 468,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_tutorial_848a8fc839cddd7c.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:37.633086"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_tutorial_848a8fc839cddd7c_011b0462aa58_chunk_028.txt"
}