{
  "chunk_id": "external_external_guides_ab3164948a2522c6_60feccf23bf0_chunk_021",
  "original_doc_id": "external_external_guides_ab3164948a2522c6_60feccf23bf0",
  "content": "basicConfig(filename='example. log', encoding='utf-8', level=logging. DEBUG) logger. debug('This message should go to the log file') logger. info('So should this') logger. warning('And this, too') logger. error('And non-ASCII stuff, too, like Øresund and Malmö') open() open() DEBUG:__main__:This message should go to the log file INFO:__main__:So should this WARNING:__main__:And this, too ERROR:__main__:And non-ASCII stuff, too, like Øresund and Malmö DEBUG --log=INFO --log getattr(logging, loglevel. upper()) basicConfig() # assuming loglevel is bound to the string value obtained from the # command line argument. Convert to upper case to allow the user to # specify --log=DEBUG or --log=debug numeric_level = getattr(logging, loglevel. upper(), None) if not isinstance(numeric_level, int): raise ValueError('Invalid log level: %s' % loglevel) logging. basicConfig(level=numeric_level,. ) basicConfig() debug() info() logging. basicConfig(filename='example. log', filemode='w', level=logging. DEBUG) import logging logging. warning('%s before you %s', 'Look', 'leap. ') WARNING:root:Look before you leap. str. format() string. Template import logging logging. basicConfig(format='%(levelname)s:%(message)s', level=logging. DEBUG) logging. debug('This message should appear on the console') logging. info('So should this') logging. warning('And this, too') DEBUG:This message should appear on the console INFO:So should this WARNING:And this, too import logging logging. basicConfig(format='%(asctime)s %(message)s') logging. warning('is when this event was logged. ') 2010-12-12 11:41:42,612 is when this event was logged. basicConfig import logging logging. basicConfig(format='%(asctime)s %(message)s', datefmt='%m/%d/%Y %I:%M:%S %p') logging. warning('is when this event was logged. ') 12/12/2010 11:46:36 AM is when this event was logged. time. strftime() LogRecord Logger logger = logging.",
  "title": "Logging HOWTO.13.5",
  "section": "external",
  "subsection": "guides",
  "chunk_index": 21,
  "start_char": 50089,
  "end_char": 51989,
  "token_count": 485,
  "metadata": {
    "original_file": "data/raw/documentation_test/external/external_guides_ab3164948a2522c6.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:42.538470"
  },
  "file_path": "data/processed_test/chunks/external_external_guides_ab3164948a2522c6_60feccf23bf0_chunk_021.txt"
}