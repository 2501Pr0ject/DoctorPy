{
  "chunk_id": "python_official_python_official_library_482e94da82fc8f58_4a9e7712fa00_chunk_010",
  "original_doc_id": "python_official_python_official_library_482e94da82fc8f58_4a9e7712fa00",
  "content": "InterruptedError Raised when a file operation (such as os. remove()) is requested on a directory. Corresponds to errno EISDIR. os. remove() errno EISDIR Raised when a directory operation (such as os. listdir()) is requested on something which is not a directory. On most POSIX platforms, it may also be raised if an operation attempts to open or traverse a non-directory file as if it were a directory. Corresponds to errno ENOTDIR. os. listdir() errno ENOTDIR Raised when trying to run an operation without the adequate access rights - for example filesystem permissions. Corresponds to errno EACCES, EPERM, and ENOTCAPABLE. errno EACCES EPERM ENOTCAPABLE Changed in version 3. 11. 1: WASI’s ENOTCAPABLE is now mapped to PermissionError. ENOTCAPABLE PermissionError Raised when a given process doesn’t exist. Corresponds to errno ESRCH. errno ESRCH Raised when a system function timed out at the system level. Corresponds to errno ETIMEDOUT. errno ETIMEDOUT Added in version 3. 3: All the above OSError subclasses were added. OSError See also PEP 3151 - Reworking the OS and IO exception hierarchy ## Warnings¶ The following exceptions are used as warning categories; see the Warning Categories documentation for more details. Base class for warning categories. Base class for warnings generated by user code. Base class for warnings about deprecated features when those warnings are intended for other Python developers. Ignored by the default warning filters, except in the main module (PEP 565). Enabling the Python Development Mode shows this warning. __main__ The deprecation policy is described in PEP 387. Base class for warnings about features which are obsolete and expected to be deprecated in the future, but are not deprecated at the moment. This class is rarely used as emitting a warning about a possible upcoming deprecation is unusual, and DeprecationWarning is preferred for already active deprecations. DeprecationWarning Ignored by the default warning filters. Enabling the Python Development Mode shows this warning. The deprecation policy is described in PEP 387. Base class for warnings about dubious syntax. Base class for warnings about dubious runtime behavior. Base class for warnings about deprecated features when those warnings are intended for end users of applications that are written in Python.",
  "title": "Built-in Exceptions.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 10,
  "start_char": 24453,
  "end_char": 26781,
  "token_count": 497,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_482e94da82fc8f58.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:34.394686"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_482e94da82fc8f58_4a9e7712fa00_chunk_010.txt"
}