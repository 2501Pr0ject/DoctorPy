{
  "chunk_id": "python_official_python_official_library_96003c24587351a2_74918d6d2a40_chunk_018",
  "original_doc_id": "python_official_python_official_library_96003c24587351a2_74918d6d2a40",
  "content": "Without a second argument, object must be a collection object which supports the iterable protocol (the iter() method), or it must support the sequence protocol (the getitem() method with integer arguments starting at 0). If it does not support either of those protocols, TypeError is raised. If the second argument, sentinel, is given, then object must be a callable object. The iterator created in this case will call object with no arguments for each call to its next() method; if the value returned is equal to sentinel, StopIteration will be raised, otherwise the value will be returned. __iter__() __getitem__() 0 TypeError __next__() StopIteration See also Iterator Types. One useful application of the second form of iter() is to build a block-reader. For example, reading fixed-width blocks from a binary database file until the end of file is reached: iter() from functools import partial with open('mydata. db', 'rb') as f: for block in iter(partial(f. read, 64), b''): process_block(block) Return the length (the number of items) of an object. The argument may be a sequence (such as a string, bytes, tuple, list, or range) or a collection (such as a dictionary, set, or frozen set). CPython implementation detail: len raises OverflowError on lengths larger than sys. maxsize, such as range(2 ** 100). len OverflowError sys. maxsize range(2 ** 100) Rather than being a function, list is actually a mutable sequence type, as documented in Lists and Sequence Types â€” list, tuple, range. list Return a mapping object representing the current local symbol table, with variable names as the keys, and their currently bound references as the values. At module scope, as well as when using exec() or eval() with a single namespace, this function returns the same namespace as globals(). exec() eval() globals() At class scope, it returns the namespace that will be passed to the metaclass constructor. When using exec() or eval() with separate local and global arguments, it returns the local namespace passed in to the function call. exec() eval() In all of the above cases, each call to locals() in a given frame of execution will return the same mapping object.",
  "title": "Built-in Functions.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 18,
  "start_char": 38450,
  "end_char": 40619,
  "token_count": 467,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_96003c24587351a2.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:31.010199"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_96003c24587351a2_74918d6d2a40_chunk_018.txt"
}