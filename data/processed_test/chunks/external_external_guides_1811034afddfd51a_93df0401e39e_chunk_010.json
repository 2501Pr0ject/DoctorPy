{
  "chunk_id": "external_external_guides_1811034afddfd51a_93df0401e39e_chunk_010",
  "original_doc_id": "external_external_guides_1811034afddfd51a_93df0401e39e",
  "content": "add_argument(\"y\", type=int, help=\"the exponent\") parser. add_argument(\"-v\", \"--verbosity\", action=\"count\", default=0) args = parser. parse_args() answer = args. x**args. y if args. verbosity >= 2: print(f\"{args. x} to the power {args. y} equals {answer}\") elif args. verbosity >= 1: print(f\"{args. x}^{args. y} == {answer}\") else: print(answer) Output: $ python prog. py usage: prog. py [-h] [-v] x y prog. py: error: the following arguments are required: x, y $ python prog. py -h usage: prog. py [-h] [-v] x y positional arguments: x the base y the exponent options: -h, --help show this help message and exit -v, --verbosity $ python prog. py 4 2 -v 4^2 == 16 Notice that so far we’ve been using verbosity level to change the text that gets displayed. The following example instead uses verbosity level to display more text instead: import argparse parser = argparse. ArgumentParser() parser. add_argument(\"x\", type=int, help=\"the base\") parser. add_argument(\"y\", type=int, help=\"the exponent\") parser. add_argument(\"-v\", \"--verbosity\", action=\"count\", default=0) args = parser. parse_args() answer = args. x**args. y if args. verbosity >= 2: print(f\"Running '{__file__}'\") if args. verbosity >= 1: print(f\"{args. x}^{args. y} == \", end=\"\") print(answer) Output: $ python prog. py 4 2 16 $ python prog. py 4 2 -v 4^2 == 16 $ python prog. py 4 2 -vv Running 'prog. py' 4^2 == 16 ### Specifying ambiguous arguments¶ When there is ambiguity in deciding whether an argument is positional or for an argument, -- can be used to tell parse_args() that everything after that is a positional argument: -- parse_args() >>> parser = argparse. ArgumentParser(prog='PROG') >>> parser. add_argument('-n', nargs='+') >>> parser.",
  "title": "Argparse Tutorial.13.5",
  "section": "external",
  "subsection": "guides",
  "chunk_index": 10,
  "start_char": 20930,
  "end_char": 22646,
  "token_count": 478,
  "metadata": {
    "original_file": "data/raw/documentation_test/external/external_guides_1811034afddfd51a.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:39.492232"
  },
  "file_path": "data/processed_test/chunks/external_external_guides_1811034afddfd51a_93df0401e39e_chunk_010.txt"
}