name ('keyboard_smashing', 'spelling') "__main__" module. __spec__. name module spec '' module. __name__ __name__ None types. ModuleType importlib. util. module_from_spec() str module. __spec__. parent module. __package__ __package__ __spec__. parent None types. ModuleType __package__ __spec__. parent __package__ __spec__. parent ImportWarning __package__ __spec__. parent DeprecationWarning ImportWarning __package__ __package__ __loader__ None types. ModuleType importlib. util. module_from_spec() module. __spec__. loader module. __loader__ None types. ModuleType __loader__ __spec__. loader __loader__ __path__ module. __spec__. submodule_search_locations module. __path__ __file__ __cached__ str __file__ __file__ __cached__ __cached__ __file__ __file__ __cached__ module. __spec__. cached module. __cached__ __cached__ __spec__. cached __cached__ None __doc__ attributes __annotations__ __dict__ C. x C. __dict__["x"] C __self__ C staticmethod __dict__ __name__ attributes __qualname__ attributes mapping proxy __dict__ attributes tuple class X(A, B, C) X. __bases__ (A, B, C) None __annotations__ __annotations__ inspect. get_annotations() tuple tuple self. X __module__ __firstlineno__ tuple __mro__ >>> class A: pass >>> class B(A): pass >>> A. __subclasses__() [<class 'B'>] __self__ __dict__ __getattr__() __setattr__() __delattr__() __dict__ open() os. popen() os. fdopen() makefile() sys. stdin sys. stdout sys. stderr io. TextIOBase tuple tuple tuple function. __closure__ tuple tuple integer co_flags 0x04 *arguments 0x08 **keywords 0x20 from __future__ import division co_flags compiler_flag co_flags co_consts None tuple (start_line, end_line, start_column, end_column) -X no_debug_ranges -X no_debug_ranges None -X no_debug_ranges PYTHONNODEBUGRANGES (start, end, lineno) tuple start int end int lineno int None start (start, end) tuple start end end >= start tuple end start == end co_lines() copy. replace() None object.