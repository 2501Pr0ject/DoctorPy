ASCII characters have code points in the range U+0000-U+007F. True False Added in version 3. 7. Return True if all characters in the string are decimal characters and there is at least one character, False otherwise. Decimal characters are those that can be used to form numbers in base 10, e. g. U+0660, ARABIC-INDIC DIGIT ZERO. Formally a decimal character is a character in the Unicode General Category “Nd”. True False Return True if all characters in the string are digits and there is at least one character, False otherwise. Digits include decimal characters and digits that need special handling, such as the compatibility superscript digits. This covers digits which cannot be used to form numbers in base 10, like the Kharosthi numbers. Formally, a digit is a character that has the property value Numeric_Type=Digit or Numeric_Type=Decimal. True False Return True if the string is a valid identifier according to the language definition, section Identifiers and keywords. True keyword. iskeyword() can be used to test whether string s is a reserved identifier, such as def and class. keyword. iskeyword() s def class Example: >>> from keyword import iskeyword >>> 'hello'. isidentifier(), iskeyword('hello') (True, False) >>> 'def'. isidentifier(), iskeyword('def') (True, True) Return True if all cased characters [4] in the string are lowercase and there is at least one cased character, False otherwise. True False Return True if all characters in the string are numeric characters, and there is at least one character, False otherwise. Numeric characters include digit characters, and all characters that have the Unicode numeric value property, e. g. U+2155, VULGAR FRACTION ONE FIFTH. Formally, numeric characters are those with the property value Numeric_Type=Digit, Numeric_Type=Decimal or Numeric_Type=Numeric. True False Return True if all characters in the string are printable, False if it contains at least one non-printable character. True False Here “printable” means the character is suitable for repr() to use in its output; “non-printable” means that repr() on built-in types will hex-escape the character. It has no bearing on the handling of strings written to sys. stdout or sys. stderr. repr() repr() sys. stdout sys.