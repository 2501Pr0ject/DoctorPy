45) 123 >>> int('123') 123 >>> int(' -12_345\n') -12345 >>> int('FACE', 16) 64206 >>> int('0xface', 0) 64206 >>> int('01110011', base=2) 115 __int__() int(x) x. __int__() __index__() x. __index__() __trunc__() x. __trunc__() bytes bytearray + - a z A Z 0b 0B 0o 0O 0x 0X int('010', 0) int('010') int('010', 8) int base. __index__ base. __int__ base. __index__ __index__() __int__() __trunc__() int ValueError int int True False True TypeError TypeError True True TypeError __iter__() __getitem__() 0 TypeError __next__() StopIteration iter() from functools import partial with open('mydata. db', 'rb') as f: for block in iter(partial(f. read, 64), b''): process_block(block) len OverflowError sys. maxsize range(2 ** 100) list exec() eval() globals() exec() eval() locals() locals() locals() locals() locals() locals() itertools. starmap() list. sort() ValueError sorted(iterable, key=keyfunc, reverse=True)[0] heapq. nlargest(1, iterable, key=keyfunc) None list. sort() ValueError sorted(iterable, key=keyfunc)[0] heapq. nsmallest(1, iterable, key=keyfunc) None __next__() StopIteration object __dict__ object int __index__() >>> oct(8) '0o10' >>> oct(-56) '-0o70' >>> '%#o' % 10, '%o' % 10 ('0o12', '12') >>> format(10, '#o'), format(10, 'o') ('0o12', '12') >>> f'{10:#o}', f'{10:o}' ('0o12', '12') format() OSError False 'r' 'w' 'x' 'a' locale.