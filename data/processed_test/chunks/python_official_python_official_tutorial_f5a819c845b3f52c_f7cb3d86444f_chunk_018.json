{
  "chunk_id": "python_official_python_official_tutorial_f5a819c845b3f52c_f7cb3d86444f_chunk_018",
  "original_doc_id": "python_official_python_official_tutorial_f5a819c845b3f52c_f7cb3d86444f",
  "content": "append(trick) >>> d = Dog('Fido') >>> e = Dog('Buddy') >>> d. add_trick('roll over') >>> e. add_trick('play dead') >>> d. tricks ['roll over'] >>> e. tricks ['play dead'] >>> class Warehouse:. purpose = 'storage'. region = 'west'. >>> w1 = Warehouse() >>> print(w1. purpose, w1. region) storage west >>> w2 = Warehouse() >>> w2. region = 'east' >>> print(w2. purpose, w2. region) storage east self self # Function defined outside the class def f1(self, x, y): return min(x, x+y) class C: f = f1 def g(self): return 'hello world' h = g f g h C C h g self class Bag: def __init__(self): self. data = [] def add(self, x): self. data. append(x) def addtwice(self, x): self. add(x) self. add(x) object. __class__ class DerivedClassName(BaseClassName): <statement-1>. <statement-N> BaseClassName class DerivedClassName(modname. BaseClassName): DerivedClassName() virtual BaseClassName. methodname(self, arguments) BaseClassName isinstance() isinstance(obj, int) True obj. __class__ int int issubclass() issubclass(bool, int) True bool int issubclass(float, int) False float int class DerivedClassName(Base1, Base2, Base3): <statement-1>. <statement-N> DerivedClassName Base1 Base1 Base2 super() object object _spam __spam _classname__spam classname class Mapping: def __init__(self, iterable): self. items_list = [] self. __update(iterable) def update(self, iterable): for item in iterable: self. items_list. append(item) __update = update # private copy of original update() method class MappingSubclass(Mapping): def update(self, keys, values): # provides new signature for update() # but does not break __init__() for item in zip(keys, values): self. items_list.",
  "title": "9. Classes.13.5",
  "section": "python_official",
  "subsection": "tutorial",
  "chunk_index": 18,
  "start_char": 38288,
  "end_char": 39947,
  "token_count": 437,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_tutorial_f5a819c845b3f52c.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:33.103766"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_tutorial_f5a819c845b3f52c_f7cb3d86444f_chunk_018.txt"
}