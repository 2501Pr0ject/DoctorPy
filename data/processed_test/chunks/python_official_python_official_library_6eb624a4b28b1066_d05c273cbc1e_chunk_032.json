{
  "chunk_id": "python_official_python_official_library_6eb624a4b28b1066_d05c273cbc1e_chunk_032",
  "original_doc_id": "python_official_python_official_library_6eb624a4b28b1066_d05c273cbc1e",
  "content": "time time TypeError If both comparands are aware, and have the same tzinfo attribute, the tzinfo and fold attributes are ignored and the base times are compared. If both comparands are aware and have different tzinfo attributes, the comparands are first adjusted by subtracting their UTC offsets (obtained from self. utcoffset()). tzinfo tzinfo fold tzinfo self. utcoffset() Changed in version 3. 3: Equality comparisons between aware and naive time instances don’t raise TypeError. time TypeError In Boolean contexts, a time object is always considered to be true. time Changed in version 3. 5: Before Python 3. 5, a time object was considered to be false if it represented midnight in UTC. This behavior was considered obscure and error-prone and has been removed in Python 3. 5. See bpo-13936 for full details. time Other constructor: Return a time corresponding to a time_string in any valid ISO 8601 format, with the following exceptions: time Time zone offsets may have fractional seconds. Time zone offsets may have fractional seconds. The leading T, normally required in cases where there may be ambiguity between a date and a time, is not required. The leading T, normally required in cases where there may be ambiguity between a date and a time, is not required. T Fractional seconds may have any number of digits (anything beyond 6 will be truncated). Fractional seconds may have any number of digits (anything beyond 6 will be truncated). Fractional hours and minutes are not supported. Fractional hours and minutes are not supported. Examples: >>> from datetime import time >>> time. fromisoformat('04:23:01') datetime. time(4, 23, 1) >>> time. fromisoformat('T04:23:01') datetime. time(4, 23, 1) >>> time. fromisoformat('T042301') datetime. time(4, 23, 1) >>> time. fromisoformat('04:23:01. 000384') datetime. time(4, 23, 1, 384) >>> time. fromisoformat('04:23:01,000384') datetime. time(4, 23, 1, 384) >>> time. fromisoformat('04:23:01+04:00') datetime.",
  "title": "datetime — Basic date and time types.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 32,
  "start_char": 61970,
  "end_char": 63938,
  "token_count": 493,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_6eb624a4b28b1066.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:01.408805"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_6eb624a4b28b1066_d05c273cbc1e_chunk_032.txt"
}