fromtimestamp() UTC Return the datetime corresponding to the proleptic Gregorian ordinal, where January 1 of year 1 has ordinal 1. ValueError is raised unless 1 <= ordinal <= datetime. max. toordinal(). The hour, minute, second and microsecond of the result are all 0, and tzinfo is None. datetime ValueError 1 <= ordinal <= datetime. max. toordinal() tzinfo None Return a new datetime object whose date components are equal to the given date object’s, and whose time components are equal to the given time object’s. If the tzinfo argument is provided, its value is used to set the tzinfo attribute of the result, otherwise the tzinfo attribute of the time argument is used. If the date argument is a datetime object, its time components and tzinfo attributes are ignored. datetime date time tzinfo tzinfo datetime tzinfo For any datetime object d, d == datetime. combine(d. date(), d. time(), d. tzinfo). datetime d d == datetime. combine(d. date(), d. time(), d. tzinfo) Changed in version 3. 6: Added the tzinfo argument. Return a datetime corresponding to a date_string in any valid ISO 8601 format, with the following exceptions: datetime Time zone offsets may have fractional seconds. Time zone offsets may have fractional seconds. The T separator may be replaced by any single unicode character. The T separator may be replaced by any single unicode character. T Fractional hours and minutes are not supported. Fractional hours and minutes are not supported. Reduced precision dates are not currently supported (YYYY-MM, YYYY). Reduced precision dates are not currently supported (YYYY-MM, YYYY). YYYY-MM YYYY Extended date representations are not currently supported (±YYYYYY-MM-DD). Extended date representations are not currently supported (±YYYYYY-MM-DD). ±YYYYYY-MM-DD Ordinal dates are not currently supported (YYYY-OOO). Ordinal dates are not currently supported (YYYY-OOO). YYYY-OOO Examples: >>> from datetime import datetime >>> datetime. fromisoformat('2011-11-04') datetime. datetime(2011, 11, 4, 0, 0) >>> datetime. fromisoformat('20111104') datetime. datetime(2011, 11, 4, 0, 0) >>> datetime.