copy() copy. deepcopy() def displaymatch(match): if match is None: return None return '<Match: %r, groups=%r>' % (match. group(), match. groups()) >>> valid = re. compile(r"^[a2-9tjqk]{5}$") >>> displaymatch(valid. match("akt5q")) # Valid. "<Match: 'akt5q', groups=()>" >>> displaymatch(valid. match("akt5e")) # Invalid. >>> displaymatch(valid. match("akt")) # Invalid. >>> displaymatch(valid. match("727ak")) # Valid. "<Match: '727ak', groups=()>" "727ak" >>> pair = re. compile(r". *(. ). *\1") >>> displaymatch(pair. match("717ak")) # Pair of 7s. "<Match: '717', groups=('7',)>" >>> displaymatch(pair. match("718ak")) # No pairs. >>> displaymatch(pair. match("354aa")) # Pair of aces. "<Match: '354aa', groups=('a',)>" group() >>> pair = re. compile(r". *(. ). *\1") >>> pair. match("717ak"). group(1) '7' # Error because re. match() returns None, which doesn't have a group() method: >>> pair. match("718ak"). group(1) Traceback (most recent call last): File "<pyshell#23>", line 1, in <module> re. match(r". *(. ). *\1", "718ak"). group(1) AttributeError: 'NoneType' object has no attribute 'group' >>> pair. match("354aa"). group(1) 'a' scanf() scanf() scanf() scanf() %c. %5c. {5} %d [-+]. \d+ %e %E %f %g [-+]. (\d+(\. \d*). |\. \d+)([eE][-+]. \d+). %i [-+]. (0[xX][\dA-Fa-f]+|0[0-7]*|\d+) %o [-+]. [0-7]+ %s \S+ %u \d+ %x %X [-+]. (0[xX]).