Return a new “bytes” object which is an immutable sequence of integers in the range 0 <= x < 256. bytes is an immutable version of bytearray – it has the same non-mutating methods and the same indexing and slicing behavior. 0 <= x < 256 bytes bytearray Accordingly, constructor arguments are interpreted as for bytearray(). bytearray() Bytes objects can also be created with literals, see String and Bytes literals. See also Binary Sequence Types — bytes, bytearray, memoryview, Bytes Objects, and Bytes and Bytearray Operations. Return True if the object argument appears callable, False if not. If this returns True, it is still possible that a call fails, but if it is False, calling object will never succeed. Note that classes are callable (calling a class returns a new instance); instances are callable if their class has a call() method. True False True False __call__() Added in version 3. 2: This function was first removed in Python 3. 0 and then brought back in Python 3. 2. Return the string representing a character whose Unicode code point is the integer i. For example, chr(97) returns the string 'a', while chr(8364) returns the string '€'. This is the inverse of ord(). chr(97) 'a' chr(8364) '€' ord() The valid range for the argument is from 0 through 1,114,111 (0x10FFFF in base 16). ValueError will be raised if i is outside that range. ValueError Transform a method into a class method. A class method receives the class as an implicit first argument, just like an instance method receives the instance. To declare a class method, use this idiom: class C: @classmethod def f(cls, arg1, arg2):. The @classmethod form is a function decorator – see Function definitions for details. @classmethod A class method can be called either on the class (such as C. f()) or on an instance (such as C(). f()). The instance is ignored except for its class. If a class method is called for a derived class, the derived class object is passed as the implied first argument. C. f() C(). f() Class methods are different than C++ or Java static methods. If you want those, see staticmethod() in this section. For more information on class methods, see The standard type hierarchy.