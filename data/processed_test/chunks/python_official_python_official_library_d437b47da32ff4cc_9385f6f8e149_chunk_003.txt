call_tracing() enables explicit recursion of the tracing function. settrace() setprofile() call_tracing() A string containing the copyright pertaining to the Python interpreter. Clear the internal type cache. The type cache is used to speed up attribute and method lookups. Use the function only to drop unnecessary references during reference leak debugging. This function should be used for internal and specialized purposes only. Deprecated since version 3. 13: Use the more general _clear_internal_caches() function instead. _clear_internal_caches() Clear all internal performance-related caches. Use this function only to release unnecessary references and memory blocks when hunting for leaks. Added in version 3. 13. Return a dictionary mapping each thread’s identifier to the topmost stack frame currently active in that thread at the time the function is called. Note that functions in the traceback module can build the call stack given such a frame. traceback This is most useful for debugging deadlock: this function does not require the deadlocked threads’ cooperation, and such threads’ call stacks are frozen for as long as they remain deadlocked. The frame returned for a non-deadlocked thread may bear no relationship to that thread’s current activity by the time calling code examines the frame. This function should be used for internal and specialized purposes only. Raises an auditing event sys. _current_frames with no arguments. sys. _current_frames Return a dictionary mapping each thread’s identifier to the topmost exception currently active in that thread at the time the function is called. If a thread is not currently handling an exception, it is not included in the result dictionary. This is most useful for statistical profiling. This function should be used for internal and specialized purposes only. Raises an auditing event sys. _current_exceptions with no arguments. sys. _current_exceptions Changed in version 3. 12: Each value in the dictionary is now a single exception instance, rather than a 3-tuple as returned from sys. exc_info(). sys. exc_info() This hook function is called by built-in breakpoint(). By default, it drops you into the pdb debugger, but it can be set to any other function so that you can choose which debugger gets used. breakpoint() pdb The signature of this function is dependent on what it calls. For example, the default binding (e. g. pdb. set_trace()) expects no arguments, but you might bind it to a function that expects additional arguments (positional and/or keyword).