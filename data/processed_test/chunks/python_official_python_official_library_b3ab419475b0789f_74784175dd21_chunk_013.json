{
  "chunk_id": "python_official_python_official_library_b3ab419475b0789f_74784175dd21_chunk_013",
  "original_doc_id": "python_official_python_official_library_b3ab419475b0789f_74784175dd21",
  "content": "8: exists(), is_dir(), is_file(), is_mount(), is_symlink(), is_block_device(), is_char_device(), is_fifo(), is_socket() now return False instead of raising an exception for paths that contain characters unrepresentable at the OS level. exists() is_dir() is_file() is_mount() is_symlink() is_block_device() is_char_device() is_fifo() is_socket() False Return an os. stat_result object containing information about this path, like os. stat(). The result is looked up at each call to this method. os. stat_result os. stat() This method normally follows symlinks; to stat a symlink add the argument follow_symlinks=False, or use lstat(). follow_symlinks=False lstat() >>> p = Path('setup. py') >>> p. stat(). st_size 956 >>> p. stat(). st_mtime 1327883547. 852554 Changed in version 3. 10: The follow_symlinks parameter was added. Like Path. stat() but, if the path points to a symbolic link, return the symbolic link’s information rather than its target’s. Path. stat() Return True if the path points to an existing file or directory. True This method normally follows symlinks; to check if a symlink exists, add the argument follow_symlinks=False. follow_symlinks=False >>> Path('. '). exists() True >>> Path('setup. py'). exists() True >>> Path('/etc'). exists() True >>> Path('nonexistentfile'). exists() False Changed in version 3. 12: The follow_symlinks parameter was added. Return True if the path points to a regular file, False if it points to another kind of file. True False False is also returned if the path doesn’t exist or is a broken symlink; other errors (such as permission errors) are propagated. False This method normally follows symlinks; to exclude symlinks, add the argument follow_symlinks=False. follow_symlinks=False Changed in version 3. 13: The follow_symlinks parameter was added. Return True if the path points to a directory, False if it points to another kind of file. True False False is also returned if the path doesn’t exist or is a broken symlink; other errors (such as permission errors) are propagated.",
  "title": "pathlib — Object-oriented filesystem paths.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 13,
  "start_char": 25345,
  "end_char": 27384,
  "token_count": 480,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_b3ab419475b0789f.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:32.496296"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_b3ab419475b0789f_74784175dd21_chunk_013.txt"
}