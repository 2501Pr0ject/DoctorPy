After f = attrgetter('name'), the call f(b) returns b. name. f = attrgetter('name') f(b) b. name After f = attrgetter('name', 'date'), the call f(b) returns (b. name, b. date). After f = attrgetter('name', 'date'), the call f(b) returns (b. name, b. date). f = attrgetter('name', 'date') f(b) (b. name, b. date) After f = attrgetter('name. first', 'name. last'), the call f(b) returns (b. name. first, b. name. last). After f = attrgetter('name. first', 'name. last'), the call f(b) returns (b. name. first, b. name. last). f = attrgetter('name. first', 'name. last') f(b) (b. name. first, b. name. last) Equivalent to: def attrgetter(*items): if any(not isinstance(item, str) for item in items): raise TypeError('attribute name must be a string') if len(items) == 1: attr = items[0] def g(obj): return resolve_attr(obj, attr) else: def g(obj): return tuple(resolve_attr(obj, attr) for attr in items) return g def resolve_attr(obj, attr): for name in attr. split(". "): obj = getattr(obj, name) return obj Return a callable object that fetches item from its operand using the operandâ€™s getitem() method. If multiple items are specified, returns a tuple of lookup values. For example: __getitem__() After f = itemgetter(2), the call f(r) returns r[2]. After f = itemgetter(2), the call f(r) returns r[2]. f = itemgetter(2) f(r) r[2] After g = itemgetter(2, 5, 3), the call g(r) returns (r[2], r[5], r[3]). After g = itemgetter(2, 5, 3), the call g(r) returns (r[2], r[5], r[3]).