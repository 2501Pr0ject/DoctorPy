{
  "chunk_id": "external_external_guides_1811034afddfd51a_93df0401e39e_chunk_002",
  "original_doc_id": "external_external_guides_1811034afddfd51a_93df0401e39e",
  "content": "py: error: unrecognized arguments: foo Here is what is happening: Running the script without any options results in nothing displayed to stdout. Not so useful. Running the script without any options results in nothing displayed to stdout. Not so useful. The second one starts to display the usefulness of the argparse module. We have done almost nothing, but already we get a nice help message. The second one starts to display the usefulness of the argparse module. We have done almost nothing, but already we get a nice help message. argparse The --help option, which can also be shortened to -h, is the only option we get for free (i. e. no need to specify it). Specifying anything else results in an error. But even then, we do get a useful usage message, also for free. The --help option, which can also be shortened to -h, is the only option we get for free (i. e. no need to specify it). Specifying anything else results in an error. But even then, we do get a useful usage message, also for free. --help -h ## Introducing Positional arguments¶ An example: import argparse parser = argparse. ArgumentParser() parser. add_argument(\"echo\") args = parser. parse_args() print(args. echo) And running the code: $ python prog. py usage: prog. py [-h] echo prog. py: error: the following arguments are required: echo $ python prog. py --help usage: prog. py [-h] echo positional arguments: echo options: -h, --help show this help message and exit $ python prog. py foo foo Here is what’s happening: We’ve added the add_argument() method, which is what we use to specify which command-line options the program is willing to accept. In this case, I’ve named it echo so that it’s in line with its function. We’ve added the add_argument() method, which is what we use to specify which command-line options the program is willing to accept. In this case, I’ve named it echo so that it’s in line with its function. add_argument() echo Calling our program now requires us to specify an option. Calling our program now requires us to specify an option. The parse_args() method actually returns some data from the options specified, in this case, echo. The parse_args() method actually returns some data from the options specified, in this case, echo.",
  "title": "Argparse Tutorial.13.5",
  "section": "external",
  "subsection": "guides",
  "chunk_index": 2,
  "start_char": 4240,
  "end_char": 6482,
  "token_count": 499,
  "metadata": {
    "original_file": "data/raw/documentation_test/external/external_guides_1811034afddfd51a.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:39.484897"
  },
  "file_path": "data/processed_test/chunks/external_external_guides_1811034afddfd51a_93df0401e39e_chunk_002.txt"
}