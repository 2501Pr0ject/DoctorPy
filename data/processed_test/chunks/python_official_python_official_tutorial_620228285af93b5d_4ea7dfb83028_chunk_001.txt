Since Python statements often contain spaces or other characters that are special to the shell, it is usually advised to quote command in its entirety. python -c command [arg]. -c Some Python modules are also useful as scripts. These can be invoked using python -m module [arg]. , which executes the source file for module as if you had spelled out its full name on the command line. python -m module [arg]. When a script file is used, it is sometimes useful to be able to run the script and enter interactive mode afterwards. This can be done by passing -i before the script. -i All command line options are described in Command line and environment. ### 2. 1. 1. Argument Passing¶ When known to the interpreter, the script name and additional arguments thereafter are turned into a list of strings and assigned to the argv variable in the sys module. You can access this list by executing import sys. The length of the list is at least one; when no script and no arguments are given, sys. argv[0] is an empty string. When the script name is given as '-' (meaning standard input), sys. argv[0] is set to '-'. When -c command is used, sys. argv[0] is set to '-c'. When -m module is used, sys. argv[0] is set to the full name of the located module. Options found after -c command or -m module are not consumed by the Python interpreter’s option processing but left in sys. argv for the command or module to handle. argv sys import sys sys. argv[0] '-' sys. argv[0] '-' -c sys. argv[0] '-c' -m sys. argv[0] -c -m sys. argv ### 2. 1. 2. Interactive Mode¶ When commands are read from a tty, the interpreter is said to be in interactive mode. In this mode it prompts for the next command with the primary prompt, usually three greater-than signs (>>>); for continuation lines it prompts with the secondary prompt, by default three dots (. ). The interpreter prints a welcome message stating its version number and a copyright notice before printing the first prompt: >>>. $ python3. 13 Python 3. 13 (default, April 4 2023, 09:25:04) [GCC 10. 2.