{
  "chunk_id": "python_official_python_official_library_ccf716b46391ca56_40d31454785a_chunk_010",
  "original_doc_id": "python_official_python_official_library_ccf716b46391ca56_40d31454785a",
  "content": "A symbolic group is also a numbered group, just as if the group were not named. bytes Named groups can be referenced in three contexts. If the pattern is (. P['\"]). (. P=quote) (i. e. matching a string quoted with either single or double quotes): (. P<quote>['\"]). *. (. P=quote) Context of reference to group “quote” Ways to reference it in the same pattern itself (. P=quote) (as shown) (. P=quote) (as shown) (. P=quote) \\1 \\1 \\1 when processing match object m m. group('quote') m. group('quote') m. group('quote') m. end('quote') (etc. ) m. end('quote') (etc. ) m. end('quote') in a string passed to the repl argument of re. sub() re. sub() \\g \\g \\g<quote> \\g<1> \\g<1> \\g<1> \\1 \\1 \\1 Changed in version 3. 12: In bytes patterns, group name can only contain bytes in the ASCII range (b'\\x00'-b'\\x7f'). bytes b'\\x00' b'\\x7f' (. P=name) A backreference to a named group; it matches whatever text was matched by the earlier group named name. (. #. ) A comment; the contents of the parentheses are simply ignored. (. =. ) Matches if. matches next, but doesn’t consume any of the string. This is called a lookahead assertion. For example, Isaac (. =Asimov) will match 'Isaac ' only if it’s followed by 'Asimov'. Isaac (. =Asimov) 'Isaac ' 'Asimov' (. ) Matches if. doesn’t match next. This is a negative lookahead assertion. For example, Isaac (. Asimov) will match 'Isaac ' only if it’s not followed by 'Asimov'. Isaac (. Asimov) 'Isaac ' 'Asimov' (. <=. ) Matches if the current position in the string is preceded by a match for. that ends at the current position. This is called a positive lookbehind assertion. (. <=abc)def will find a match in 'abcdef', since the lookbehind will back up 3 characters and check if the contained pattern matches.",
  "title": "re — Regular expression operations.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 10,
  "start_char": 19414,
  "end_char": 21161,
  "token_count": 494,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_ccf716b46391ca56.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:36.810752"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_ccf716b46391ca56_40d31454785a_chunk_010.txt"
}