{
  "chunk_id": "python_official_python_official_library_96003c24587351a2_74918d6d2a40_chunk_028",
  "original_doc_id": "python_official_python_official_library_96003c24587351a2_74918d6d2a40",
  "content": "In that case, pow(inv_base, -exp, mod) is returned, where inv_base is an inverse to base modulo mod. int pow(inv_base, -exp, mod) Hereâ€™s an example of computing an inverse for 38 modulo 97: 38 97 >>> pow(38, -1, mod=97) 23 >>> 23 * 38 % 97 == 1 True Changed in version 3. 8: For int operands, the three-argument form of pow now allows the second argument to be negative, permitting computation of modular inverses. int pow Changed in version 3. 8: Allow keyword arguments. Formerly, only positional arguments were supported. Print objects to the text stream file, separated by sep and followed by end. sep, end, file, and flush, if present, must be given as keyword arguments. All non-keyword arguments are converted to strings like str() does and written to the stream, separated by sep and followed by end. Both sep and end must be strings; they can also be None, which means to use the default values. If no objects are given, print() will just write end. str() None print() The file argument must be an object with a write(string) method; if it is not present or None, sys. stdout will be used. Since printed arguments are converted to text strings, print() cannot be used with binary mode file objects. For these, use file. write(. ) instead. write(string) None sys. stdout print() file. write(. ) Output buffering is usually determined by file. However, if flush is true, the stream is forcibly flushed. Changed in version 3. 3: Added the flush keyword argument. Return a property attribute. fget is a function for getting an attribute value. fset is a function for setting an attribute value. fdel is a function for deleting an attribute value. And doc creates a docstring for the attribute. A typical use is to define a managed attribute x: x class C: def __init__(self): self. _x = None def getx(self): return self. _x def setx(self, value): self. _x = value def delx(self): del self. _x x = property(getx, setx, delx, \"I'm the 'x' property. \") If c is an instance of C, c.",
  "title": "Built-in Functions.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 28,
  "start_char": 60020,
  "end_char": 62002,
  "token_count": 495,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_96003c24587351a2.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:31.019514"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_96003c24587351a2_74918d6d2a40_chunk_028.txt"
}