The result is always rounded towards minus infinity: 1//2 is 0, (-1)//2 is -1, 1//(-2) is -1, and (-1)//(-2) is 0. Also referred to as integer division. For operands of type int, the result has type int. For operands of type float, the result has type float. In general, the result is a whole integer, though the result’s type is not necessarily int. The result is always rounded towards minus infinity: 1//2 is 0, (-1)//2 is -1, 1//(-2) is -1, and (-1)//(-2) is 0. int int float float int 1//2 0 (-1)//2 -1 1//(-2) -1 (-1)//(-2) 0 Not for complex numbers. Instead convert to floats using abs() if appropriate. Not for complex numbers. Instead convert to floats using abs() if appropriate. abs() Conversion from float to int truncates, discarding the fractional part. See functions math. floor() and math. ceil() for alternative conversions. Conversion from float to int truncates, discarding the fractional part. See functions math. floor() and math. ceil() for alternative conversions. float int math. floor() math. ceil() float also accepts the strings “nan” and “inf” with an optional prefix “+” or “-” for Not a Number (NaN) and positive or negative infinity. float also accepts the strings “nan” and “inf” with an optional prefix “+” or “-” for Not a Number (NaN) and positive or negative infinity. Python defines pow(0, 0) and 0 ** 0 to be 1, as is common for programming languages. Python defines pow(0, 0) and 0 ** 0 to be 1, as is common for programming languages. pow(0, 0) 0 ** 0 1 The numeric literals accepted include the digits 0 to 9 or any Unicode equivalent (code points with the Nd property). See the Unicode Standard for a complete list of code points with the Nd property. The numeric literals accepted include the digits 0 to 9 or any Unicode equivalent (code points with the Nd property). 0 9 Nd See the Unicode Standard for a complete list of code points with the Nd property.