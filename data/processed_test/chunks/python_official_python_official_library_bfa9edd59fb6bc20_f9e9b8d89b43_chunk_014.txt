Implementations that do not obey this property are deemed broken. __next__() StopIteration ### Generator Types¶ Python’s generators provide a convenient way to implement the iterator protocol. If a container object’s iter() method is implemented as a generator, it will automatically return an iterator object (technically, a generator object) supplying the iter() and next() methods. More information about generators can be found in the documentation for the yield expression. __iter__() __iter__() __next__() ## Sequence Types — list, tuple, range¶ list tuple range There are three basic sequence types: lists, tuples, and range objects. Additional sequence types tailored for processing of binary data and text strings are described in dedicated sections. ### Common Sequence Operations¶ The operations in the following table are supported by most sequence types, both mutable and immutable. The collections. abc. Sequence ABC is provided to make it easier to correctly implement these operations on custom sequence types. collections. abc. Sequence This table lists the sequence operations sorted in ascending priority. In the table, s and t are sequences of the same type, n, i, j and k are integers and x is an arbitrary object that meets any type and value restrictions imposed by s. The in and not in operations have the same priorities as the comparison operations. The + (concatenation) and * (repetition) operations have the same priority as the corresponding numeric operations. [3] in not in + * Operation Result Notes x in s x in s True if an item of s is equal to x, else False True False (1) x not in s x not in s False if an item of s is equal to x, else True False True (1) s + t s + t the concatenation of s and t (6)(7) s * n or n * s s * n n * s equivalent to adding s to itself n times (2)(7) s[i] s[i] ith item of s, origin 0 (3)(9) s[i:j] s[i:j] slice of s from i to j (3)(4) s[i:j:k] s[i:j:k] slice of s from i to j with step k (3)(5) len(s) len(s) length of s min(s) min(s) smallest item of s max(s) max(s) largest item of s s. index(x[, i[, j]]) s.