{
  "chunk_id": "python_official_python_official_library_9696fac185a46f7d_fca9d84d248c_chunk_020",
  "original_doc_id": "python_official_python_official_library_9696fac185a46f7d_fca9d84d248c",
  "content": "\" #  # totient(12) → 4 because len([1, 5, 7, 11]) == 4 for prime in set(factor(n)): n -= n // prime return n ### Table of Contents itertools — Functions creating iterators for efficient looping Itertool Functions Itertools Recipes itertools Itertool Functions Itertools Recipes #### Previous topic Functional Programming Modules #### Next topic functools — Higher-order functions and operations on callable objects functools ### This page Report a bug Show source itertools tabulate(f) f(0), f(1),. map() count() map(f, count()) count() count(10) → 10 11 12 13 14. cycle() cycle('ABCD') → A B C D A B C D. repeat() repeat(10, 3) → 10 10 10 accumulate() accumulate([1,2,3,4,5]) → 1 3 6 10 15 batched() batched('ABCDEFG', n=3) → ABC DEF G chain() chain('ABC', 'DEF') → A B C D E F chain. from_iterable() chain.",
  "title": "itertools — Functions creating iterators for efficient looping.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 20,
  "start_char": 34506,
  "end_char": 35314,
  "token_count": 235,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_9696fac185a46f7d.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:02.111131"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_9696fac185a46f7d_fca9d84d248c_chunk_020.txt"
}