_getframemodulename depth CPython implementation detail: This function should be used for internal and specialized purposes only. It is not guaranteed to exist in all implementations of Python. This function only exists if CPython was built using the specialized configure option --with-trace-refs. It is intended only for debugging garbage-collection issues. --with-trace-refs Return a list of up to limit dynamically allocated Python objects. If type is given, only objects of that exact type (not subtypes) are included. Objects from the list are not safe to use. Specifically, the result will include objects from all interpreters that share their object allocator state (that is, ones created with PyInterpreterConfig. use_main_obmalloc set to 1 or using Py_NewInterpreter(), and the main interpreter). Mixing objects from different interpreters may lead to crashes or other unexpected behavior. PyInterpreterConfig. use_main_obmalloc Py_NewInterpreter() CPython implementation detail: This function should be used for specialized purposes only. It is not guaranteed to exist in all implementations of Python. Changed in version 3. 13. 1: The result may include objects from other interpreters. Get the profiler function as set by setprofile(). setprofile() Get the trace function as set by settrace(). settrace() CPython implementation detail: The gettrace() function is intended only for implementing debuggers, profilers, coverage tools and the like. Its behavior is part of the implementation platform, rather than part of the language definition, and thus may not be available in all Python implementations. gettrace() Return a named tuple describing the Windows version currently running. The named elements are major, minor, build, platform, service_pack, service_pack_minor, service_pack_major, suite_mask, product_type and platform_version. service_pack contains a string, platform_version a 3-tuple and all other values are integers. The components can also be accessed by name, so sys. getwindowsversion()[0] is equivalent to sys. getwindowsversion(). major. For compatibility with prior versions, only the first 5 elements are retrievable by indexing. sys. getwindowsversion()[0] sys. getwindowsversion(). major platform will be 2 (VER_PLATFORM_WIN32_NT). 2 product_type may be one of the following values: Constant Meaning 1 (VER_NT_WORKSTATION) 1 The system is a workstation.