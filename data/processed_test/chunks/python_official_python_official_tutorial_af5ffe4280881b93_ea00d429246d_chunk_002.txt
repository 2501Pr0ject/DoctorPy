0 If you re-run this command, pip will notice that the requested version is already installed and do nothing. You can supply a different version number to get that version, or you can run python -m pip install --upgrade to upgrade the package to the latest version: pip python -m pip install --upgrade (tutorial-env) $ python -m pip install --upgrade requests Collecting requests Installing collected packages: requests Found existing installation: requests 2. 6. 0 Uninstalling requests-2. 6. 0: Successfully uninstalled requests-2. 6. 0 Successfully installed requests-2. 7. 0 python -m pip uninstall followed by one or more package names will remove the packages from the virtual environment. python -m pip uninstall python -m pip show will display information about a particular package: python -m pip show (tutorial-env) $ python -m pip show requests --- Metadata-Version: 2. 0 Name: requests Version: 2. 7. 0 Summary: Python HTTP for Humans. Home-page:  Author: Kenneth Reitz Author-email: me@kennethreitz. com License: Apache 2. 0 Location: /Users/akuchling/envs/tutorial-env/lib/python3. 4/site-packages Requires: python -m pip list will display all of the packages installed in the virtual environment: python -m pip list (tutorial-env) $ python -m pip list novas (3. 1. 1. 3) numpy (1. 9. 2) pip (7. 0. 3) requests (2. 7. 0) setuptools (16. 0) python -m pip freeze will produce a similar list of the installed packages, but the output uses the format that python -m pip install expects. A common convention is to put this list in a requirements. txt file: python -m pip freeze python -m pip install requirements. txt (tutorial-env) $ python -m pip freeze > requirements. txt (tutorial-env) $ cat requirements. txt novas==3. 1. 1. 3 numpy==1. 9. 2 requests==2. 7. 0 The requirements. txt can then be committed to version control and shipped as part of an application. Users can then install all the necessary packages with install -r: requirements.