{
  "chunk_id": "python_official_python_official_library_275d02bc254e97ec_ea8f648931f7_chunk_058",
  "original_doc_id": "python_official_python_official_library_275d02bc254e97ec_ea8f648931f7",
  "content": "Any of the following variables may used, combined using bitwise OR (the | operator): | TFD_TIMER_ABSTIME TFD_TIMER_ABSTIME TFD_TIMER_ABSTIME TFD_TIMER_CANCEL_ON_SET TFD_TIMER_CANCEL_ON_SET TFD_TIMER_CANCEL_ON_SET The timer is disabled by setting initial to zero (0). If initial is equal to or greater than zero, the timer is enabled. If initial is less than zero, it raises an OSError exception with errno set to errno. EINVAL 0 OSError errno errno. EINVAL By default the timer will fire when initial seconds have elapsed. (If initial is zero, timer will fire immediately. ) However, if the TFD_TIMER_ABSTIME flag is set, the timer will fire when the timer’s clock (set by clockid in timerfd_create()) reaches initial seconds. TFD_TIMER_ABSTIME timerfd_create() The timer’s interval is set by the interval float. If interval is zero, the timer only fires once, on the initial expiration. If interval is greater than zero, the timer fires every time interval seconds have elapsed since the previous expiration. If interval is less than zero, it raises OSError with errno set to errno. EINVAL float OSError errno errno. EINVAL If the TFD_TIMER_CANCEL_ON_SET flag is set along with TFD_TIMER_ABSTIME and the clock for this timer is time. CLOCK_REALTIME, the timer is marked as cancelable if the real-time clock is changed discontinuously. Reading the descriptor is aborted with the error ECANCELED. TFD_TIMER_CANCEL_ON_SET TFD_TIMER_ABSTIME time. CLOCK_REALTIME Linux manages system clock as UTC. A daylight-savings time transition is done by changing time offset only and doesn’t cause discontinuous system clock change. Discontinuous system clock change will be caused by the following events: settimeofday settimeofday settimeofday clock_settime clock_settime clock_settime set the system date and time by date command set the system date and time by date command date Return a two-item tuple of (next_expiration, interval) from the previous timer state, before this function executed. next_expiration interval See also timerfd_create(2), timerfd_settime(2), settimeofday(2), clock_settime(2), and date(1). Availability: Linux >= 2. 6. 27 with glibc >= 2. 8 Added in version 3. 13.",
  "title": "os — Miscellaneous operating system interfaces.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 58,
  "start_char": 123308,
  "end_char": 125489,
  "token_count": 492,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_275d02bc254e97ec.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:24.823508"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_275d02bc254e97ec_ea8f648931f7_chunk_058.txt"
}