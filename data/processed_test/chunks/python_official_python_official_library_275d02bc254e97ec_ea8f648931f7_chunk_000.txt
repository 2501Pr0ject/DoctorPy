os — Miscellaneous operating system interfaces. 13. 5 Source:  os — Miscellaneous operating system interfaces¶ os Source code: Lib/os. py This module provides a portable way of using operating system dependent functionality. If you just want to read or write a file see open(), if you want to manipulate paths, see the os. path module, and if you want to read all the lines in all the files on the command line see the fileinput module. For creating temporary files and directories see the tempfile module, and for high-level file and directory handling see the shutil module. open() os. path fileinput tempfile shutil Notes on the availability of these functions: The design of all built-in operating system dependent modules of Python is such that as long as the same functionality is available, it uses the same interface; for example, the function os. stat(path) returns stat information about path in the same format (which happens to have originated with the POSIX interface). The design of all built-in operating system dependent modules of Python is such that as long as the same functionality is available, it uses the same interface; for example, the function os. stat(path) returns stat information about path in the same format (which happens to have originated with the POSIX interface). os. stat(path) Extensions peculiar to a particular operating system are also available through the os module, but using them is of course a threat to portability. Extensions peculiar to a particular operating system are also available through the os module, but using them is of course a threat to portability. os All functions accepting path or file names accept both bytes and string objects, and result in an object of the same type, if a path or file name is returned. All functions accepting path or file names accept both bytes and string objects, and result in an object of the same type, if a path or file name is returned. On VxWorks, os. popen, os. fork, os. execv and os. spawnp are not supported. On VxWorks, os. popen, os. fork, os. execv and os. spawnp are not supported. On WebAssembly platforms, Android and iOS, large parts of the os module are not available or behave differently. APIs related to processes (e. g. fork(), execve()) and resources (e. g. nice()) are not available. Others like getuid() and getpid() are emulated or stubs.