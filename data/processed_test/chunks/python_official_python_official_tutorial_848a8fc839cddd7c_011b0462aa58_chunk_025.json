{
  "chunk_id": "python_official_python_official_tutorial_848a8fc839cddd7c_011b0462aa58_chunk_025",
  "original_doc_id": "python_official_python_official_tutorial_848a8fc839cddd7c_011b0462aa58",
  "content": ">>> # Now call the function we just defined: >>> fib(2000) 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 def global nonlocal >>> fib <function fib at 10042ed0> >>> f = fib >>> f(100) 0 1 1 2 3 5 8 13 21 34 55 89 fib return None None print() >>> fib(0) >>> print(fib(0)) None >>> def fib2(n): # return Fibonacci series up to n. \"\"\"Return a list containing the Fibonacci series up to n. \"\"\". result = []. a, b = 0, 1. while a < n:. result. append(a) # see below. a, b = b, a+b. return result. >>> f100 = fib2(100) # call it >>> f100 # write the result [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89] return return None None result. append(a) result obj. methodname obj methodname append() result = result + [a] def ask_ok(prompt, retries=4, reminder='Please try again. '): while True: reply = input(prompt) if reply in {'y', 'ye', 'yes'}: return True if reply in {'n', 'no', 'nop', 'nope'}: return False retries = retries - 1 if retries < 0: raise ValueError('invalid user response') print(reminder) ask_ok('Do you really want to quit. ') ask_ok('OK to overwrite the file. ', 2) ask_ok('OK to overwrite the file. ', 2, 'Come on, only yes or no. ') in i = 5 def f(arg=i): print(arg) i = 6 f() 5 def f(a, L=[]): L. append(a) return L print(f(1)) print(f(2)) print(f(3)) [1] [1, 2] [1, 2, 3] def f(a, L=None): if L is None: L = [] L.",
  "title": "4. More Control Flow Tools.13.5",
  "section": "python_official",
  "subsection": "tutorial",
  "chunk_index": 25,
  "start_char": 46576,
  "end_char": 47906,
  "token_count": 482,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_tutorial_848a8fc839cddd7c.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:37.630620"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_tutorial_848a8fc839cddd7c_011b0462aa58_chunk_025.txt"
}