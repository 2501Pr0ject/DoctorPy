str_digits_check_threshold is the lowest accepted value for the limit (other than 0 which disables it). sys. int_info. str_digits_check_threshold Added in version 3. 11. Caution Setting a low limit can lead to problems. While rare, code exists that contains integer constants in decimal in their source that exceed the minimum threshold. A consequence of setting the limit is that Python source code containing decimal integer literals longer than the limit will encounter an error during parsing, usually at startup time or import time or even at installation time - anytime an up to date. pyc does not already exist for the code. A workaround for source that contains such large constants is to convert them to 0x hexadecimal form as it has no limit. pyc 0x Test your application thoroughly if you use a low limit. Ensure your tests run with the limit set early via the environment or flag so that it applies during startup and even during any installation step that may invoke Python to precompile. py sources to. pyc files. py. pyc ### Recommended configurationÂ¶ The default sys. int_info. default_max_str_digits is expected to be reasonable for most applications. If your application requires a different limit, set it from your main entry point using Python version agnostic code as these APIs were added in security patch releases in versions before 3. 12. sys. int_info. default_max_str_digits Example: >>> import sys >>> if hasattr(sys, "set_int_max_str_digits"):. upper_bound = 68000. lower_bound = 4004. current_limit = sys. get_int_max_str_digits(). if current_limit == 0 or current_limit > upper_bound:. sys. set_int_max_str_digits(upper_bound). elif current_limit < lower_bound:. sys. set_int_max_str_digits(lower_bound) If you need to disable it entirely, set it to 0.