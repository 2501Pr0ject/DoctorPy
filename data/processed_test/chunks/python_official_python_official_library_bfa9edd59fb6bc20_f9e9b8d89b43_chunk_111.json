{
  "chunk_id": "python_official_python_official_library_bfa9edd59fb6bc20_f9e9b8d89b43_chunk_111",
  "original_doc_id": "python_official_python_official_library_bfa9edd59fb6bc20_f9e9b8d89b43",
  "content": "return 0. >>> c = Counter() >>> c['red'] 0 >>> c['red'] += 1 >>> c['red'] 1 collections. Counter __missing__ collections. defaultdict d[key] d[key] KeyError True False not key in d iter(d. keys()) fromkeys() None None KeyError (key, value) KeyError (key, value) popitem() popitem() KeyError popitem() reversed(d. keys()) None None update() keys() __getitem__() d. update(red=1, blue=2) dict. values() False dict. values() >>> d = {'a': 1} >>> d. values() == d. values() False >>> d = {\"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4} >>> d {'one': 1, 'two': 2, 'three': 3, 'four': 4} >>> list(reversed(d)) ['four', 'three', 'two', 'one'] >>> list(reversed(d. values())) [4, 3, 2, 1] >>> list(reversed(d. items())) [('four', 4), ('three', 3), ('two', 2), ('one', 1)] types. MappingProxyType dict dict. keys() dict. values() dict. items() (key, value) (value, key) zip() pairs = zip(d. values(), d. keys()) pairs = [(v, k) for (k, v) in d. items()] RuntimeError True (key, value) types. MappingProxyType collections. abc. Set == < ^ >>> dishes = {'eggs': 2, 'sausage': 1, 'bacon': 1, 'spam': 500} >>> keys = dishes. keys() >>> values = dishes. values() >>> # iteration >>> n = 0 >>> for val in values:. n += val.",
  "title": "Built-in Types.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 111,
  "start_char": 216266,
  "end_char": 217470,
  "token_count": 403,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_bfa9edd59fb6bc20.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:56:56.281164"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_bfa9edd59fb6bc20_f9e9b8d89b43_chunk_111.txt"
}