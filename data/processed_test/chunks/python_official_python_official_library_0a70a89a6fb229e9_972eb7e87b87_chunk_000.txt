string — Common string operations. 13. 5 Source:  string — Common string operations¶ string Source code: Lib/string. py See also Text Sequence Type — str String Methods ## String constants¶ The constants defined in this module are: The concatenation of the ascii_lowercase and ascii_uppercase constants described below. This value is not locale-dependent. ascii_lowercase ascii_uppercase The lowercase letters 'abcdefghijklmnopqrstuvwxyz'. This value is not locale-dependent and will not change. 'abcdefghijklmnopqrstuvwxyz' The uppercase letters 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'. This value is not locale-dependent and will not change. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' The string '0123456789'. '0123456789' The string '0123456789abcdefABCDEF'. '0123456789abcdefABCDEF' The string '01234567'. '01234567' String of ASCII characters which are considered punctuation characters in the C locale:. "#$%&'()+,-. /:;<=>. @[]^_{|}~. C. "#$%&'()+,-. /:;<=>. @[]^_{|}~ String of ASCII characters which are considered printable by Python. This is a combination of digits, ascii_letters, punctuation, and whitespace. digits ascii_letters punctuation whitespace Note By design, string. printable. isprintable() returns False. In particular, string. printable is not printable in the POSIX sense (see LC_CTYPE). string. printable. isprintable() False string. printable A string containing all ASCII characters that are considered whitespace. This includes the characters space, tab, linefeed, return, formfeed, and vertical tab. ## Custom String Formatting¶ The built-in string class provides the ability to do complex variable substitutions and value formatting via the format() method described in PEP 3101. The Formatter class in the string module allows you to create and customize your own string formatting behaviors using the same implementation as the built-in format() method. format() Formatter string format() The Formatter class has the following public methods: Formatter The primary API method. It takes a format string and an arbitrary set of positional and keyword arguments. It is just a wrapper that calls vformat(). vformat() Changed in version 3. 7: A format string argument is now positional-only. This function does the actual work of formatting.