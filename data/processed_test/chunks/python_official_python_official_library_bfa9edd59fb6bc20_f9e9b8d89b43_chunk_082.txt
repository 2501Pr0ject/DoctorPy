WeakSet weakref. WeakSet weakref. WeakValueDictionary weakref. WeakValueDictionary weakref. WeakValueDictionary #### Special Attributes of GenericAlias objects¶ GenericAlias All parameterized generics implement special read-only attributes. This attribute points at the non-parameterized generic class: >>> list[int]. __origin__ <class 'list'> This attribute is a tuple (possibly of length 1) of generic types passed to the original class_getitem() of the generic class: tuple __class_getitem__() >>> dict[str, list[int]]. __args__ (<class 'str'>, list[int]) This attribute is a lazily computed tuple (possibly empty) of unique type variables found in args: __args__ >>> from typing import TypeVar >>> T = TypeVar('T') >>> list[T]. __parameters__ (~T,) Note A GenericAlias object with typing. ParamSpec parameters may not have correct parameters after substitution because typing. ParamSpec is intended primarily for static type checking. GenericAlias typing. ParamSpec __parameters__ typing. ParamSpec A boolean that is true if the alias has been unpacked using the * operator (see TypeVarTuple). * TypeVarTuple Added in version 3. 11. See also Introducing Python’s framework for type annotations. Introducing the ability to natively parameterize standard-library classes, provided they implement the special class method class_getitem(). __class_getitem__() typing. Generic Documentation on how to implement generic classes that can be parameterized at runtime and understood by static type-checkers. Added in version 3. 9. ### Union Type¶ A union object holds the value of the | (bitwise or) operation on multiple type objects. These types are intended primarily for type annotations. The union type expression enables cleaner type hinting syntax compared to typing. Union. | typing. Union Defines a union object which holds types X, Y, and so forth. X | Y means either X or Y. It is equivalent to typing. Union[X, Y]. For example, the following function expects an argument of type int or float: X | Y typing. Union[X, Y] int float def square(number: int | float) -> int | float: return number ** 2 Note The | operand cannot be used at runtime to define unions where one or more members is a forward reference.