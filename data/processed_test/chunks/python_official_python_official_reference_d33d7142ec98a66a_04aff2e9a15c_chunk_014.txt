find_spec() Three variables are used by the path based finder, sys. path, sys. path_hooks and sys. path_importer_cache. The path attributes on package objects are also used. These provide additional ways that the import machinery can be customized. sys. path sys. path_hooks sys. path_importer_cache __path__ sys. path contains a list of strings providing search locations for modules and packages. It is initialized from the PYTHONPATH environment variable and various other installation- and implementation-specific defaults. Entries in sys. path can name directories on the file system, zip files, and potentially other “locations” (see the site module) that should be searched for modules, such as URLs, or database queries. Only strings should be present on sys. path; all other data types are ignored. sys. path PYTHONPATH sys. path site sys. path The path based finder is a meta path finder, so the import machinery begins the import path search by calling the path based finder’s find_spec() method as described previously. When the path argument to find_spec() is given, it will be a list of string paths to traverse - typically a package’s path attribute for an import within that package. If the path argument is None, this indicates a top level import and sys. path is used. find_spec() path find_spec() __path__ path None sys. path The path based finder iterates over every entry in the search path, and for each of these, looks for an appropriate path entry finder (PathEntryFinder) for the path entry. Because this can be an expensive operation (e. g. there may be stat() call overheads for this search), the path based finder maintains a cache mapping path entries to path entry finders. This cache is maintained in sys. path_importer_cache (despite the name, this cache actually stores finder objects rather than being limited to importer objects). In this way, the expensive search for a particular path entry location’s path entry finder need only be done once. User code is free to remove cache entries from sys. path_importer_cache forcing the path based finder to perform the path entry search again. PathEntryFinder stat() sys. path_importer_cache sys. path_importer_cache If the path entry is not present in the cache, the path based finder iterates over every callable in sys. path_hooks.