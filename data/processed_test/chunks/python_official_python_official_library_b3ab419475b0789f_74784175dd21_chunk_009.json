{
  "chunk_id": "python_official_python_official_library_b3ab419475b0789f_74784175dd21_chunk_009",
  "original_doc_id": "python_official_python_official_library_b3ab419475b0789f_74784175dd21",
  "content": "py\", line 751, in with_name raise ValueError(\"%r has an empty name\" % (self,)) ValueError: PureWindowsPath('c:/') has an empty name Return a new path with the stem changed. If the original path doesn’t have a name, ValueError is raised: stem >>> p = PureWindowsPath('c:/Downloads/draft. txt') >>> p. with_stem('final') PureWindowsPath('c:/Downloads/final. txt') >>> p = PureWindowsPath('c:/Downloads/pathlib. tar. gz') >>> p. with_stem('lib') PureWindowsPath('c:/Downloads/lib. gz') >>> p = PureWindowsPath('c:/') >>> p. with_stem('') Traceback (most recent call last): File \"<stdin>\", line 1, in <module> File \"/home/antoine/cpython/default/Lib/pathlib. py\", line 861, in with_stem return self. with_name(stem + self. suffix) File \"/home/antoine/cpython/default/Lib/pathlib. py\", line 851, in with_name raise ValueError(\"%r has an empty name\" % (self,)) ValueError: PureWindowsPath('c:/') has an empty name Added in version 3. 9. Return a new path with the suffix changed. If the original path doesn’t have a suffix, the new suffix is appended instead. If the suffix is an empty string, the original suffix is removed: suffix >>> p = PureWindowsPath('c:/Downloads/pathlib. tar. gz') >>> p. with_suffix('. bz2') PureWindowsPath('c:/Downloads/pathlib. tar. bz2') >>> p = PureWindowsPath('README') >>> p. with_suffix('. txt') PureWindowsPath('README. txt') >>> p = PureWindowsPath('README. txt') >>> p. with_suffix('') PureWindowsPath('README') Create a new path object of the same type by combining the given pathsegments. This method is called whenever a derivative path is created, such as from parent and relative_to(). Subclasses may override this method to pass information to derivative paths, for example: parent relative_to() from pathlib import PurePosixPath class MyPath(PurePosixPath): def __init__(self, *pathsegments, session_id): super(). __init__(*pathsegments) self.",
  "title": "pathlib — Object-oriented filesystem paths.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 9,
  "start_char": 17376,
  "end_char": 19257,
  "token_count": 491,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_b3ab419475b0789f.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:32.492997"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_b3ab419475b0789f_74784175dd21_chunk_009.txt"
}