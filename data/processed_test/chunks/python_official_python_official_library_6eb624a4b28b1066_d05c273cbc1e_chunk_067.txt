isoformat() time tzinfo=None time time time copy. replace() HH:MM:SS. ffffff microsecond HH:MM:SS microsecond HH:MM:SS. ffffff+HH:MM[:SS[. ffffff]] utcoffset() None HH:MM:SS+HH:MM[:SS[. ffffff]] microsecond utcoffset() None 'auto' 'auto' 'seconds' microsecond 'microseconds' 'hours' hour HH 'minutes' hour minute HH:MM 'seconds' hour minute second HH:MM:SS 'milliseconds' HH:MM:SS. sss 'microseconds' HH:MM:SS. ffffff ValueError >>> from datetime import time >>> time(hour=12, minute=34, second=56, microsecond=123456). isoformat(timespec='minutes') '12:34' >>> dt = time(hour=12, minute=34, second=56, microsecond=0) >>> dt. isoformat(timespec='microseconds') '12:34:56. 000000' >>> dt. isoformat(timespec='auto') '12:34:56' t str(t) t. isoformat() time. isoformat() time. strftime() time str. format() time. isoformat() tzinfo None None self. tzinfo. utcoffset(None) None timedelta tzinfo None None self. tzinfo. dst(None) None timedelta tzinfo None None self. tzinfo. tzname(None) None time time >>> from datetime import time, tzinfo, timedelta >>> class TZ1(tzinfo):. def utcoffset(self, dt):. return timedelta(hours=1). def dst(self, dt):. return timedelta(0). def tzname(self,dt):. return "+01:00". def __repr__(self):. return f"{self. __class__. __name__}()". >>> t = time(12, 10, 30, tzinfo=TZ1()) >>> t datetime. time(12, 10, 30, tzinfo=TZ1()) >>> t. isoformat() '12:10:30+01:00' >>> t. dst() datetime. timedelta(0) >>> t. tzname() '+01:00' >>> t.