= start stop step range(0) == range(2, 1, 3) range(0, 3, 2) == range(0, 4, 2) int start stop step str str 'allows embedded "double" quotes' "allows embedded 'single' quotes" '''Three single quotes''' """Three double quotes""" ("spam " "eggs") == "spam eggs" r str s[0] == s[0:1] str. join() io. StringIO u r str() str(object) type(object). __str__(object) __str__() str() repr(object) bytes bytearray bytes bytearray str(bytes, encoding, errors) bytes. decode(encoding, errors) bytes. decode() bytes str() -b >>> str(b'Zoot. ') "b'Zoot. '" str str. format() printf re 'ß' "ss" lower() 'ß' casefold() "ss" len(s) >>> 'Python'. center(10) ' Python ' >>> 'Python'. center(10, '-') '--Python--' >>> 'Python'. center(4) 'Python' >>> 'spam, spam, spam'. count('spam') 3 >>> 'spam, spam, spam'. count('spam', 5) 2 >>> 'spam, spam, spam'. count('spam', 5, 10) 1 >>> 'spam, spam, spam'. count('eggs') 0 >>> 'spam, spam, spam'. count('') 17 bytes 'utf-8' 'strict' UnicodeError 'ignore' 'replace' 'xmlcharrefreplace' 'backslashreplace' codecs. register_error() True False \t \n \r >>> '01\t012\t0123\t01234'. expandtabs() '01 012 0123 01234' >>> '01\t012\t0123\t01234'. expandtabs(4) '01 012 0123 01234' s[start:end] -1 find() in >>> 'Py' in 'Python' True {} >>> "The sum of 1 + 2 is {0}". format(1+2) 'The sum of 1 + 2 is 3' int float complex decimal. Decimal n '{:n}'. format(1234) LC_CTYPE LC_NUMERIC decimal_point thousands_sep localeconv() LC_NUMERIC LC_CTYPE n LC_CTYPE LC_NUMERIC str.