This is like passing include_hidden=True to glob. glob(). Files beginning with a dot are not special in pathlib. This is like passing include_hidden=True to glob. glob(). include_hidden=True glob. glob() “” pattern components are always recursive in pathlib. This is like passing recursive=True to glob. glob(). “” pattern components are always recursive in pathlib. This is like passing recursive=True to glob. glob(). ** recursive=True glob. glob() “” pattern components do not follow symlinks by default in pathlib. This behaviour has no equivalent in glob. glob(), but you can pass recurse_symlinks=True to Path. glob() for compatible behaviour. “” pattern components do not follow symlinks by default in pathlib. This behaviour has no equivalent in glob. glob(), but you can pass recurse_symlinks=True to Path. glob() for compatible behaviour. ** glob. glob() recurse_symlinks=True Path. glob() Like all PurePath and Path objects, the values returned from Path. glob() and Path. rglob() don’t include trailing slashes. Like all PurePath and Path objects, the values returned from Path. glob() and Path. rglob() don’t include trailing slashes. PurePath Path Path. glob() Path. rglob() The values returned from pathlib’s path. glob() and path. rglob() include the path as a prefix, unlike the results of glob. glob(root_dir=path). The values returned from pathlib’s path. glob() and path. rglob() include the path as a prefix, unlike the results of glob. glob(root_dir=path). path. glob() path. rglob() glob. glob(root_dir=path) The values returned from pathlib’s path. glob() and path. rglob() may include path itself, for example when globbing “”, whereas the results of glob. glob(root_dir=path) never include an empty string that would correspond to path. The values returned from pathlib’s path. glob() and path. rglob() may include path itself, for example when globbing “”, whereas the results of glob. glob(root_dir=path) never include an empty string that would correspond to path. path. glob() path. rglob() ** glob. glob(root_dir=path) ## Comparison to the os and os. path modules¶ os os. path pathlib implements path operations using PurePath and Path objects, and so it’s said to be object-oriented.