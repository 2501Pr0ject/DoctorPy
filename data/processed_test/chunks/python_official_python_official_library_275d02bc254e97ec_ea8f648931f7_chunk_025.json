{
  "chunk_id": "python_official_python_official_library_275d02bc254e97ec_ea8f648931f7_chunk_025",
  "original_doc_id": "python_official_python_official_library_275d02bc254e97ec_ea8f648931f7",
  "content": "## Files and Directories¶ On some Unix platforms, many of these functions support one or more of these features: specifying a file descriptor: Normally the path argument provided to functions in the os module must be a string specifying a file path. However, some functions now alternatively accept an open file descriptor for their path argument. The function will then operate on the file referred to by the descriptor. (For POSIX systems, Python will call the variant of the function prefixed with f (e. g. call fchdir instead of chdir). ) You can check whether or not path can be specified as a file descriptor for a particular function on your platform using os. supports_fd. If this functionality is unavailable, using it will raise a NotImplementedError. If the function also supports dir_fd or follow_symlinks arguments, it’s an error to specify one of those when supplying path as a file descriptor. specifying a file descriptor: Normally the path argument provided to functions in the os module must be a string specifying a file path. However, some functions now alternatively accept an open file descriptor for their path argument. The function will then operate on the file referred to by the descriptor. (For POSIX systems, Python will call the variant of the function prefixed with f (e. g. call fchdir instead of chdir). ) os f fchdir chdir You can check whether or not path can be specified as a file descriptor for a particular function on your platform using os. supports_fd. If this functionality is unavailable, using it will raise a NotImplementedError. os. supports_fd NotImplementedError If the function also supports dir_fd or follow_symlinks arguments, it’s an error to specify one of those when supplying path as a file descriptor. paths relative to directory descriptors: If dir_fd is not None, it should be a file descriptor referring to a directory, and the path to operate on should be relative; path will then be relative to that directory. If the path is absolute, dir_fd is ignored. (For POSIX systems, Python will call the variant of the function with an at suffix and possibly prefixed with f (e. g. call faccessat instead of access). You can check whether or not dir_fd is supported for a particular function on your platform using os. supports_dir_fd. If it’s unavailable, using it will raise a NotImplementedError.",
  "title": "os — Miscellaneous operating system interfaces.13.5",
  "section": "python_official",
  "subsection": "library",
  "chunk_index": 25,
  "start_char": 53777,
  "end_char": 56130,
  "token_count": 474,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_library_275d02bc254e97ec.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:24.793471"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_library_275d02bc254e97ec_ea8f648931f7_chunk_025.txt"
}