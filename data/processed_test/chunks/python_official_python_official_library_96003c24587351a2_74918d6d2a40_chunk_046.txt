0 int pow(inv_base, -exp, mod) 38 97 >>> pow(38, -1, mod=97) 23 >>> 23 * 38 % 97 == 1 True int pow str() None print() write(string) None sys. stdout print() file. write(. ) x class C: def __init__(self): self. _x = None def getx(self): return self. _x def setx(self, value): self. _x = value def delx(self): del self. _x x = property(getx, setx, delx, "I'm the 'x' property. ") c. x c. x = value del c. x property() class Parrot: def __init__(self): self. _voltage = 100000 @property def voltage(self): """Get the current voltage. """ return self. _voltage @property voltage() getter setter deleter class C: def __init__(self): self. _x = None @property def x(self): """I'm the 'x' property. """ return self. _x @x. setter def x(self, value): self. _x = value @x. deleter def x(self): del self. _x x fget fset fdel range eval() __repr__() sys. displayhook() RuntimeError class Person: def __init__(self, name, age): self. name = name self. age = age def __repr__(self): return f"Person('{self. name}', {self. age})" __reversed__() __len__() __getitem__() 0 None round() round(0. 5) round(-0. 5) 0 round(1. 5) 2 None number round number. __round__ round() round(2. 675, 2) 2. 67 2. 68 set set set frozenset list tuple dict collections getattr() setattr(x, 'foobar', 123) x. foobar = 123 __getattribute__() __slots__ getattr() setattr() range(start, stop, step) None start stop step a[start:stop:step] a[start:stop, i] itertools. islice() start stop step key=str. lower None True functools.