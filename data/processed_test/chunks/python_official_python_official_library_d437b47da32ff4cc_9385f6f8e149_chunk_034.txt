excepthook sys. excepthook hook type value traceback hook None RuntimeError sys. excepthook sys. unraisablehook() threading. excepthook() threading. Thread. run() breakpointhook displayhook excepthook unraisablehook breakpointhook displayhook excepthook unraisablehook except except* None e exception() e exc_info() (type(e), e, e. __traceback__) BaseException None type traceback value exc_info() '/usr/local' --exec-prefix pyconfig. h exec_prefix/lib/pythonX. Y/config exec_prefix/lib/pythonX. Y/lib-dynload 3. 2 site. py base_exec_prefix sys. executable None SystemExit None stderr sys. exit("some error message") exit() try SystemExit -d -i -i -I -O -OO -B -s -S -E -v -b -q -R -X dev -X utf8 -P -X int_max_str_digits -X warn_default_encoding quiet -q hash_randomization division_warning isolated -I isolated dev_mode utf8_mode -X utf8 warn_default_encoding -X warn_default_encoding safe_path -P int_max_str_digits float. h float_info DBL_EPSILON math. ulp() DBL_DIG DBL_MANT_DIG radix DBL_MAX DBL_MAX_EXP radix**(e-1) DBL_MAX_10_EXP 10**e DBL_MIN math. ulp(0. 0) DBL_MIN_EXP radix**(e-1) DBL_MIN_10_EXP 10**e FLT_RADIX FLT_ROUNDS FLT_ROUNDS -1 0 1 2 3 FLT_ROUNDS sys. float_info. dig s sys. float_info. dig s >>> import sys >>> sys. float_info. dig 15 >>> s = '3. 14159265358979' # decimal string with 15 significant digits >>> format(float(s), '. 15g') # convert to float and back -> same value '3. 14159265358979' sys. float_info. dig >>> s = '9876543211234567' # 16 significant digits is too many. >>> format(float(s), '.