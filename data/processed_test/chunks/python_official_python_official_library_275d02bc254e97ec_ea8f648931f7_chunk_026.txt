paths relative to directory descriptors: If dir_fd is not None, it should be a file descriptor referring to a directory, and the path to operate on should be relative; path will then be relative to that directory. If the path is absolute, dir_fd is ignored. (For POSIX systems, Python will call the variant of the function with an at suffix and possibly prefixed with f (e. g. call faccessat instead of access). None at f faccessat access You can check whether or not dir_fd is supported for a particular function on your platform using os. supports_dir_fd. If it’s unavailable, using it will raise a NotImplementedError. os. supports_dir_fd NotImplementedError not following symlinks: If follow_symlinks is False, and the last element of the path to operate on is a symbolic link, the function will operate on the symbolic link itself rather than the file pointed to by the link. (For POSIX systems, Python will call the l. variant of the function. ) You can check whether or not follow_symlinks is supported for a particular function on your platform using os. supports_follow_symlinks. If it’s unavailable, using it will raise a NotImplementedError. not following symlinks: If follow_symlinks is False, and the last element of the path to operate on is a symbolic link, the function will operate on the symbolic link itself rather than the file pointed to by the link. (For POSIX systems, Python will call the l. variant of the function. ) False l. You can check whether or not follow_symlinks is supported for a particular function on your platform using os. supports_follow_symlinks. If it’s unavailable, using it will raise a NotImplementedError. os. supports_follow_symlinks NotImplementedError Use the real uid/gid to test for access to path. Note that most operations will use the effective uid/gid, therefore this routine can be used in a suid/sgid environment to test if the invoking user has the specified access to path. mode should be F_OK to test the existence of path, or it can be the inclusive OR of one or more of R_OK, W_OK, and X_OK to test permissions. Return True if access is allowed, False if not. See the Unix man page access(2) for more information. F_OK R_OK W_OK X_OK True False This function can support specifying paths relative to directory descriptors and not following symlinks.