97 >>> m[0] Traceback (most recent call last): File "<stdin>", line 1, in <module> ValueError: operation forbidden on released memoryview object [byte_length//new_itemsize] struct >>> import array >>> a = array. array('l', [1,2,3]) >>> x = memoryview(a) >>> x. format 'l' >>> x. itemsize 8 >>> len(x) 3 >>> x. nbytes 24 >>> y = x. cast('B') >>> y. format 'B' >>> y. itemsize 1 >>> len(y) 24 >>> y. nbytes 24 >>> b = bytearray(b'zyz') >>> x = memoryview(b) >>> x[0] = b'a' Traceback (most recent call last):. TypeError: memoryview: invalid type for format 'B' >>> y = x. cast('c') >>> y[0] = b'a' >>> b bytearray(b'ayz') >>> import struct >>> buf = struct. pack("i"*12, *list(range(12))) >>> x = memoryview(buf) >>> y = x. cast('i', shape=[2,2,3]) >>> y. tolist() [[[0, 1, 2], [3, 4, 5]], [[6, 7, 8], [9, 10, 11]]] >>> y. format 'i' >>> y. itemsize 4 >>> len(y) 2 >>> y. nbytes 48 >>> z = y. cast('b') >>> z. format 'b' >>> z. itemsize 1 >>> len(z) 48 >>> z. nbytes 48 >>> buf = struct. pack("L"*6, *list(range(6))) >>> x = memoryview(buf) >>> y = x. cast('L', shape=[2,3]) >>> len(y) 2 >>> y. nbytes 48 >>> y. tolist() [[0, 1, 2], [3, 4, 5]] >>> b = bytearray(b'xyz') >>> m = memoryview(b) >>> m. obj is b True nbytes == product(shape) * itemsize == len(m. tobytes()) len(m) >>> import array >>> a = array.