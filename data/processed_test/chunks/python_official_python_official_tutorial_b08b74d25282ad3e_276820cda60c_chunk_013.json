{
  "chunk_id": "python_official_python_official_tutorial_b08b74d25282ad3e_276820cda60c_chunk_013",
  "original_doc_id": "python_official_python_official_tutorial_b08b74d25282ad3e_276820cda60c",
  "content": ">>> for x in range(1, 11):. print('{0:2d} {1:3d} {2:4d}'. format(x, x*x, x*x*x)). 1 1 1 2 4 8 3 9 27 4 16 64 5 25 125 6 36 216 7 49 343 8 64 512 9 81 729 10 100 1000 str. format() >>> for x in range(1, 11):. print(repr(x). rjust(2), repr(x*x). rjust(3), end=' '). # Note use of 'end' on previous line. print(repr(x*x*x). rjust(4)). 1 1 1 2 4 8 3 9 27 4 16 64 5 25 125 6 36 216 7 49 343 8 64 512 9 81 729 10 100 1000 print() str. rjust() str. ljust() str. center() x. ljust(n)[:n] str. zfill() >>> '12'. zfill(5) '00012' >>> '-3. 14'. zfill(7) '-003. 14' >>> '3. 14159265359'. zfill(5) '3. 14159265359' format % values % >>> import math >>> print('The value of pi is approximately %5. 3f. ' % math. pi) The value of pi is approximately 3. 142. open() open(filename, mode, encoding=None) >>> f = open('workfile', 'w', encoding=\"utf-8\") 'r' 'w' 'a' 'r+' 'r' open() encoding=\"utf-8\" 'b' bytes \\n \\r\\n \\n \\n JPEG EXE with with try finally >>> with open('workfile', encoding=\"utf-8\") as f:. read_data = f. read() >>> # We can check that the file has been automatically closed. >>> f. closed True with f. close() f. write() with f. close() f. write() with f. close() >>> f. close() >>> f.",
  "title": "7. Input and Output.13.5",
  "section": "python_official",
  "subsection": "tutorial",
  "chunk_index": 13,
  "start_char": 24320,
  "end_char": 25501,
  "token_count": 491,
  "metadata": {
    "original_file": "data/raw/documentation_test/python_official/python_official_tutorial_b08b74d25282ad3e.md",
    "chunk_method": "paragraph_based",
    "overlap_chars": 100,
    "processing_date": "2025-06-11T23:57:37.893265"
  },
  "file_path": "data/processed_test/chunks/python_official_python_official_tutorial_b08b74d25282ad3e_276820cda60c_chunk_013.txt"
}